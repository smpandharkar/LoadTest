/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "maxY": 6225.0, "series": [{"data": [[0.0, 428.0], [0.1, 428.0], [0.2, 453.0], [0.3, 453.0], [0.4, 512.0], [0.5, 512.0], [0.6, 512.0], [0.7, 526.0], [0.8, 540.0], [0.9, 540.0], [1.0, 636.0], [1.1, 636.0], [1.2, 712.0], [1.3, 712.0], [1.4, 727.0], [1.5, 727.0], [1.6, 734.0], [1.7, 734.0], [1.8, 793.0], [1.9, 793.0], [2.0, 831.0], [2.1, 831.0], [2.2, 866.0], [2.3, 866.0], [2.4, 870.0], [2.5, 870.0], [2.6, 881.0], [2.7, 881.0], [2.8, 881.0], [2.9, 892.0], [3.0, 892.0], [3.1, 895.0], [3.2, 895.0], [3.3, 901.0], [3.4, 901.0], [3.5, 904.0], [3.6, 904.0], [3.7, 909.0], [3.8, 909.0], [3.9, 915.0], [4.0, 915.0], [4.1, 920.0], [4.2, 920.0], [4.3, 925.0], [4.4, 925.0], [4.5, 932.0], [4.6, 932.0], [4.7, 935.0], [4.8, 935.0], [4.9, 941.0], [5.0, 941.0], [5.1, 948.0], [5.2, 948.0], [5.3, 949.0], [5.4, 949.0], [5.5, 953.0], [5.6, 953.0], [5.7, 963.0], [5.8, 963.0], [5.9, 965.0], [6.0, 965.0], [6.1, 972.0], [6.2, 972.0], [6.3, 985.0], [6.4, 985.0], [6.5, 992.0], [6.6, 992.0], [6.7, 1004.0], [6.8, 1004.0], [6.9, 1006.0], [7.0, 1006.0], [7.1, 1015.0], [7.2, 1015.0], [7.3, 1023.0], [7.4, 1023.0], [7.5, 1025.0], [7.6, 1025.0], [7.7, 1028.0], [7.8, 1028.0], [7.9, 1028.0], [8.0, 1028.0], [8.1, 1031.0], [8.2, 1031.0], [8.3, 1032.0], [8.4, 1032.0], [8.5, 1042.0], [8.6, 1042.0], [8.7, 1043.0], [8.8, 1050.0], [8.9, 1050.0], [9.0, 1055.0], [9.1, 1055.0], [9.2, 1135.0], [9.3, 1135.0], [9.4, 1190.0], [9.5, 1190.0], [9.6, 1199.0], [9.7, 1199.0], [9.8, 1219.0], [9.9, 1219.0], [10.0, 1222.0], [10.1, 1222.0], [10.2, 1224.0], [10.3, 1224.0], [10.4, 1278.0], [10.5, 1278.0], [10.6, 1291.0], [10.7, 1291.0], [10.8, 1295.0], [10.9, 1295.0], [11.0, 1297.0], [11.1, 1297.0], [11.2, 1301.0], [11.3, 1301.0], [11.4, 1301.0], [11.5, 1301.0], [11.6, 1325.0], [11.7, 1325.0], [11.8, 1332.0], [11.9, 1332.0], [12.0, 1341.0], [12.1, 1341.0], [12.2, 1344.0], [12.3, 1344.0], [12.4, 1345.0], [12.5, 1345.0], [12.6, 1363.0], [12.7, 1363.0], [12.8, 1379.0], [12.9, 1379.0], [13.0, 1409.0], [13.1, 1409.0], [13.2, 1432.0], [13.3, 1432.0], [13.4, 1457.0], [13.5, 1457.0], [13.6, 1461.0], [13.7, 1461.0], [13.8, 1474.0], [13.9, 1474.0], [14.0, 1500.0], [14.1, 1500.0], [14.2, 1506.0], [14.3, 1506.0], [14.4, 1506.0], [14.5, 1506.0], [14.6, 1520.0], [14.7, 1520.0], [14.8, 1534.0], [14.9, 1534.0], [15.0, 1548.0], [15.1, 1548.0], [15.2, 1556.0], [15.3, 1556.0], [15.4, 1568.0], [15.5, 1568.0], [15.6, 1570.0], [15.7, 1570.0], [15.8, 1577.0], [15.9, 1577.0], [16.0, 1583.0], [16.1, 1583.0], [16.2, 1591.0], [16.3, 1591.0], [16.4, 1594.0], [16.5, 1594.0], [16.6, 1596.0], [16.7, 1596.0], [16.8, 1599.0], [16.9, 1599.0], [17.0, 1613.0], [17.1, 1613.0], [17.2, 1616.0], [17.3, 1616.0], [17.4, 1618.0], [17.5, 1618.0], [17.6, 1618.0], [17.7, 1618.0], [17.8, 1629.0], [17.9, 1629.0], [18.0, 1635.0], [18.1, 1635.0], [18.2, 1663.0], [18.3, 1663.0], [18.4, 1667.0], [18.5, 1667.0], [18.6, 1669.0], [18.7, 1669.0], [18.8, 1669.0], [18.9, 1669.0], [19.0, 1670.0], [19.1, 1670.0], [19.2, 1676.0], [19.3, 1676.0], [19.4, 1678.0], [19.5, 1678.0], [19.6, 1686.0], [19.7, 1686.0], [19.8, 1688.0], [19.9, 1688.0], [20.0, 1688.0], [20.1, 1688.0], [20.2, 1699.0], [20.3, 1699.0], [20.4, 1706.0], [20.5, 1706.0], [20.6, 1706.0], [20.7, 1706.0], [20.8, 1717.0], [20.9, 1717.0], [21.0, 1720.0], [21.1, 1720.0], [21.2, 1722.0], [21.3, 1722.0], [21.4, 1724.0], [21.5, 1724.0], [21.6, 1734.0], [21.7, 1734.0], [21.8, 1753.0], [21.9, 1753.0], [22.0, 1761.0], [22.1, 1761.0], [22.2, 1766.0], [22.3, 1766.0], [22.4, 1768.0], [22.5, 1768.0], [22.6, 1769.0], [22.7, 1769.0], [22.8, 1770.0], [22.9, 1770.0], [23.0, 1770.0], [23.1, 1770.0], [23.2, 1771.0], [23.3, 1771.0], [23.4, 1772.0], [23.5, 1772.0], [23.6, 1773.0], [23.7, 1773.0], [23.8, 1774.0], [23.9, 1774.0], [24.0, 1777.0], [24.1, 1777.0], [24.2, 1777.0], [24.3, 1777.0], [24.4, 1780.0], [24.5, 1780.0], [24.6, 1781.0], [24.7, 1781.0], [24.8, 1782.0], [24.9, 1782.0], [25.0, 1784.0], [25.1, 1784.0], [25.2, 1786.0], [25.3, 1786.0], [25.4, 1786.0], [25.5, 1786.0], [25.6, 1800.0], [25.7, 1800.0], [25.8, 1804.0], [25.9, 1804.0], [26.0, 1804.0], [26.1, 1804.0], [26.2, 1809.0], [26.3, 1809.0], [26.4, 1810.0], [26.5, 1810.0], [26.6, 1816.0], [26.7, 1816.0], [26.8, 1820.0], [26.9, 1820.0], [27.0, 1824.0], [27.1, 1824.0], [27.2, 1827.0], [27.3, 1827.0], [27.4, 1834.0], [27.5, 1834.0], [27.6, 1834.0], [27.7, 1834.0], [27.8, 1836.0], [27.9, 1836.0], [28.0, 1852.0], [28.1, 1852.0], [28.2, 1871.0], [28.3, 1871.0], [28.4, 1874.0], [28.5, 1874.0], [28.6, 1877.0], [28.7, 1877.0], [28.8, 1879.0], [28.9, 1879.0], [29.0, 1880.0], [29.1, 1880.0], [29.2, 1899.0], [29.3, 1899.0], [29.4, 1906.0], [29.5, 1906.0], [29.6, 1907.0], [29.7, 1907.0], [29.8, 1911.0], [29.9, 1911.0], [30.0, 1915.0], [30.1, 1915.0], [30.2, 1921.0], [30.3, 1921.0], [30.4, 1924.0], [30.5, 1924.0], [30.6, 1926.0], [30.7, 1926.0], [30.8, 1926.0], [30.9, 1926.0], [31.0, 1928.0], [31.1, 1928.0], [31.2, 1929.0], [31.3, 1929.0], [31.4, 1930.0], [31.5, 1930.0], [31.6, 1932.0], [31.7, 1932.0], [31.8, 1943.0], [31.9, 1943.0], [32.0, 1953.0], [32.1, 1953.0], [32.2, 1958.0], [32.3, 1958.0], [32.4, 1963.0], [32.5, 1963.0], [32.6, 1970.0], [32.7, 1970.0], [32.8, 1980.0], [32.9, 1980.0], [33.0, 1987.0], [33.1, 1987.0], [33.2, 1994.0], [33.3, 1994.0], [33.4, 1999.0], [33.5, 1999.0], [33.6, 2004.0], [33.7, 2004.0], [33.8, 2005.0], [33.9, 2005.0], [34.0, 2007.0], [34.1, 2007.0], [34.2, 2010.0], [34.3, 2010.0], [34.4, 2012.0], [34.5, 2012.0], [34.6, 2016.0], [34.7, 2016.0], [34.8, 2016.0], [34.9, 2016.0], [35.0, 2021.0], [35.1, 2021.0], [35.2, 2028.0], [35.3, 2028.0], [35.4, 2034.0], [35.5, 2034.0], [35.6, 2046.0], [35.7, 2046.0], [35.8, 2058.0], [35.9, 2058.0], [36.0, 2062.0], [36.1, 2062.0], [36.2, 2071.0], [36.3, 2071.0], [36.4, 2074.0], [36.5, 2074.0], [36.6, 2081.0], [36.7, 2081.0], [36.8, 2087.0], [36.9, 2087.0], [37.0, 2090.0], [37.1, 2090.0], [37.2, 2099.0], [37.3, 2099.0], [37.4, 2140.0], [37.5, 2140.0], [37.6, 2142.0], [37.7, 2142.0], [37.8, 2150.0], [37.9, 2150.0], [38.0, 2157.0], [38.1, 2157.0], [38.2, 2164.0], [38.3, 2164.0], [38.4, 2164.0], [38.5, 2168.0], [38.6, 2168.0], [38.7, 2193.0], [38.8, 2193.0], [38.9, 2251.0], [39.0, 2251.0], [39.1, 2259.0], [39.2, 2259.0], [39.3, 2268.0], [39.4, 2268.0], [39.5, 2272.0], [39.6, 2272.0], [39.7, 2273.0], [39.8, 2273.0], [39.9, 2276.0], [40.0, 2276.0], [40.1, 2277.0], [40.2, 2277.0], [40.3, 2280.0], [40.4, 2280.0], [40.5, 2283.0], [40.6, 2283.0], [40.7, 2288.0], [40.8, 2288.0], [40.9, 2290.0], [41.0, 2290.0], [41.1, 2295.0], [41.2, 2295.0], [41.3, 2297.0], [41.4, 2297.0], [41.5, 2298.0], [41.6, 2298.0], [41.7, 2300.0], [41.8, 2300.0], [41.9, 2310.0], [42.0, 2310.0], [42.1, 2311.0], [42.2, 2311.0], [42.3, 2311.0], [42.4, 2311.0], [42.5, 2317.0], [42.6, 2317.0], [42.7, 2317.0], [42.8, 2317.0], [42.9, 2319.0], [43.0, 2319.0], [43.1, 2321.0], [43.2, 2321.0], [43.3, 2326.0], [43.4, 2326.0], [43.5, 2330.0], [43.6, 2330.0], [43.7, 2330.0], [43.8, 2330.0], [43.9, 2330.0], [44.0, 2330.0], [44.1, 2331.0], [44.2, 2331.0], [44.3, 2332.0], [44.4, 2332.0], [44.5, 2335.0], [44.6, 2335.0], [44.7, 2337.0], [44.8, 2337.0], [44.9, 2338.0], [45.0, 2338.0], [45.1, 2342.0], [45.2, 2342.0], [45.3, 2349.0], [45.4, 2349.0], [45.5, 2350.0], [45.6, 2350.0], [45.7, 2350.0], [45.8, 2350.0], [45.9, 2356.0], [46.0, 2356.0], [46.1, 2357.0], [46.2, 2357.0], [46.3, 2362.0], [46.4, 2362.0], [46.5, 2363.0], [46.6, 2363.0], [46.7, 2375.0], [46.8, 2375.0], [46.9, 2382.0], [47.0, 2382.0], [47.1, 2384.0], [47.2, 2384.0], [47.3, 2396.0], [47.4, 2396.0], [47.5, 2396.0], [47.6, 2396.0], [47.7, 2397.0], [47.8, 2397.0], [47.9, 2404.0], [48.0, 2404.0], [48.1, 2405.0], [48.2, 2405.0], [48.3, 2406.0], [48.4, 2406.0], [48.5, 2413.0], [48.6, 2413.0], [48.7, 2416.0], [48.8, 2416.0], [48.9, 2428.0], [49.0, 2428.0], [49.1, 2438.0], [49.2, 2438.0], [49.3, 2448.0], [49.4, 2448.0], [49.5, 2487.0], [49.6, 2487.0], [49.7, 2494.0], [49.8, 2494.0], [49.9, 2495.0], [50.0, 2495.0], [50.1, 2507.0], [50.2, 2507.0], [50.3, 2513.0], [50.4, 2513.0], [50.5, 2515.0], [50.6, 2515.0], [50.7, 2542.0], [50.8, 2542.0], [50.9, 2581.0], [51.0, 2581.0], [51.1, 2597.0], [51.2, 2597.0], [51.3, 2623.0], [51.4, 2623.0], [51.5, 2667.0], [51.6, 2667.0], [51.7, 2669.0], [51.8, 2669.0], [51.9, 2671.0], [52.0, 2671.0], [52.1, 2678.0], [52.2, 2678.0], [52.3, 2680.0], [52.4, 2680.0], [52.5, 2684.0], [52.6, 2684.0], [52.7, 2700.0], [52.8, 2700.0], [52.9, 2724.0], [53.0, 2724.0], [53.1, 2740.0], [53.2, 2740.0], [53.3, 2742.0], [53.4, 2742.0], [53.5, 2747.0], [53.6, 2747.0], [53.7, 2750.0], [53.8, 2750.0], [53.9, 2752.0], [54.0, 2752.0], [54.1, 2760.0], [54.2, 2760.0], [54.3, 2767.0], [54.4, 2767.0], [54.5, 2784.0], [54.6, 2784.0], [54.7, 2791.0], [54.8, 2791.0], [54.9, 2803.0], [55.0, 2803.0], [55.1, 2814.0], [55.2, 2814.0], [55.3, 2822.0], [55.4, 2822.0], [55.5, 2823.0], [55.6, 2823.0], [55.7, 2843.0], [55.8, 2843.0], [55.9, 2852.0], [56.0, 2852.0], [56.1, 2875.0], [56.2, 2875.0], [56.3, 2888.0], [56.4, 2888.0], [56.5, 2895.0], [56.6, 2895.0], [56.7, 2915.0], [56.8, 2915.0], [56.9, 2921.0], [57.0, 2921.0], [57.1, 2948.0], [57.2, 2948.0], [57.3, 2949.0], [57.4, 2949.0], [57.5, 2952.0], [57.6, 2952.0], [57.7, 2955.0], [57.8, 2955.0], [57.9, 2956.0], [58.0, 2956.0], [58.1, 2956.0], [58.2, 2956.0], [58.3, 2965.0], [58.4, 2965.0], [58.5, 2981.0], [58.6, 2981.0], [58.7, 2982.0], [58.8, 2982.0], [58.9, 2985.0], [59.0, 2985.0], [59.1, 2993.0], [59.2, 2993.0], [59.3, 3007.0], [59.4, 3007.0], [59.5, 3008.0], [59.6, 3008.0], [59.7, 3009.0], [59.8, 3009.0], [59.9, 3010.0], [60.0, 3010.0], [60.1, 3012.0], [60.2, 3012.0], [60.3, 3012.0], [60.4, 3012.0], [60.5, 3014.0], [60.6, 3014.0], [60.7, 3016.0], [60.8, 3016.0], [60.9, 3021.0], [61.0, 3021.0], [61.1, 3026.0], [61.2, 3026.0], [61.3, 3026.0], [61.4, 3026.0], [61.5, 3031.0], [61.6, 3031.0], [61.7, 3049.0], [61.8, 3049.0], [61.9, 3049.0], [62.0, 3049.0], [62.1, 3065.0], [62.2, 3065.0], [62.3, 3068.0], [62.4, 3068.0], [62.5, 3107.0], [62.6, 3107.0], [62.7, 3130.0], [62.8, 3130.0], [62.9, 3153.0], [63.0, 3153.0], [63.1, 3159.0], [63.2, 3159.0], [63.3, 3174.0], [63.4, 3174.0], [63.5, 3174.0], [63.6, 3174.0], [63.7, 3176.0], [63.8, 3176.0], [63.9, 3182.0], [64.0, 3182.0], [64.1, 3183.0], [64.2, 3183.0], [64.3, 3187.0], [64.4, 3187.0], [64.5, 3190.0], [64.6, 3190.0], [64.7, 3194.0], [64.8, 3194.0], [64.9, 3195.0], [65.0, 3195.0], [65.1, 3206.0], [65.2, 3206.0], [65.3, 3207.0], [65.4, 3207.0], [65.5, 3208.0], [65.6, 3208.0], [65.7, 3211.0], [65.8, 3211.0], [65.9, 3212.0], [66.0, 3212.0], [66.1, 3217.0], [66.2, 3217.0], [66.3, 3218.0], [66.4, 3218.0], [66.5, 3220.0], [66.6, 3220.0], [66.7, 3238.0], [66.8, 3238.0], [66.9, 3239.0], [67.0, 3239.0], [67.1, 3240.0], [67.2, 3240.0], [67.3, 3242.0], [67.4, 3242.0], [67.5, 3242.0], [67.6, 3242.0], [67.7, 3245.0], [67.8, 3245.0], [67.9, 3249.0], [68.0, 3249.0], [68.1, 3256.0], [68.2, 3256.0], [68.3, 3259.0], [68.4, 3259.0], [68.5, 3260.0], [68.6, 3260.0], [68.7, 3260.0], [68.8, 3260.0], [68.9, 3262.0], [69.0, 3262.0], [69.1, 3262.0], [69.2, 3262.0], [69.3, 3264.0], [69.4, 3264.0], [69.5, 3287.0], [69.6, 3287.0], [69.7, 3293.0], [69.8, 3293.0], [69.9, 3335.0], [70.0, 3335.0], [70.1, 3339.0], [70.2, 3339.0], [70.3, 3360.0], [70.4, 3360.0], [70.5, 3366.0], [70.6, 3366.0], [70.7, 3400.0], [70.8, 3400.0], [70.9, 3402.0], [71.0, 3402.0], [71.1, 3406.0], [71.2, 3406.0], [71.3, 3409.0], [71.4, 3409.0], [71.5, 3410.0], [71.6, 3410.0], [71.7, 3412.0], [71.8, 3412.0], [71.9, 3418.0], [72.0, 3418.0], [72.1, 3422.0], [72.2, 3422.0], [72.3, 3425.0], [72.4, 3425.0], [72.5, 3445.0], [72.6, 3445.0], [72.7, 3447.0], [72.8, 3447.0], [72.9, 3468.0], [73.0, 3468.0], [73.1, 3468.0], [73.2, 3468.0], [73.3, 3469.0], [73.4, 3469.0], [73.5, 3486.0], [73.6, 3486.0], [73.7, 3522.0], [73.8, 3522.0], [73.9, 3522.0], [74.0, 3522.0], [74.1, 3527.0], [74.2, 3527.0], [74.3, 3553.0], [74.4, 3553.0], [74.5, 3563.0], [74.6, 3563.0], [74.7, 3575.0], [74.8, 3575.0], [74.9, 3590.0], [75.0, 3590.0], [75.1, 3594.0], [75.2, 3594.0], [75.3, 3608.0], [75.4, 3608.0], [75.5, 3609.0], [75.6, 3609.0], [75.7, 3626.0], [75.8, 3626.0], [75.9, 3631.0], [76.0, 3631.0], [76.1, 3635.0], [76.2, 3635.0], [76.3, 3645.0], [76.4, 3645.0], [76.5, 3681.0], [76.6, 3681.0], [76.7, 3686.0], [76.8, 3686.0], [76.9, 3689.0], [77.0, 3689.0], [77.1, 3693.0], [77.2, 3693.0], [77.3, 3732.0], [77.4, 3732.0], [77.5, 3732.0], [77.6, 3732.0], [77.7, 3743.0], [77.8, 3743.0], [77.9, 3743.0], [78.0, 3743.0], [78.1, 3768.0], [78.2, 3768.0], [78.3, 3770.0], [78.4, 3770.0], [78.5, 3781.0], [78.6, 3781.0], [78.7, 3787.0], [78.8, 3787.0], [78.9, 3793.0], [79.0, 3793.0], [79.1, 3805.0], [79.2, 3805.0], [79.3, 3814.0], [79.4, 3814.0], [79.5, 3817.0], [79.6, 3817.0], [79.7, 3859.0], [79.8, 3859.0], [79.9, 3863.0], [80.0, 3863.0], [80.1, 3877.0], [80.2, 3877.0], [80.3, 3902.0], [80.4, 3902.0], [80.5, 3934.0], [80.6, 3934.0], [80.7, 3941.0], [80.8, 3941.0], [80.9, 3983.0], [81.0, 3983.0], [81.1, 3988.0], [81.2, 3988.0], [81.3, 4001.0], [81.4, 4001.0], [81.5, 4019.0], [81.6, 4019.0], [81.7, 4031.0], [81.8, 4031.0], [81.9, 4035.0], [82.0, 4035.0], [82.1, 4052.0], [82.2, 4052.0], [82.3, 4068.0], [82.4, 4068.0], [82.5, 4130.0], [82.6, 4130.0], [82.7, 4149.0], [82.8, 4149.0], [82.9, 4199.0], [83.0, 4199.0], [83.1, 4243.0], [83.2, 4243.0], [83.3, 4245.0], [83.4, 4245.0], [83.5, 4250.0], [83.6, 4250.0], [83.7, 4255.0], [83.8, 4255.0], [83.9, 4257.0], [84.0, 4257.0], [84.1, 4280.0], [84.2, 4280.0], [84.3, 4299.0], [84.4, 4299.0], [84.5, 4313.0], [84.6, 4313.0], [84.7, 4314.0], [84.8, 4314.0], [84.9, 4321.0], [85.0, 4321.0], [85.1, 4326.0], [85.2, 4326.0], [85.3, 4380.0], [85.4, 4380.0], [85.5, 4383.0], [85.6, 4383.0], [85.7, 4418.0], [85.8, 4418.0], [85.9, 4423.0], [86.0, 4423.0], [86.1, 4424.0], [86.2, 4424.0], [86.3, 4425.0], [86.4, 4425.0], [86.5, 4455.0], [86.6, 4455.0], [86.7, 4459.0], [86.8, 4459.0], [86.9, 4466.0], [87.0, 4466.0], [87.1, 4487.0], [87.2, 4487.0], [87.3, 4488.0], [87.4, 4488.0], [87.5, 4521.0], [87.6, 4521.0], [87.7, 4535.0], [87.8, 4535.0], [87.9, 4549.0], [88.0, 4549.0], [88.1, 4553.0], [88.2, 4553.0], [88.3, 4567.0], [88.4, 4567.0], [88.5, 4580.0], [88.6, 4580.0], [88.7, 4653.0], [88.8, 4653.0], [88.9, 4699.0], [89.0, 4699.0], [89.1, 4720.0], [89.2, 4720.0], [89.3, 4766.0], [89.4, 4766.0], [89.5, 4767.0], [89.6, 4767.0], [89.7, 4786.0], [89.8, 4786.0], [89.9, 4786.0], [90.0, 4786.0], [90.1, 4789.0], [90.2, 4789.0], [90.3, 4796.0], [90.4, 4796.0], [90.5, 4830.0], [90.6, 4830.0], [90.7, 4839.0], [90.8, 4839.0], [90.9, 4848.0], [91.0, 4848.0], [91.1, 4906.0], [91.2, 4906.0], [91.3, 4927.0], [91.4, 4927.0], [91.5, 4955.0], [91.6, 4955.0], [91.7, 4958.0], [91.8, 4958.0], [91.9, 4989.0], [92.0, 4989.0], [92.1, 5004.0], [92.2, 5004.0], [92.3, 5015.0], [92.4, 5015.0], [92.5, 5028.0], [92.6, 5028.0], [92.7, 5041.0], [92.8, 5041.0], [92.9, 5057.0], [93.0, 5057.0], [93.1, 5077.0], [93.2, 5077.0], [93.3, 5129.0], [93.4, 5129.0], [93.5, 5137.0], [93.6, 5137.0], [93.7, 5160.0], [93.8, 5160.0], [93.9, 5162.0], [94.0, 5162.0], [94.1, 5187.0], [94.2, 5187.0], [94.3, 5209.0], [94.4, 5209.0], [94.5, 5275.0], [94.6, 5275.0], [94.7, 5284.0], [94.8, 5284.0], [94.9, 5336.0], [95.0, 5336.0], [95.1, 5392.0], [95.2, 5392.0], [95.3, 5420.0], [95.4, 5420.0], [95.5, 5440.0], [95.6, 5440.0], [95.7, 5472.0], [95.8, 5472.0], [95.9, 5498.0], [96.0, 5498.0], [96.1, 5540.0], [96.2, 5540.0], [96.3, 5569.0], [96.4, 5569.0], [96.5, 5571.0], [96.6, 5571.0], [96.7, 5604.0], [96.8, 5604.0], [96.9, 5659.0], [97.0, 5659.0], [97.1, 5722.0], [97.2, 5722.0], [97.3, 5773.0], [97.4, 5773.0], [97.5, 5775.0], [97.6, 5775.0], [97.7, 5812.0], [97.8, 5812.0], [97.9, 5825.0], [98.0, 5825.0], [98.1, 5876.0], [98.2, 5876.0], [98.3, 5897.0], [98.4, 5897.0], [98.5, 5917.0], [98.6, 5917.0], [98.7, 5956.0], [98.8, 5956.0], [98.9, 5961.0], [99.0, 5961.0], [99.1, 5970.0], [99.2, 5970.0], [99.3, 6059.0], [99.4, 6059.0], [99.5, 6068.0], [99.6, 6068.0], [99.7, 6119.0], [99.8, 6119.0], [99.9, 6127.0], [100.0, 6127.0]], "isOverall": false, "label": "Post User", "isController": false}, {"data": [[0.0, 25.0], [0.1, 25.0], [0.2, 96.0], [0.3, 96.0], [0.4, 200.0], [0.5, 200.0], [0.6, 200.0], [0.7, 210.0], [0.8, 228.0], [0.9, 228.0], [1.0, 249.0], [1.1, 249.0], [1.2, 252.0], [1.3, 252.0], [1.4, 268.0], [1.5, 268.0], [1.6, 278.0], [1.7, 278.0], [1.8, 278.0], [1.9, 278.0], [2.0, 285.0], [2.1, 285.0], [2.2, 302.0], [2.3, 302.0], [2.4, 302.0], [2.5, 303.0], [2.6, 303.0], [2.7, 332.0], [2.8, 332.0], [2.9, 364.0], [3.0, 364.0], [3.1, 364.0], [3.2, 364.0], [3.3, 402.0], [3.4, 402.0], [3.5, 403.0], [3.6, 403.0], [3.7, 432.0], [3.8, 432.0], [3.9, 433.0], [4.0, 433.0], [4.1, 447.0], [4.2, 447.0], [4.3, 459.0], [4.4, 459.0], [4.5, 478.0], [4.6, 478.0], [4.7, 479.0], [4.8, 479.0], [4.9, 485.0], [5.0, 485.0], [5.1, 497.0], [5.2, 497.0], [5.3, 497.0], [5.4, 497.0], [5.5, 500.0], [5.6, 500.0], [5.7, 514.0], [5.8, 514.0], [5.9, 523.0], [6.0, 523.0], [6.1, 531.0], [6.2, 531.0], [6.3, 536.0], [6.4, 536.0], [6.5, 543.0], [6.6, 543.0], [6.7, 543.0], [6.8, 543.0], [6.9, 559.0], [7.0, 559.0], [7.1, 568.0], [7.2, 568.0], [7.3, 575.0], [7.4, 575.0], [7.5, 577.0], [7.6, 577.0], [7.7, 581.0], [7.8, 581.0], [7.9, 596.0], [8.0, 596.0], [8.1, 617.0], [8.2, 617.0], [8.3, 634.0], [8.4, 634.0], [8.5, 645.0], [8.6, 645.0], [8.7, 646.0], [8.8, 657.0], [8.9, 657.0], [9.0, 799.0], [9.1, 799.0], [9.2, 802.0], [9.3, 802.0], [9.4, 803.0], [9.5, 803.0], [9.6, 825.0], [9.7, 825.0], [9.8, 880.0], [9.9, 880.0], [10.0, 881.0], [10.1, 881.0], [10.2, 882.0], [10.3, 882.0], [10.4, 892.0], [10.5, 892.0], [10.6, 896.0], [10.7, 896.0], [10.8, 907.0], [10.9, 907.0], [11.0, 936.0], [11.1, 936.0], [11.2, 957.0], [11.3, 957.0], [11.4, 966.0], [11.5, 966.0], [11.6, 973.0], [11.7, 973.0], [11.8, 995.0], [11.9, 995.0], [12.0, 997.0], [12.1, 997.0], [12.2, 999.0], [12.3, 999.0], [12.4, 1011.0], [12.5, 1011.0], [12.6, 1012.0], [12.7, 1012.0], [12.8, 1017.0], [12.9, 1017.0], [13.0, 1017.0], [13.1, 1017.0], [13.2, 1017.0], [13.3, 1017.0], [13.4, 1022.0], [13.5, 1022.0], [13.6, 1023.0], [13.7, 1023.0], [13.8, 1028.0], [13.9, 1028.0], [14.0, 1031.0], [14.1, 1031.0], [14.2, 1031.0], [14.3, 1031.0], [14.4, 1032.0], [14.5, 1032.0], [14.6, 1032.0], [14.7, 1032.0], [14.8, 1034.0], [14.9, 1034.0], [15.0, 1034.0], [15.1, 1034.0], [15.2, 1034.0], [15.3, 1034.0], [15.4, 1035.0], [15.5, 1035.0], [15.6, 1035.0], [15.7, 1035.0], [15.8, 1037.0], [15.9, 1037.0], [16.0, 1037.0], [16.1, 1037.0], [16.2, 1038.0], [16.3, 1038.0], [16.4, 1038.0], [16.5, 1038.0], [16.6, 1039.0], [16.7, 1039.0], [16.8, 1039.0], [16.9, 1039.0], [17.0, 1039.0], [17.1, 1039.0], [17.2, 1040.0], [17.3, 1040.0], [17.4, 1041.0], [17.5, 1041.0], [17.6, 1042.0], [17.7, 1042.0], [17.8, 1044.0], [17.9, 1044.0], [18.0, 1050.0], [18.1, 1050.0], [18.2, 1051.0], [18.3, 1051.0], [18.4, 1056.0], [18.5, 1056.0], [18.6, 1058.0], [18.7, 1058.0], [18.8, 1058.0], [18.9, 1058.0], [19.0, 1063.0], [19.1, 1063.0], [19.2, 1064.0], [19.3, 1064.0], [19.4, 1064.0], [19.5, 1064.0], [19.6, 1071.0], [19.7, 1071.0], [19.8, 1072.0], [19.9, 1072.0], [20.0, 1077.0], [20.1, 1077.0], [20.2, 1101.0], [20.3, 1101.0], [20.4, 1102.0], [20.5, 1102.0], [20.6, 1106.0], [20.7, 1106.0], [20.8, 1114.0], [20.9, 1114.0], [21.0, 1131.0], [21.1, 1131.0], [21.2, 1134.0], [21.3, 1134.0], [21.4, 1135.0], [21.5, 1135.0], [21.6, 1138.0], [21.7, 1138.0], [21.8, 1150.0], [21.9, 1150.0], [22.0, 1156.0], [22.1, 1156.0], [22.2, 1162.0], [22.3, 1162.0], [22.4, 1177.0], [22.5, 1177.0], [22.6, 1181.0], [22.7, 1181.0], [22.8, 1205.0], [22.9, 1205.0], [23.0, 1206.0], [23.1, 1206.0], [23.2, 1208.0], [23.3, 1208.0], [23.4, 1212.0], [23.5, 1212.0], [23.6, 1213.0], [23.7, 1213.0], [23.8, 1215.0], [23.9, 1215.0], [24.0, 1230.0], [24.1, 1230.0], [24.2, 1235.0], [24.3, 1235.0], [24.4, 1247.0], [24.5, 1247.0], [24.6, 1256.0], [24.7, 1256.0], [24.8, 1261.0], [24.9, 1261.0], [25.0, 1278.0], [25.1, 1278.0], [25.2, 1287.0], [25.3, 1287.0], [25.4, 1288.0], [25.5, 1288.0], [25.6, 1290.0], [25.7, 1290.0], [25.8, 1295.0], [25.9, 1295.0], [26.0, 1302.0], [26.1, 1302.0], [26.2, 1306.0], [26.3, 1306.0], [26.4, 1307.0], [26.5, 1307.0], [26.6, 1308.0], [26.7, 1308.0], [26.8, 1310.0], [26.9, 1310.0], [27.0, 1312.0], [27.1, 1312.0], [27.2, 1317.0], [27.3, 1317.0], [27.4, 1317.0], [27.5, 1317.0], [27.6, 1318.0], [27.7, 1318.0], [27.8, 1326.0], [27.9, 1326.0], [28.0, 1327.0], [28.1, 1327.0], [28.2, 1338.0], [28.3, 1338.0], [28.4, 1338.0], [28.5, 1338.0], [28.6, 1339.0], [28.7, 1339.0], [28.8, 1339.0], [28.9, 1339.0], [29.0, 1343.0], [29.1, 1343.0], [29.2, 1356.0], [29.3, 1356.0], [29.4, 1359.0], [29.5, 1359.0], [29.6, 1361.0], [29.7, 1361.0], [29.8, 1362.0], [29.9, 1362.0], [30.0, 1378.0], [30.1, 1378.0], [30.2, 1380.0], [30.3, 1380.0], [30.4, 1390.0], [30.5, 1390.0], [30.6, 1396.0], [30.7, 1396.0], [30.8, 1411.0], [30.9, 1411.0], [31.0, 1411.0], [31.1, 1411.0], [31.2, 1413.0], [31.3, 1413.0], [31.4, 1417.0], [31.5, 1417.0], [31.6, 1427.0], [31.7, 1427.0], [31.8, 1429.0], [31.9, 1429.0], [32.0, 1431.0], [32.1, 1431.0], [32.2, 1438.0], [32.3, 1438.0], [32.4, 1440.0], [32.5, 1440.0], [32.6, 1441.0], [32.7, 1441.0], [32.8, 1447.0], [32.9, 1447.0], [33.0, 1462.0], [33.1, 1462.0], [33.2, 1475.0], [33.3, 1475.0], [33.4, 1483.0], [33.5, 1483.0], [33.6, 1485.0], [33.7, 1485.0], [33.8, 1487.0], [33.9, 1487.0], [34.0, 1490.0], [34.1, 1490.0], [34.2, 1491.0], [34.3, 1491.0], [34.4, 1492.0], [34.5, 1492.0], [34.6, 1492.0], [34.7, 1492.0], [34.8, 1492.0], [34.9, 1492.0], [35.0, 1494.0], [35.1, 1494.0], [35.2, 1494.0], [35.3, 1494.0], [35.4, 1495.0], [35.5, 1495.0], [35.6, 1496.0], [35.7, 1496.0], [35.8, 1497.0], [35.9, 1497.0], [36.0, 1498.0], [36.1, 1498.0], [36.2, 1500.0], [36.3, 1500.0], [36.4, 1500.0], [36.5, 1500.0], [36.6, 1502.0], [36.7, 1502.0], [36.8, 1504.0], [36.9, 1504.0], [37.0, 1505.0], [37.1, 1505.0], [37.2, 1508.0], [37.3, 1508.0], [37.4, 1511.0], [37.5, 1511.0], [37.6, 1516.0], [37.7, 1516.0], [37.8, 1517.0], [37.9, 1517.0], [38.0, 1518.0], [38.1, 1518.0], [38.2, 1523.0], [38.3, 1523.0], [38.4, 1524.0], [38.5, 1524.0], [38.6, 1524.0], [38.7, 1524.0], [38.8, 1524.0], [38.9, 1524.0], [39.0, 1525.0], [39.1, 1525.0], [39.2, 1525.0], [39.3, 1525.0], [39.4, 1526.0], [39.5, 1526.0], [39.6, 1527.0], [39.7, 1527.0], [39.8, 1527.0], [39.9, 1530.0], [40.0, 1530.0], [40.1, 1531.0], [40.2, 1531.0], [40.3, 1534.0], [40.4, 1534.0], [40.5, 1539.0], [40.6, 1539.0], [40.7, 1540.0], [40.8, 1540.0], [40.9, 1557.0], [41.0, 1557.0], [41.1, 1565.0], [41.2, 1565.0], [41.3, 1569.0], [41.4, 1569.0], [41.5, 1571.0], [41.6, 1571.0], [41.7, 1571.0], [41.8, 1571.0], [41.9, 1577.0], [42.0, 1577.0], [42.1, 1578.0], [42.2, 1578.0], [42.3, 1584.0], [42.4, 1584.0], [42.5, 1584.0], [42.6, 1584.0], [42.7, 1585.0], [42.8, 1585.0], [42.9, 1585.0], [43.0, 1585.0], [43.1, 1586.0], [43.2, 1586.0], [43.3, 1587.0], [43.4, 1587.0], [43.5, 1587.0], [43.6, 1587.0], [43.7, 1587.0], [43.8, 1587.0], [43.9, 1588.0], [44.0, 1588.0], [44.1, 1588.0], [44.2, 1588.0], [44.3, 1589.0], [44.4, 1589.0], [44.5, 1590.0], [44.6, 1590.0], [44.7, 1591.0], [44.8, 1591.0], [44.9, 1593.0], [45.0, 1593.0], [45.1, 1594.0], [45.2, 1594.0], [45.3, 1594.0], [45.4, 1594.0], [45.5, 1595.0], [45.6, 1595.0], [45.7, 1596.0], [45.8, 1596.0], [45.9, 1598.0], [46.0, 1598.0], [46.1, 1599.0], [46.2, 1599.0], [46.3, 1599.0], [46.4, 1599.0], [46.5, 1602.0], [46.6, 1602.0], [46.7, 1602.0], [46.8, 1602.0], [46.9, 1602.0], [47.0, 1602.0], [47.1, 1606.0], [47.2, 1606.0], [47.3, 1608.0], [47.4, 1608.0], [47.5, 1611.0], [47.6, 1611.0], [47.7, 1612.0], [47.8, 1612.0], [47.9, 1614.0], [48.0, 1614.0], [48.1, 1617.0], [48.2, 1617.0], [48.3, 1620.0], [48.4, 1620.0], [48.5, 1621.0], [48.6, 1621.0], [48.7, 1622.0], [48.8, 1622.0], [48.9, 1624.0], [49.0, 1624.0], [49.1, 1625.0], [49.2, 1625.0], [49.3, 1628.0], [49.4, 1628.0], [49.5, 1650.0], [49.6, 1650.0], [49.7, 1655.0], [49.8, 1655.0], [49.9, 1660.0], [50.0, 1660.0], [50.1, 1662.0], [50.2, 1662.0], [50.3, 1668.0], [50.4, 1668.0], [50.5, 1669.0], [50.6, 1669.0], [50.7, 1671.0], [50.8, 1671.0], [50.9, 1672.0], [51.0, 1672.0], [51.1, 1672.0], [51.2, 1672.0], [51.3, 1672.0], [51.4, 1672.0], [51.5, 1673.0], [51.6, 1673.0], [51.7, 1675.0], [51.8, 1675.0], [51.9, 1675.0], [52.0, 1675.0], [52.1, 1678.0], [52.2, 1678.0], [52.3, 1679.0], [52.4, 1679.0], [52.5, 1680.0], [52.6, 1680.0], [52.7, 1681.0], [52.8, 1681.0], [52.9, 1681.0], [53.0, 1681.0], [53.1, 1683.0], [53.2, 1683.0], [53.3, 1686.0], [53.4, 1686.0], [53.5, 1687.0], [53.6, 1687.0], [53.7, 1687.0], [53.8, 1687.0], [53.9, 1691.0], [54.0, 1691.0], [54.1, 1695.0], [54.2, 1695.0], [54.3, 1716.0], [54.4, 1716.0], [54.5, 1717.0], [54.6, 1717.0], [54.7, 1744.0], [54.8, 1744.0], [54.9, 1749.0], [55.0, 1749.0], [55.1, 1754.0], [55.2, 1754.0], [55.3, 1760.0], [55.4, 1760.0], [55.5, 1766.0], [55.6, 1766.0], [55.7, 1774.0], [55.8, 1774.0], [55.9, 1776.0], [56.0, 1776.0], [56.1, 1797.0], [56.2, 1797.0], [56.3, 1810.0], [56.4, 1810.0], [56.5, 1813.0], [56.6, 1813.0], [56.7, 1813.0], [56.8, 1813.0], [56.9, 1826.0], [57.0, 1826.0], [57.1, 1850.0], [57.2, 1850.0], [57.3, 1911.0], [57.4, 1911.0], [57.5, 1915.0], [57.6, 1915.0], [57.7, 1915.0], [57.8, 1915.0], [57.9, 1916.0], [58.0, 1916.0], [58.1, 1936.0], [58.2, 1936.0], [58.3, 2004.0], [58.4, 2004.0], [58.5, 2004.0], [58.6, 2004.0], [58.7, 2008.0], [58.8, 2008.0], [58.9, 2009.0], [59.0, 2009.0], [59.1, 2020.0], [59.2, 2020.0], [59.3, 2035.0], [59.4, 2035.0], [59.5, 2043.0], [59.6, 2043.0], [59.7, 2044.0], [59.8, 2044.0], [59.9, 2052.0], [60.0, 2052.0], [60.1, 2062.0], [60.2, 2062.0], [60.3, 2062.0], [60.4, 2062.0], [60.5, 2068.0], [60.6, 2068.0], [60.7, 2069.0], [60.8, 2069.0], [60.9, 2084.0], [61.0, 2084.0], [61.1, 2097.0], [61.2, 2097.0], [61.3, 2128.0], [61.4, 2128.0], [61.5, 2134.0], [61.6, 2134.0], [61.7, 2159.0], [61.8, 2159.0], [61.9, 2335.0], [62.0, 2335.0], [62.1, 2347.0], [62.2, 2347.0], [62.3, 2348.0], [62.4, 2348.0], [62.5, 2356.0], [62.6, 2356.0], [62.7, 2380.0], [62.8, 2380.0], [62.9, 2382.0], [63.0, 2382.0], [63.1, 2403.0], [63.2, 2403.0], [63.3, 2403.0], [63.4, 2403.0], [63.5, 2405.0], [63.6, 2405.0], [63.7, 2414.0], [63.8, 2414.0], [63.9, 2421.0], [64.0, 2421.0], [64.1, 2422.0], [64.2, 2422.0], [64.3, 2425.0], [64.4, 2425.0], [64.5, 2426.0], [64.6, 2426.0], [64.7, 2435.0], [64.8, 2435.0], [64.9, 2439.0], [65.0, 2439.0], [65.1, 2443.0], [65.2, 2443.0], [65.3, 2446.0], [65.4, 2446.0], [65.5, 2457.0], [65.6, 2457.0], [65.7, 2462.0], [65.8, 2462.0], [65.9, 2463.0], [66.0, 2463.0], [66.1, 2466.0], [66.2, 2466.0], [66.3, 2470.0], [66.4, 2470.0], [66.5, 2481.0], [66.6, 2481.0], [66.7, 2526.0], [66.8, 2526.0], [66.9, 2528.0], [67.0, 2528.0], [67.1, 2541.0], [67.2, 2541.0], [67.3, 2562.0], [67.4, 2562.0], [67.5, 2572.0], [67.6, 2572.0], [67.7, 2575.0], [67.8, 2575.0], [67.9, 2579.0], [68.0, 2579.0], [68.1, 2596.0], [68.2, 2596.0], [68.3, 2609.0], [68.4, 2609.0], [68.5, 2610.0], [68.6, 2610.0], [68.7, 2610.0], [68.8, 2610.0], [68.9, 2630.0], [69.0, 2630.0], [69.1, 2633.0], [69.2, 2633.0], [69.3, 2652.0], [69.4, 2652.0], [69.5, 2685.0], [69.6, 2685.0], [69.7, 2690.0], [69.8, 2690.0], [69.9, 2708.0], [70.0, 2708.0], [70.1, 2740.0], [70.2, 2740.0], [70.3, 2740.0], [70.4, 2740.0], [70.5, 2743.0], [70.6, 2743.0], [70.7, 2757.0], [70.8, 2757.0], [70.9, 2769.0], [71.0, 2769.0], [71.1, 2784.0], [71.2, 2784.0], [71.3, 2802.0], [71.4, 2802.0], [71.5, 2823.0], [71.6, 2823.0], [71.7, 2831.0], [71.8, 2831.0], [71.9, 2835.0], [72.0, 2835.0], [72.1, 2844.0], [72.2, 2844.0], [72.3, 2847.0], [72.4, 2847.0], [72.5, 2852.0], [72.6, 2852.0], [72.7, 2892.0], [72.8, 2892.0], [72.9, 2892.0], [73.0, 2892.0], [73.1, 2892.0], [73.2, 2892.0], [73.3, 2907.0], [73.4, 2907.0], [73.5, 2908.0], [73.6, 2908.0], [73.7, 2915.0], [73.8, 2915.0], [73.9, 2949.0], [74.0, 2949.0], [74.1, 2965.0], [74.2, 2965.0], [74.3, 2999.0], [74.4, 2999.0], [74.5, 3167.0], [74.6, 3167.0], [74.7, 3191.0], [74.8, 3191.0], [74.9, 3191.0], [75.0, 3191.0], [75.1, 3194.0], [75.2, 3194.0], [75.3, 3214.0], [75.4, 3214.0], [75.5, 3216.0], [75.6, 3216.0], [75.7, 3250.0], [75.8, 3250.0], [75.9, 3252.0], [76.0, 3252.0], [76.1, 3254.0], [76.2, 3254.0], [76.3, 3284.0], [76.4, 3284.0], [76.5, 3304.0], [76.6, 3304.0], [76.7, 3308.0], [76.8, 3308.0], [76.9, 3338.0], [77.0, 3338.0], [77.1, 3358.0], [77.2, 3358.0], [77.3, 3393.0], [77.4, 3393.0], [77.5, 3416.0], [77.6, 3416.0], [77.7, 3458.0], [77.8, 3458.0], [77.9, 3463.0], [78.0, 3463.0], [78.1, 3475.0], [78.2, 3475.0], [78.3, 3478.0], [78.4, 3478.0], [78.5, 3492.0], [78.6, 3492.0], [78.7, 3520.0], [78.8, 3520.0], [78.9, 3523.0], [79.0, 3523.0], [79.1, 3569.0], [79.2, 3569.0], [79.3, 3595.0], [79.4, 3595.0], [79.5, 3606.0], [79.6, 3606.0], [79.7, 3608.0], [79.8, 3608.0], [79.9, 3626.0], [80.0, 3626.0], [80.1, 3663.0], [80.2, 3663.0], [80.3, 3665.0], [80.4, 3665.0], [80.5, 3690.0], [80.6, 3690.0], [80.7, 3734.0], [80.8, 3734.0], [80.9, 3736.0], [81.0, 3736.0], [81.1, 3799.0], [81.2, 3799.0], [81.3, 3814.0], [81.4, 3814.0], [81.5, 3828.0], [81.6, 3828.0], [81.7, 3914.0], [81.8, 3914.0], [81.9, 3938.0], [82.0, 3938.0], [82.1, 3939.0], [82.2, 3939.0], [82.3, 3943.0], [82.4, 3943.0], [82.5, 3947.0], [82.6, 3947.0], [82.7, 3969.0], [82.8, 3969.0], [82.9, 3978.0], [83.0, 3978.0], [83.1, 3982.0], [83.2, 3982.0], [83.3, 3998.0], [83.4, 3998.0], [83.5, 4044.0], [83.6, 4044.0], [83.7, 4096.0], [83.8, 4096.0], [83.9, 4116.0], [84.0, 4116.0], [84.1, 4143.0], [84.2, 4143.0], [84.3, 4155.0], [84.4, 4155.0], [84.5, 4163.0], [84.6, 4163.0], [84.7, 4168.0], [84.8, 4168.0], [84.9, 4183.0], [85.0, 4183.0], [85.1, 4190.0], [85.2, 4190.0], [85.3, 4198.0], [85.4, 4198.0], [85.5, 4217.0], [85.6, 4217.0], [85.7, 4220.0], [85.8, 4220.0], [85.9, 4222.0], [86.0, 4222.0], [86.1, 4228.0], [86.2, 4228.0], [86.3, 4231.0], [86.4, 4231.0], [86.5, 4240.0], [86.6, 4240.0], [86.7, 4241.0], [86.8, 4241.0], [86.9, 4241.0], [87.0, 4241.0], [87.1, 4258.0], [87.2, 4258.0], [87.3, 4286.0], [87.4, 4286.0], [87.5, 4289.0], [87.6, 4289.0], [87.7, 4307.0], [87.8, 4307.0], [87.9, 4311.0], [88.0, 4311.0], [88.1, 4384.0], [88.2, 4384.0], [88.3, 4433.0], [88.4, 4433.0], [88.5, 4449.0], [88.6, 4449.0], [88.7, 4555.0], [88.8, 4555.0], [88.9, 4585.0], [89.0, 4585.0], [89.1, 4596.0], [89.2, 4596.0], [89.3, 4629.0], [89.4, 4629.0], [89.5, 4636.0], [89.6, 4636.0], [89.7, 4702.0], [89.8, 4702.0], [89.9, 4707.0], [90.0, 4707.0], [90.1, 4786.0], [90.2, 4786.0], [90.3, 4847.0], [90.4, 4847.0], [90.5, 4926.0], [90.6, 4926.0], [90.7, 4942.0], [90.8, 4942.0], [90.9, 4944.0], [91.0, 4944.0], [91.1, 4961.0], [91.2, 4961.0], [91.3, 4978.0], [91.4, 4978.0], [91.5, 5017.0], [91.6, 5017.0], [91.7, 5026.0], [91.8, 5026.0], [91.9, 5026.0], [92.0, 5026.0], [92.1, 5028.0], [92.2, 5028.0], [92.3, 5033.0], [92.4, 5033.0], [92.5, 5099.0], [92.6, 5099.0], [92.7, 5109.0], [92.8, 5109.0], [92.9, 5140.0], [93.0, 5140.0], [93.1, 5143.0], [93.2, 5143.0], [93.3, 5157.0], [93.4, 5157.0], [93.5, 5176.0], [93.6, 5176.0], [93.7, 5221.0], [93.8, 5221.0], [93.9, 5233.0], [94.0, 5233.0], [94.1, 5242.0], [94.2, 5242.0], [94.3, 5252.0], [94.4, 5252.0], [94.5, 5261.0], [94.6, 5261.0], [94.7, 5279.0], [94.8, 5279.0], [94.9, 5283.0], [95.0, 5283.0], [95.1, 5304.0], [95.2, 5304.0], [95.3, 5334.0], [95.4, 5334.0], [95.5, 5337.0], [95.6, 5337.0], [95.7, 5429.0], [95.8, 5429.0], [95.9, 5491.0], [96.0, 5491.0], [96.1, 5519.0], [96.2, 5519.0], [96.3, 5561.0], [96.4, 5561.0], [96.5, 5629.0], [96.6, 5629.0], [96.7, 5695.0], [96.8, 5695.0], [96.9, 5701.0], [97.0, 5701.0], [97.1, 5749.0], [97.2, 5749.0], [97.3, 5780.0], [97.4, 5780.0], [97.5, 5806.0], [97.6, 5806.0], [97.7, 5819.0], [97.8, 5819.0], [97.9, 5819.0], [98.0, 5819.0], [98.1, 5891.0], [98.2, 5891.0], [98.3, 5922.0], [98.4, 5922.0], [98.5, 5927.0], [98.6, 5927.0], [98.7, 5953.0], [98.8, 5953.0], [98.9, 5961.0], [99.0, 5961.0], [99.1, 6020.0], [99.2, 6020.0], [99.3, 6087.0], [99.4, 6087.0], [99.5, 6088.0], [99.6, 6088.0], [99.7, 6126.0], [99.8, 6126.0], [99.9, 6225.0], [100.0, 6225.0]], "isOverall": false, "label": "Delete User", "isController": false}, {"data": [[0.0, 12.0], [0.1, 12.0], [0.2, 15.0], [0.3, 15.0], [0.4, 17.0], [0.5, 17.0], [0.6, 17.0], [0.7, 20.0], [0.8, 45.0], [0.9, 45.0], [1.0, 54.0], [1.1, 54.0], [1.2, 98.0], [1.3, 98.0], [1.4, 112.0], [1.5, 112.0], [1.6, 364.0], [1.7, 364.0], [1.8, 400.0], [1.9, 400.0], [2.0, 419.0], [2.1, 419.0], [2.2, 420.0], [2.3, 420.0], [2.4, 420.0], [2.5, 420.0], [2.6, 422.0], [2.7, 422.0], [2.8, 425.0], [2.9, 425.0], [3.0, 428.0], [3.1, 428.0], [3.2, 428.0], [3.3, 428.0], [3.4, 431.0], [3.5, 431.0], [3.6, 432.0], [3.7, 432.0], [3.8, 432.0], [3.9, 432.0], [4.0, 434.0], [4.1, 434.0], [4.2, 436.0], [4.3, 436.0], [4.4, 437.0], [4.5, 437.0], [4.6, 437.0], [4.7, 437.0], [4.8, 437.0], [4.9, 437.0], [5.0, 439.0], [5.1, 439.0], [5.2, 439.0], [5.3, 439.0], [5.4, 442.0], [5.5, 442.0], [5.6, 442.0], [5.7, 442.0], [5.8, 442.0], [5.9, 443.0], [6.0, 443.0], [6.1, 444.0], [6.2, 444.0], [6.3, 445.0], [6.4, 445.0], [6.5, 448.0], [6.6, 448.0], [6.7, 449.0], [6.8, 449.0], [6.9, 453.0], [7.0, 453.0], [7.1, 456.0], [7.2, 456.0], [7.3, 467.0], [7.4, 467.0], [7.5, 478.0], [7.6, 478.0], [7.7, 500.0], [7.8, 500.0], [7.9, 501.0], [8.0, 501.0], [8.1, 503.0], [8.2, 503.0], [8.3, 506.0], [8.4, 507.0], [8.5, 507.0], [8.6, 508.0], [8.7, 508.0], [8.8, 509.0], [8.9, 509.0], [9.0, 510.0], [9.1, 510.0], [9.2, 510.0], [9.3, 510.0], [9.4, 511.0], [9.5, 511.0], [9.6, 511.0], [9.7, 511.0], [9.8, 512.0], [9.9, 512.0], [10.0, 512.0], [10.1, 512.0], [10.2, 514.0], [10.3, 514.0], [10.4, 514.0], [10.5, 514.0], [10.6, 514.0], [10.7, 514.0], [10.8, 516.0], [10.9, 516.0], [11.0, 524.0], [11.1, 524.0], [11.2, 530.0], [11.3, 530.0], [11.4, 534.0], [11.5, 534.0], [11.6, 534.0], [11.7, 534.0], [11.8, 541.0], [11.9, 541.0], [12.0, 552.0], [12.1, 552.0], [12.2, 552.0], [12.3, 552.0], [12.4, 552.0], [12.5, 552.0], [12.6, 552.0], [12.7, 552.0], [12.8, 554.0], [12.9, 554.0], [13.0, 560.0], [13.1, 560.0], [13.2, 562.0], [13.3, 562.0], [13.4, 568.0], [13.5, 568.0], [13.6, 572.0], [13.7, 572.0], [13.8, 574.0], [13.9, 574.0], [14.0, 594.0], [14.1, 594.0], [14.2, 598.0], [14.3, 598.0], [14.4, 607.0], [14.5, 607.0], [14.6, 610.0], [14.7, 610.0], [14.8, 611.0], [14.9, 611.0], [15.0, 617.0], [15.1, 617.0], [15.2, 618.0], [15.3, 618.0], [15.4, 619.0], [15.5, 619.0], [15.6, 619.0], [15.7, 619.0], [15.8, 623.0], [15.9, 623.0], [16.0, 626.0], [16.1, 626.0], [16.2, 630.0], [16.3, 630.0], [16.4, 631.0], [16.5, 631.0], [16.6, 637.0], [16.7, 637.0], [16.8, 638.0], [16.9, 638.0], [17.0, 638.0], [17.1, 638.0], [17.2, 640.0], [17.3, 640.0], [17.4, 686.0], [17.5, 686.0], [17.6, 699.0], [17.7, 699.0], [17.8, 702.0], [17.9, 702.0], [18.0, 704.0], [18.1, 704.0], [18.2, 705.0], [18.3, 705.0], [18.4, 712.0], [18.5, 712.0], [18.6, 715.0], [18.7, 715.0], [18.8, 715.0], [18.9, 715.0], [19.0, 716.0], [19.1, 716.0], [19.2, 716.0], [19.3, 716.0], [19.4, 716.0], [19.5, 716.0], [19.6, 718.0], [19.7, 718.0], [19.8, 718.0], [19.9, 718.0], [20.0, 721.0], [20.1, 721.0], [20.2, 724.0], [20.3, 724.0], [20.4, 737.0], [20.5, 737.0], [20.6, 782.0], [20.7, 782.0], [20.8, 784.0], [20.9, 784.0], [21.0, 785.0], [21.1, 785.0], [21.2, 786.0], [21.3, 786.0], [21.4, 787.0], [21.5, 787.0], [21.6, 788.0], [21.7, 788.0], [21.8, 788.0], [21.9, 788.0], [22.0, 794.0], [22.1, 794.0], [22.2, 795.0], [22.3, 795.0], [22.4, 795.0], [22.5, 795.0], [22.6, 795.0], [22.7, 795.0], [22.8, 797.0], [22.9, 797.0], [23.0, 797.0], [23.1, 797.0], [23.2, 799.0], [23.3, 799.0], [23.4, 802.0], [23.5, 802.0], [23.6, 804.0], [23.7, 804.0], [23.8, 806.0], [23.9, 806.0], [24.0, 806.0], [24.1, 806.0], [24.2, 808.0], [24.3, 808.0], [24.4, 810.0], [24.5, 810.0], [24.6, 811.0], [24.7, 811.0], [24.8, 812.0], [24.9, 812.0], [25.0, 814.0], [25.1, 814.0], [25.2, 818.0], [25.3, 818.0], [25.4, 819.0], [25.5, 819.0], [25.6, 820.0], [25.7, 820.0], [25.8, 823.0], [25.9, 823.0], [26.0, 824.0], [26.1, 824.0], [26.2, 827.0], [26.3, 827.0], [26.4, 832.0], [26.5, 832.0], [26.6, 834.0], [26.7, 834.0], [26.8, 839.0], [26.9, 839.0], [27.0, 842.0], [27.1, 842.0], [27.2, 861.0], [27.3, 861.0], [27.4, 864.0], [27.5, 864.0], [27.6, 866.0], [27.7, 866.0], [27.8, 867.0], [27.9, 867.0], [28.0, 867.0], [28.1, 867.0], [28.2, 869.0], [28.3, 869.0], [28.4, 869.0], [28.5, 869.0], [28.6, 870.0], [28.7, 870.0], [28.8, 871.0], [28.9, 871.0], [29.0, 871.0], [29.1, 871.0], [29.2, 881.0], [29.3, 881.0], [29.4, 881.0], [29.5, 881.0], [29.6, 894.0], [29.7, 894.0], [29.8, 912.0], [29.9, 912.0], [30.0, 912.0], [30.1, 912.0], [30.2, 924.0], [30.3, 924.0], [30.4, 931.0], [30.5, 931.0], [30.6, 932.0], [30.7, 932.0], [30.8, 933.0], [30.9, 933.0], [31.0, 948.0], [31.1, 948.0], [31.2, 949.0], [31.3, 949.0], [31.4, 951.0], [31.5, 951.0], [31.6, 952.0], [31.7, 952.0], [31.8, 970.0], [31.9, 970.0], [32.0, 975.0], [32.1, 975.0], [32.2, 982.0], [32.3, 982.0], [32.4, 989.0], [32.5, 989.0], [32.6, 994.0], [32.7, 994.0], [32.8, 1012.0], [32.9, 1012.0], [33.0, 1023.0], [33.1, 1023.0], [33.2, 1025.0], [33.3, 1025.0], [33.4, 1027.0], [33.5, 1027.0], [33.6, 1037.0], [33.7, 1037.0], [33.8, 1061.0], [33.9, 1061.0], [34.0, 1068.0], [34.1, 1068.0], [34.2, 1069.0], [34.3, 1069.0], [34.4, 1070.0], [34.5, 1070.0], [34.6, 1072.0], [34.7, 1072.0], [34.8, 1084.0], [34.9, 1084.0], [35.0, 1096.0], [35.1, 1096.0], [35.2, 1099.0], [35.3, 1099.0], [35.4, 1103.0], [35.5, 1103.0], [35.6, 1113.0], [35.7, 1113.0], [35.8, 1121.0], [35.9, 1121.0], [36.0, 1121.0], [36.1, 1121.0], [36.2, 1121.0], [36.3, 1121.0], [36.4, 1122.0], [36.5, 1122.0], [36.6, 1129.0], [36.7, 1129.0], [36.8, 1130.0], [36.9, 1130.0], [37.0, 1131.0], [37.1, 1131.0], [37.2, 1133.0], [37.3, 1133.0], [37.4, 1133.0], [37.5, 1145.0], [37.6, 1145.0], [37.7, 1147.0], [37.8, 1147.0], [37.9, 1149.0], [38.0, 1149.0], [38.1, 1157.0], [38.2, 1157.0], [38.3, 1166.0], [38.4, 1166.0], [38.5, 1167.0], [38.6, 1167.0], [38.7, 1170.0], [38.8, 1170.0], [38.9, 1170.0], [39.0, 1170.0], [39.1, 1173.0], [39.2, 1173.0], [39.3, 1176.0], [39.4, 1176.0], [39.5, 1176.0], [39.6, 1176.0], [39.7, 1176.0], [39.8, 1176.0], [39.9, 1184.0], [40.0, 1184.0], [40.1, 1187.0], [40.2, 1187.0], [40.3, 1188.0], [40.4, 1188.0], [40.5, 1191.0], [40.6, 1191.0], [40.7, 1195.0], [40.8, 1195.0], [40.9, 1197.0], [41.0, 1197.0], [41.1, 1201.0], [41.2, 1201.0], [41.3, 1203.0], [41.4, 1203.0], [41.5, 1212.0], [41.6, 1212.0], [41.7, 1217.0], [41.8, 1217.0], [41.9, 1218.0], [42.0, 1218.0], [42.1, 1220.0], [42.2, 1220.0], [42.3, 1221.0], [42.4, 1221.0], [42.5, 1222.0], [42.6, 1222.0], [42.7, 1229.0], [42.8, 1229.0], [42.9, 1230.0], [43.0, 1230.0], [43.1, 1240.0], [43.2, 1240.0], [43.3, 1242.0], [43.4, 1242.0], [43.5, 1242.0], [43.6, 1242.0], [43.7, 1242.0], [43.8, 1242.0], [43.9, 1242.0], [44.0, 1242.0], [44.1, 1245.0], [44.2, 1245.0], [44.3, 1245.0], [44.4, 1245.0], [44.5, 1248.0], [44.6, 1248.0], [44.7, 1251.0], [44.8, 1251.0], [44.9, 1251.0], [45.0, 1251.0], [45.1, 1262.0], [45.2, 1262.0], [45.3, 1265.0], [45.4, 1265.0], [45.5, 1266.0], [45.6, 1266.0], [45.7, 1273.0], [45.8, 1273.0], [45.9, 1275.0], [46.0, 1275.0], [46.1, 1284.0], [46.2, 1284.0], [46.3, 1286.0], [46.4, 1286.0], [46.5, 1288.0], [46.6, 1288.0], [46.7, 1296.0], [46.8, 1296.0], [46.9, 1296.0], [47.0, 1296.0], [47.1, 1304.0], [47.2, 1304.0], [47.3, 1306.0], [47.4, 1306.0], [47.5, 1312.0], [47.6, 1312.0], [47.7, 1314.0], [47.8, 1314.0], [47.9, 1318.0], [48.0, 1318.0], [48.1, 1320.0], [48.2, 1320.0], [48.3, 1320.0], [48.4, 1320.0], [48.5, 1322.0], [48.6, 1322.0], [48.7, 1325.0], [48.8, 1325.0], [48.9, 1326.0], [49.0, 1326.0], [49.1, 1326.0], [49.2, 1326.0], [49.3, 1327.0], [49.4, 1327.0], [49.5, 1329.0], [49.6, 1329.0], [49.7, 1329.0], [49.8, 1329.0], [49.9, 1333.0], [50.0, 1333.0], [50.1, 1333.0], [50.2, 1333.0], [50.3, 1334.0], [50.4, 1334.0], [50.5, 1335.0], [50.6, 1335.0], [50.7, 1345.0], [50.8, 1345.0], [50.9, 1346.0], [51.0, 1346.0], [51.1, 1347.0], [51.2, 1347.0], [51.3, 1352.0], [51.4, 1352.0], [51.5, 1354.0], [51.6, 1354.0], [51.7, 1357.0], [51.8, 1357.0], [51.9, 1357.0], [52.0, 1357.0], [52.1, 1373.0], [52.2, 1373.0], [52.3, 1374.0], [52.4, 1374.0], [52.5, 1379.0], [52.6, 1379.0], [52.7, 1380.0], [52.8, 1380.0], [52.9, 1383.0], [53.0, 1383.0], [53.1, 1391.0], [53.2, 1391.0], [53.3, 1392.0], [53.4, 1392.0], [53.5, 1395.0], [53.6, 1395.0], [53.7, 1396.0], [53.8, 1396.0], [53.9, 1403.0], [54.0, 1403.0], [54.1, 1414.0], [54.2, 1414.0], [54.3, 1416.0], [54.4, 1416.0], [54.5, 1422.0], [54.6, 1422.0], [54.7, 1426.0], [54.8, 1426.0], [54.9, 1429.0], [55.0, 1429.0], [55.1, 1430.0], [55.2, 1430.0], [55.3, 1432.0], [55.4, 1432.0], [55.5, 1432.0], [55.6, 1432.0], [55.7, 1434.0], [55.8, 1434.0], [55.9, 1441.0], [56.0, 1441.0], [56.1, 1443.0], [56.2, 1443.0], [56.3, 1448.0], [56.4, 1448.0], [56.5, 1450.0], [56.6, 1450.0], [56.7, 1453.0], [56.8, 1453.0], [56.9, 1470.0], [57.0, 1470.0], [57.1, 1471.0], [57.2, 1471.0], [57.3, 1481.0], [57.4, 1481.0], [57.5, 1485.0], [57.6, 1485.0], [57.7, 1489.0], [57.8, 1489.0], [57.9, 1497.0], [58.0, 1497.0], [58.1, 1498.0], [58.2, 1498.0], [58.3, 1500.0], [58.4, 1500.0], [58.5, 1502.0], [58.6, 1502.0], [58.7, 1503.0], [58.8, 1503.0], [58.9, 1503.0], [59.0, 1503.0], [59.1, 1503.0], [59.2, 1503.0], [59.3, 1505.0], [59.4, 1505.0], [59.5, 1516.0], [59.6, 1516.0], [59.7, 1518.0], [59.8, 1518.0], [59.9, 1521.0], [60.0, 1521.0], [60.1, 1522.0], [60.2, 1522.0], [60.3, 1523.0], [60.4, 1523.0], [60.5, 1533.0], [60.6, 1533.0], [60.7, 1539.0], [60.8, 1539.0], [60.9, 1540.0], [61.0, 1540.0], [61.1, 1545.0], [61.2, 1545.0], [61.3, 1552.0], [61.4, 1552.0], [61.5, 1553.0], [61.6, 1553.0], [61.7, 1565.0], [61.8, 1565.0], [61.9, 1565.0], [62.0, 1565.0], [62.1, 1567.0], [62.2, 1567.0], [62.3, 1570.0], [62.4, 1570.0], [62.5, 1570.0], [62.6, 1570.0], [62.7, 1571.0], [62.8, 1571.0], [62.9, 1571.0], [63.0, 1571.0], [63.1, 1578.0], [63.2, 1578.0], [63.3, 1583.0], [63.4, 1583.0], [63.5, 1590.0], [63.6, 1590.0], [63.7, 1594.0], [63.8, 1594.0], [63.9, 1596.0], [64.0, 1596.0], [64.1, 1598.0], [64.2, 1598.0], [64.3, 1605.0], [64.4, 1605.0], [64.5, 1607.0], [64.6, 1607.0], [64.7, 1609.0], [64.8, 1609.0], [64.9, 1609.0], [65.0, 1609.0], [65.1, 1617.0], [65.2, 1617.0], [65.3, 1617.0], [65.4, 1617.0], [65.5, 1618.0], [65.6, 1618.0], [65.7, 1624.0], [65.8, 1624.0], [65.9, 1633.0], [66.0, 1633.0], [66.1, 1636.0], [66.2, 1636.0], [66.3, 1637.0], [66.4, 1637.0], [66.5, 1639.0], [66.6, 1639.0], [66.7, 1643.0], [66.8, 1643.0], [66.9, 1643.0], [67.0, 1643.0], [67.1, 1648.0], [67.2, 1648.0], [67.3, 1649.0], [67.4, 1649.0], [67.5, 1657.0], [67.6, 1657.0], [67.7, 1658.0], [67.8, 1658.0], [67.9, 1659.0], [68.0, 1659.0], [68.1, 1659.0], [68.2, 1659.0], [68.3, 1664.0], [68.4, 1664.0], [68.5, 1665.0], [68.6, 1665.0], [68.7, 1666.0], [68.8, 1666.0], [68.9, 1667.0], [69.0, 1667.0], [69.1, 1667.0], [69.2, 1667.0], [69.3, 1672.0], [69.4, 1672.0], [69.5, 1676.0], [69.6, 1676.0], [69.7, 1676.0], [69.8, 1676.0], [69.9, 1678.0], [70.0, 1678.0], [70.1, 1680.0], [70.2, 1680.0], [70.3, 1681.0], [70.4, 1681.0], [70.5, 1684.0], [70.6, 1684.0], [70.7, 1686.0], [70.8, 1686.0], [70.9, 1686.0], [71.0, 1686.0], [71.1, 1686.0], [71.2, 1686.0], [71.3, 1686.0], [71.4, 1686.0], [71.5, 1687.0], [71.6, 1687.0], [71.7, 1688.0], [71.8, 1688.0], [71.9, 1690.0], [72.0, 1690.0], [72.1, 1694.0], [72.2, 1694.0], [72.3, 1694.0], [72.4, 1694.0], [72.5, 1695.0], [72.6, 1695.0], [72.7, 1695.0], [72.8, 1695.0], [72.9, 1696.0], [73.0, 1696.0], [73.1, 1733.0], [73.2, 1733.0], [73.3, 1741.0], [73.4, 1741.0], [73.5, 1750.0], [73.6, 1750.0], [73.7, 1760.0], [73.8, 1760.0], [73.9, 1762.0], [74.0, 1762.0], [74.1, 1762.0], [74.2, 1762.0], [74.3, 1764.0], [74.4, 1764.0], [74.5, 1767.0], [74.6, 1767.0], [74.7, 1771.0], [74.8, 1771.0], [74.9, 1773.0], [75.0, 1773.0], [75.1, 1774.0], [75.2, 1774.0], [75.3, 1777.0], [75.4, 1777.0], [75.5, 1788.0], [75.6, 1788.0], [75.7, 1789.0], [75.8, 1789.0], [75.9, 1798.0], [76.0, 1798.0], [76.1, 1824.0], [76.2, 1824.0], [76.3, 1828.0], [76.4, 1828.0], [76.5, 1851.0], [76.6, 1851.0], [76.7, 1873.0], [76.8, 1873.0], [76.9, 1875.0], [77.0, 1875.0], [77.1, 1878.0], [77.2, 1878.0], [77.3, 1886.0], [77.4, 1886.0], [77.5, 1897.0], [77.6, 1897.0], [77.7, 1912.0], [77.8, 1912.0], [77.9, 1916.0], [78.0, 1916.0], [78.1, 1985.0], [78.2, 1985.0], [78.3, 2015.0], [78.4, 2015.0], [78.5, 2015.0], [78.6, 2015.0], [78.7, 2033.0], [78.8, 2033.0], [78.9, 2033.0], [79.0, 2033.0], [79.1, 2034.0], [79.2, 2034.0], [79.3, 2052.0], [79.4, 2052.0], [79.5, 2052.0], [79.6, 2052.0], [79.7, 2065.0], [79.8, 2065.0], [79.9, 2065.0], [80.0, 2065.0], [80.1, 2070.0], [80.2, 2070.0], [80.3, 2079.0], [80.4, 2079.0], [80.5, 2086.0], [80.6, 2086.0], [80.7, 2094.0], [80.8, 2094.0], [80.9, 2131.0], [81.0, 2131.0], [81.1, 2138.0], [81.2, 2138.0], [81.3, 2155.0], [81.4, 2155.0], [81.5, 2155.0], [81.6, 2155.0], [81.7, 2160.0], [81.8, 2160.0], [81.9, 2181.0], [82.0, 2181.0], [82.1, 2184.0], [82.2, 2184.0], [82.3, 2184.0], [82.4, 2184.0], [82.5, 2293.0], [82.6, 2293.0], [82.7, 2432.0], [82.8, 2432.0], [82.9, 2459.0], [83.0, 2459.0], [83.1, 2598.0], [83.2, 2598.0], [83.3, 2705.0], [83.4, 2705.0], [83.5, 2816.0], [83.6, 2816.0], [83.7, 2947.0], [83.8, 2947.0], [83.9, 3032.0], [84.0, 3032.0], [84.1, 3133.0], [84.2, 3133.0], [84.3, 3195.0], [84.4, 3195.0], [84.5, 3220.0], [84.6, 3220.0], [84.7, 3301.0], [84.8, 3301.0], [84.9, 3359.0], [85.0, 3359.0], [85.1, 3430.0], [85.2, 3430.0], [85.3, 3430.0], [85.4, 3430.0], [85.5, 3472.0], [85.6, 3472.0], [85.7, 3525.0], [85.8, 3525.0], [85.9, 3556.0], [86.0, 3556.0], [86.1, 3572.0], [86.2, 3572.0], [86.3, 3628.0], [86.4, 3628.0], [86.5, 3720.0], [86.6, 3720.0], [86.7, 3738.0], [86.8, 3738.0], [86.9, 3768.0], [87.0, 3768.0], [87.1, 3790.0], [87.2, 3790.0], [87.3, 3805.0], [87.4, 3805.0], [87.5, 3946.0], [87.6, 3946.0], [87.7, 3986.0], [87.8, 3986.0], [87.9, 4019.0], [88.0, 4019.0], [88.1, 4050.0], [88.2, 4050.0], [88.3, 4107.0], [88.4, 4107.0], [88.5, 4195.0], [88.6, 4195.0], [88.7, 4353.0], [88.8, 4353.0], [88.9, 4582.0], [89.0, 4582.0], [89.1, 4585.0], [89.2, 4585.0], [89.3, 4587.0], [89.4, 4587.0], [89.5, 4589.0], [89.6, 4589.0], [89.7, 4590.0], [89.8, 4590.0], [89.9, 4593.0], [90.0, 4593.0], [90.1, 4594.0], [90.2, 4594.0], [90.3, 4594.0], [90.4, 4594.0], [90.5, 4606.0], [90.6, 4606.0], [90.7, 4610.0], [90.8, 4610.0], [90.9, 4610.0], [91.0, 4610.0], [91.1, 4617.0], [91.2, 4617.0], [91.3, 4643.0], [91.4, 4643.0], [91.5, 4660.0], [91.6, 4660.0], [91.7, 4807.0], [91.8, 4807.0], [91.9, 4838.0], [92.0, 4838.0], [92.1, 4858.0], [92.2, 4858.0], [92.3, 4860.0], [92.4, 4860.0], [92.5, 4882.0], [92.6, 4882.0], [92.7, 4883.0], [92.8, 4883.0], [92.9, 4886.0], [93.0, 4886.0], [93.1, 4887.0], [93.2, 4887.0], [93.3, 4890.0], [93.4, 4890.0], [93.5, 4891.0], [93.6, 4891.0], [93.7, 4892.0], [93.8, 4892.0], [93.9, 4893.0], [94.0, 4893.0], [94.1, 4900.0], [94.2, 4900.0], [94.3, 4903.0], [94.4, 4903.0], [94.5, 4906.0], [94.6, 4906.0], [94.7, 4912.0], [94.8, 4912.0], [94.9, 4916.0], [95.0, 4916.0], [95.1, 4916.0], [95.2, 4916.0], [95.3, 4918.0], [95.4, 4918.0], [95.5, 4922.0], [95.6, 4922.0], [95.7, 4927.0], [95.8, 4927.0], [95.9, 4934.0], [96.0, 4934.0], [96.1, 4974.0], [96.2, 4974.0], [96.3, 5114.0], [96.4, 5114.0], [96.5, 5127.0], [96.6, 5127.0], [96.7, 5139.0], [96.8, 5139.0], [96.9, 5151.0], [97.0, 5151.0], [97.1, 5166.0], [97.2, 5166.0], [97.3, 5173.0], [97.4, 5173.0], [97.5, 5181.0], [97.6, 5181.0], [97.7, 5193.0], [97.8, 5193.0], [97.9, 5205.0], [98.0, 5205.0], [98.1, 5209.0], [98.2, 5209.0], [98.3, 5217.0], [98.4, 5217.0], [98.5, 5222.0], [98.6, 5222.0], [98.7, 5231.0], [98.8, 5231.0], [98.9, 5282.0], [99.0, 5282.0], [99.1, 5287.0], [99.2, 5287.0], [99.3, 5287.0], [99.4, 5287.0], [99.5, 5297.0], [99.6, 5297.0], [99.7, 5301.0], [99.8, 5301.0], [99.9, 5303.0], [100.0, 5303.0]], "isOverall": false, "label": "Put User", "isController": false}, {"data": [[0.0, 82.0], [0.1, 82.0], [0.2, 88.0], [0.3, 88.0], [0.4, 92.0], [0.5, 92.0], [0.6, 92.0], [0.7, 98.0], [0.8, 197.0], [0.9, 197.0], [1.0, 207.0], [1.1, 207.0], [1.2, 221.0], [1.3, 221.0], [1.4, 225.0], [1.5, 225.0], [1.6, 265.0], [1.7, 265.0], [1.8, 279.0], [1.9, 279.0], [2.0, 280.0], [2.1, 280.0], [2.2, 298.0], [2.3, 298.0], [2.4, 299.0], [2.5, 299.0], [2.6, 365.0], [2.7, 365.0], [2.8, 365.0], [2.9, 375.0], [3.0, 375.0], [3.1, 388.0], [3.2, 388.0], [3.3, 412.0], [3.4, 412.0], [3.5, 416.0], [3.6, 416.0], [3.7, 417.0], [3.8, 417.0], [3.9, 420.0], [4.0, 420.0], [4.1, 430.0], [4.2, 430.0], [4.3, 440.0], [4.4, 440.0], [4.5, 456.0], [4.6, 456.0], [4.7, 459.0], [4.8, 459.0], [4.9, 463.0], [5.0, 463.0], [5.1, 477.0], [5.2, 477.0], [5.3, 484.0], [5.4, 484.0], [5.5, 507.0], [5.6, 507.0], [5.7, 552.0], [5.8, 552.0], [5.9, 560.0], [6.0, 560.0], [6.1, 597.0], [6.2, 597.0], [6.3, 620.0], [6.4, 620.0], [6.5, 645.0], [6.6, 645.0], [6.7, 646.0], [6.8, 646.0], [6.9, 666.0], [7.0, 666.0], [7.1, 697.0], [7.2, 697.0], [7.3, 698.0], [7.4, 698.0], [7.5, 707.0], [7.6, 707.0], [7.7, 723.0], [7.8, 723.0], [7.9, 731.0], [8.0, 731.0], [8.1, 733.0], [8.2, 733.0], [8.3, 739.0], [8.4, 739.0], [8.5, 756.0], [8.6, 756.0], [8.7, 756.0], [8.8, 756.0], [8.9, 767.0], [9.0, 767.0], [9.1, 780.0], [9.2, 780.0], [9.3, 783.0], [9.4, 786.0], [9.5, 786.0], [9.6, 790.0], [9.7, 790.0], [9.8, 793.0], [9.9, 793.0], [10.0, 794.0], [10.1, 794.0], [10.2, 800.0], [10.3, 800.0], [10.4, 801.0], [10.5, 801.0], [10.6, 809.0], [10.7, 809.0], [10.8, 810.0], [10.9, 810.0], [11.0, 820.0], [11.1, 820.0], [11.2, 822.0], [11.3, 822.0], [11.4, 827.0], [11.5, 827.0], [11.6, 827.0], [11.7, 827.0], [11.8, 828.0], [11.9, 828.0], [12.0, 828.0], [12.1, 828.0], [12.2, 831.0], [12.3, 831.0], [12.4, 834.0], [12.5, 834.0], [12.6, 835.0], [12.7, 835.0], [12.8, 838.0], [12.9, 838.0], [13.0, 846.0], [13.1, 846.0], [13.2, 858.0], [13.3, 858.0], [13.4, 877.0], [13.5, 877.0], [13.6, 878.0], [13.7, 878.0], [13.8, 879.0], [13.9, 879.0], [14.0, 885.0], [14.1, 885.0], [14.2, 888.0], [14.3, 888.0], [14.4, 889.0], [14.5, 889.0], [14.6, 890.0], [14.7, 890.0], [14.8, 891.0], [14.9, 891.0], [15.0, 891.0], [15.1, 891.0], [15.2, 891.0], [15.3, 891.0], [15.4, 907.0], [15.5, 907.0], [15.6, 912.0], [15.7, 912.0], [15.8, 956.0], [15.9, 956.0], [16.0, 964.0], [16.1, 964.0], [16.2, 980.0], [16.3, 980.0], [16.4, 981.0], [16.5, 981.0], [16.6, 999.0], [16.7, 999.0], [16.8, 1001.0], [16.9, 1001.0], [17.0, 1006.0], [17.1, 1006.0], [17.2, 1030.0], [17.3, 1030.0], [17.4, 1053.0], [17.5, 1053.0], [17.6, 1054.0], [17.7, 1054.0], [17.8, 1070.0], [17.9, 1070.0], [18.0, 1071.0], [18.1, 1071.0], [18.2, 1076.0], [18.3, 1076.0], [18.4, 1089.0], [18.5, 1089.0], [18.6, 1095.0], [18.7, 1095.0], [18.8, 1100.0], [18.9, 1100.0], [19.0, 1110.0], [19.1, 1110.0], [19.2, 1115.0], [19.3, 1115.0], [19.4, 1123.0], [19.5, 1123.0], [19.6, 1127.0], [19.7, 1127.0], [19.8, 1139.0], [19.9, 1139.0], [20.0, 1184.0], [20.1, 1184.0], [20.2, 1193.0], [20.3, 1193.0], [20.4, 1194.0], [20.5, 1194.0], [20.6, 1195.0], [20.7, 1195.0], [20.8, 1200.0], [20.9, 1200.0], [21.0, 1209.0], [21.1, 1209.0], [21.2, 1212.0], [21.3, 1212.0], [21.4, 1215.0], [21.5, 1215.0], [21.6, 1220.0], [21.7, 1220.0], [21.8, 1227.0], [21.9, 1227.0], [22.0, 1231.0], [22.1, 1231.0], [22.2, 1236.0], [22.3, 1236.0], [22.4, 1241.0], [22.5, 1241.0], [22.6, 1244.0], [22.7, 1244.0], [22.8, 1277.0], [22.9, 1277.0], [23.0, 1285.0], [23.1, 1285.0], [23.2, 1300.0], [23.3, 1300.0], [23.4, 1300.0], [23.5, 1300.0], [23.6, 1300.0], [23.7, 1300.0], [23.8, 1302.0], [23.9, 1302.0], [24.0, 1303.0], [24.1, 1303.0], [24.2, 1313.0], [24.3, 1313.0], [24.4, 1315.0], [24.5, 1315.0], [24.6, 1320.0], [24.7, 1320.0], [24.8, 1340.0], [24.9, 1340.0], [25.0, 1344.0], [25.1, 1344.0], [25.2, 1345.0], [25.3, 1345.0], [25.4, 1347.0], [25.5, 1347.0], [25.6, 1349.0], [25.7, 1349.0], [25.8, 1353.0], [25.9, 1353.0], [26.0, 1356.0], [26.1, 1356.0], [26.2, 1359.0], [26.3, 1359.0], [26.4, 1373.0], [26.5, 1373.0], [26.6, 1374.0], [26.7, 1374.0], [26.8, 1378.0], [26.9, 1378.0], [27.0, 1386.0], [27.1, 1386.0], [27.2, 1402.0], [27.3, 1402.0], [27.4, 1411.0], [27.5, 1411.0], [27.6, 1412.0], [27.7, 1412.0], [27.8, 1419.0], [27.9, 1419.0], [28.0, 1420.0], [28.1, 1420.0], [28.2, 1428.0], [28.3, 1428.0], [28.4, 1433.0], [28.5, 1433.0], [28.6, 1439.0], [28.7, 1439.0], [28.8, 1440.0], [28.9, 1440.0], [29.0, 1440.0], [29.1, 1440.0], [29.2, 1442.0], [29.3, 1442.0], [29.4, 1456.0], [29.5, 1456.0], [29.6, 1462.0], [29.7, 1462.0], [29.8, 1462.0], [29.9, 1462.0], [30.0, 1466.0], [30.1, 1466.0], [30.2, 1476.0], [30.3, 1476.0], [30.4, 1485.0], [30.5, 1485.0], [30.6, 1500.0], [30.7, 1500.0], [30.8, 1501.0], [30.9, 1501.0], [31.0, 1504.0], [31.1, 1504.0], [31.2, 1504.0], [31.3, 1504.0], [31.4, 1506.0], [31.5, 1506.0], [31.6, 1509.0], [31.7, 1509.0], [31.8, 1511.0], [31.9, 1511.0], [32.0, 1512.0], [32.1, 1512.0], [32.2, 1516.0], [32.3, 1516.0], [32.4, 1520.0], [32.5, 1520.0], [32.6, 1521.0], [32.7, 1521.0], [32.8, 1521.0], [32.9, 1521.0], [33.0, 1523.0], [33.1, 1523.0], [33.2, 1524.0], [33.3, 1524.0], [33.4, 1525.0], [33.5, 1525.0], [33.6, 1527.0], [33.7, 1527.0], [33.8, 1532.0], [33.9, 1532.0], [34.0, 1532.0], [34.1, 1532.0], [34.2, 1533.0], [34.3, 1533.0], [34.4, 1540.0], [34.5, 1540.0], [34.6, 1541.0], [34.7, 1541.0], [34.8, 1546.0], [34.9, 1546.0], [35.0, 1549.0], [35.1, 1549.0], [35.2, 1550.0], [35.3, 1550.0], [35.4, 1562.0], [35.5, 1562.0], [35.6, 1578.0], [35.7, 1578.0], [35.8, 1579.0], [35.9, 1579.0], [36.0, 1594.0], [36.1, 1594.0], [36.2, 1594.0], [36.3, 1594.0], [36.4, 1594.0], [36.5, 1594.0], [36.6, 1594.0], [36.7, 1594.0], [36.8, 1603.0], [36.9, 1603.0], [37.0, 1606.0], [37.1, 1606.0], [37.2, 1607.0], [37.3, 1607.0], [37.4, 1608.0], [37.5, 1608.0], [37.6, 1620.0], [37.7, 1620.0], [37.8, 1620.0], [37.9, 1620.0], [38.0, 1648.0], [38.1, 1648.0], [38.2, 1660.0], [38.3, 1660.0], [38.4, 1673.0], [38.5, 1673.0], [38.6, 1688.0], [38.7, 1688.0], [38.8, 1701.0], [38.9, 1701.0], [39.0, 1713.0], [39.1, 1713.0], [39.2, 1738.0], [39.3, 1738.0], [39.4, 1744.0], [39.5, 1744.0], [39.6, 1751.0], [39.7, 1751.0], [39.8, 1751.0], [39.9, 1751.0], [40.0, 1777.0], [40.1, 1777.0], [40.2, 1858.0], [40.3, 1858.0], [40.4, 1858.0], [40.5, 1871.0], [40.6, 1871.0], [40.7, 1882.0], [40.8, 1882.0], [40.9, 1915.0], [41.0, 1915.0], [41.1, 1917.0], [41.2, 1917.0], [41.3, 1918.0], [41.4, 1918.0], [41.5, 1918.0], [41.6, 1918.0], [41.7, 1919.0], [41.8, 1919.0], [41.9, 1921.0], [42.0, 1921.0], [42.1, 1959.0], [42.2, 1959.0], [42.3, 1962.0], [42.4, 1962.0], [42.5, 1962.0], [42.6, 1962.0], [42.7, 1966.0], [42.8, 1966.0], [42.9, 1969.0], [43.0, 1969.0], [43.1, 1983.0], [43.2, 1983.0], [43.3, 1986.0], [43.4, 1986.0], [43.5, 1991.0], [43.6, 1991.0], [43.7, 1997.0], [43.8, 1997.0], [43.9, 2017.0], [44.0, 2017.0], [44.1, 2020.0], [44.2, 2020.0], [44.3, 2026.0], [44.4, 2026.0], [44.5, 2030.0], [44.6, 2030.0], [44.7, 2031.0], [44.8, 2031.0], [44.9, 2032.0], [45.0, 2032.0], [45.1, 2056.0], [45.2, 2056.0], [45.3, 2065.0], [45.4, 2065.0], [45.5, 2071.0], [45.6, 2071.0], [45.7, 2073.0], [45.8, 2073.0], [45.9, 2076.0], [46.0, 2076.0], [46.1, 2078.0], [46.2, 2078.0], [46.3, 2079.0], [46.4, 2079.0], [46.5, 2080.0], [46.6, 2080.0], [46.7, 2086.0], [46.8, 2086.0], [46.9, 2097.0], [47.0, 2097.0], [47.1, 2110.0], [47.2, 2110.0], [47.3, 2121.0], [47.4, 2121.0], [47.5, 2124.0], [47.6, 2124.0], [47.7, 2129.0], [47.8, 2129.0], [47.9, 2132.0], [48.0, 2132.0], [48.1, 2134.0], [48.2, 2134.0], [48.3, 2138.0], [48.4, 2138.0], [48.5, 2139.0], [48.6, 2139.0], [48.7, 2140.0], [48.8, 2140.0], [48.9, 2140.0], [49.0, 2140.0], [49.1, 2141.0], [49.2, 2141.0], [49.3, 2142.0], [49.4, 2142.0], [49.5, 2143.0], [49.6, 2143.0], [49.7, 2174.0], [49.8, 2174.0], [49.9, 2177.0], [50.0, 2177.0], [50.1, 2198.0], [50.2, 2198.0], [50.3, 2199.0], [50.4, 2199.0], [50.5, 2202.0], [50.6, 2202.0], [50.7, 2205.0], [50.8, 2205.0], [50.9, 2210.0], [51.0, 2210.0], [51.1, 2213.0], [51.2, 2213.0], [51.3, 2234.0], [51.4, 2234.0], [51.5, 2237.0], [51.6, 2237.0], [51.7, 2243.0], [51.8, 2243.0], [51.9, 2267.0], [52.0, 2267.0], [52.1, 2313.0], [52.2, 2313.0], [52.3, 2323.0], [52.4, 2323.0], [52.5, 2326.0], [52.6, 2326.0], [52.7, 2328.0], [52.8, 2328.0], [52.9, 2334.0], [53.0, 2334.0], [53.1, 2336.0], [53.2, 2336.0], [53.3, 2343.0], [53.4, 2343.0], [53.5, 2356.0], [53.6, 2356.0], [53.7, 2357.0], [53.8, 2357.0], [53.9, 2364.0], [54.0, 2364.0], [54.1, 2369.0], [54.2, 2369.0], [54.3, 2376.0], [54.4, 2376.0], [54.5, 2388.0], [54.6, 2388.0], [54.7, 2390.0], [54.8, 2390.0], [54.9, 2394.0], [55.0, 2394.0], [55.1, 2394.0], [55.2, 2394.0], [55.3, 2396.0], [55.4, 2396.0], [55.5, 2396.0], [55.6, 2396.0], [55.7, 2396.0], [55.8, 2396.0], [55.9, 2399.0], [56.0, 2399.0], [56.1, 2401.0], [56.2, 2401.0], [56.3, 2401.0], [56.4, 2401.0], [56.5, 2402.0], [56.6, 2402.0], [56.7, 2405.0], [56.8, 2405.0], [56.9, 2405.0], [57.0, 2405.0], [57.1, 2407.0], [57.2, 2407.0], [57.3, 2408.0], [57.4, 2408.0], [57.5, 2410.0], [57.6, 2410.0], [57.7, 2416.0], [57.8, 2416.0], [57.9, 2456.0], [58.0, 2456.0], [58.1, 2471.0], [58.2, 2471.0], [58.3, 2483.0], [58.4, 2483.0], [58.5, 2492.0], [58.6, 2492.0], [58.7, 2509.0], [58.8, 2509.0], [58.9, 2528.0], [59.0, 2528.0], [59.1, 2533.0], [59.2, 2533.0], [59.3, 2537.0], [59.4, 2537.0], [59.5, 2563.0], [59.6, 2563.0], [59.7, 2563.0], [59.8, 2563.0], [59.9, 2567.0], [60.0, 2567.0], [60.1, 2609.0], [60.2, 2609.0], [60.3, 2611.0], [60.4, 2611.0], [60.5, 2629.0], [60.6, 2629.0], [60.7, 2635.0], [60.8, 2635.0], [60.9, 2639.0], [61.0, 2639.0], [61.1, 2645.0], [61.2, 2645.0], [61.3, 2646.0], [61.4, 2646.0], [61.5, 2648.0], [61.6, 2648.0], [61.7, 2649.0], [61.8, 2649.0], [61.9, 2651.0], [62.0, 2651.0], [62.1, 2654.0], [62.2, 2654.0], [62.3, 2659.0], [62.4, 2659.0], [62.5, 2674.0], [62.6, 2674.0], [62.7, 2680.0], [62.8, 2680.0], [62.9, 2687.0], [63.0, 2687.0], [63.1, 2695.0], [63.2, 2695.0], [63.3, 2708.0], [63.4, 2708.0], [63.5, 2713.0], [63.6, 2713.0], [63.7, 2718.0], [63.8, 2718.0], [63.9, 2724.0], [64.0, 2724.0], [64.1, 2725.0], [64.2, 2725.0], [64.3, 2756.0], [64.4, 2756.0], [64.5, 2757.0], [64.6, 2757.0], [64.7, 2758.0], [64.8, 2758.0], [64.9, 2762.0], [65.0, 2762.0], [65.1, 2803.0], [65.2, 2803.0], [65.3, 2823.0], [65.4, 2823.0], [65.5, 2850.0], [65.6, 2850.0], [65.7, 2866.0], [65.8, 2866.0], [65.9, 2910.0], [66.0, 2910.0], [66.1, 2911.0], [66.2, 2911.0], [66.3, 2924.0], [66.4, 2924.0], [66.5, 2934.0], [66.6, 2934.0], [66.7, 2947.0], [66.8, 2947.0], [66.9, 2953.0], [67.0, 2953.0], [67.1, 2953.0], [67.2, 2953.0], [67.3, 2964.0], [67.4, 2964.0], [67.5, 2965.0], [67.6, 2965.0], [67.7, 2974.0], [67.8, 2974.0], [67.9, 2998.0], [68.0, 2998.0], [68.1, 3021.0], [68.2, 3021.0], [68.3, 3034.0], [68.4, 3034.0], [68.5, 3056.0], [68.6, 3056.0], [68.7, 3077.0], [68.8, 3077.0], [68.9, 3091.0], [69.0, 3091.0], [69.1, 3114.0], [69.2, 3114.0], [69.3, 3148.0], [69.4, 3148.0], [69.5, 3148.0], [69.6, 3148.0], [69.7, 3164.0], [69.8, 3164.0], [69.9, 3169.0], [70.0, 3169.0], [70.1, 3192.0], [70.2, 3192.0], [70.3, 3267.0], [70.4, 3267.0], [70.5, 3277.0], [70.6, 3277.0], [70.7, 3281.0], [70.8, 3281.0], [70.9, 3283.0], [71.0, 3283.0], [71.1, 3293.0], [71.2, 3293.0], [71.3, 3294.0], [71.4, 3294.0], [71.5, 3319.0], [71.6, 3319.0], [71.7, 3331.0], [71.8, 3331.0], [71.9, 3345.0], [72.0, 3345.0], [72.1, 3378.0], [72.2, 3378.0], [72.3, 3396.0], [72.4, 3396.0], [72.5, 3401.0], [72.6, 3401.0], [72.7, 3409.0], [72.8, 3409.0], [72.9, 3414.0], [73.0, 3414.0], [73.1, 3415.0], [73.2, 3415.0], [73.3, 3418.0], [73.4, 3418.0], [73.5, 3419.0], [73.6, 3419.0], [73.7, 3420.0], [73.8, 3420.0], [73.9, 3428.0], [74.0, 3428.0], [74.1, 3431.0], [74.2, 3431.0], [74.3, 3451.0], [74.4, 3451.0], [74.5, 3467.0], [74.6, 3467.0], [74.7, 3509.0], [74.8, 3509.0], [74.9, 3534.0], [75.0, 3534.0], [75.1, 3553.0], [75.2, 3553.0], [75.3, 3553.0], [75.4, 3553.0], [75.5, 3558.0], [75.6, 3558.0], [75.7, 3590.0], [75.8, 3590.0], [75.9, 3622.0], [76.0, 3622.0], [76.1, 3630.0], [76.2, 3630.0], [76.3, 3650.0], [76.4, 3650.0], [76.5, 3657.0], [76.6, 3657.0], [76.7, 3665.0], [76.8, 3665.0], [76.9, 3672.0], [77.0, 3672.0], [77.1, 3683.0], [77.2, 3683.0], [77.3, 3684.0], [77.4, 3684.0], [77.5, 3703.0], [77.6, 3703.0], [77.7, 3745.0], [77.8, 3745.0], [77.9, 3753.0], [78.0, 3753.0], [78.1, 3763.0], [78.2, 3763.0], [78.3, 3766.0], [78.4, 3766.0], [78.5, 3773.0], [78.6, 3773.0], [78.7, 3797.0], [78.8, 3797.0], [78.9, 3830.0], [79.0, 3830.0], [79.1, 3859.0], [79.2, 3859.0], [79.3, 3945.0], [79.4, 3945.0], [79.5, 3991.0], [79.6, 3991.0], [79.7, 4006.0], [79.8, 4006.0], [79.9, 4007.0], [80.0, 4007.0], [80.1, 4010.0], [80.2, 4010.0], [80.3, 4035.0], [80.4, 4035.0], [80.5, 4040.0], [80.6, 4040.0], [80.7, 4101.0], [80.8, 4101.0], [80.9, 4137.0], [81.0, 4137.0], [81.1, 4145.0], [81.2, 4145.0], [81.3, 4159.0], [81.4, 4159.0], [81.5, 4160.0], [81.6, 4160.0], [81.7, 4191.0], [81.8, 4191.0], [81.9, 4219.0], [82.0, 4219.0], [82.1, 4254.0], [82.2, 4254.0], [82.3, 4265.0], [82.4, 4265.0], [82.5, 4266.0], [82.6, 4266.0], [82.7, 4295.0], [82.8, 4295.0], [82.9, 4306.0], [83.0, 4306.0], [83.1, 4323.0], [83.2, 4323.0], [83.3, 4325.0], [83.4, 4325.0], [83.5, 4329.0], [83.6, 4329.0], [83.7, 4366.0], [83.8, 4366.0], [83.9, 4368.0], [84.0, 4368.0], [84.1, 4386.0], [84.2, 4386.0], [84.3, 4447.0], [84.4, 4447.0], [84.5, 4448.0], [84.6, 4448.0], [84.7, 4451.0], [84.8, 4451.0], [84.9, 4454.0], [85.0, 4454.0], [85.1, 4461.0], [85.2, 4461.0], [85.3, 4473.0], [85.4, 4473.0], [85.5, 4494.0], [85.6, 4494.0], [85.7, 4510.0], [85.8, 4510.0], [85.9, 4510.0], [86.0, 4510.0], [86.1, 4544.0], [86.2, 4544.0], [86.3, 4545.0], [86.4, 4545.0], [86.5, 4554.0], [86.6, 4554.0], [86.7, 4555.0], [86.8, 4555.0], [86.9, 4555.0], [87.0, 4555.0], [87.1, 4562.0], [87.2, 4562.0], [87.3, 4564.0], [87.4, 4564.0], [87.5, 4567.0], [87.6, 4567.0], [87.7, 4569.0], [87.8, 4569.0], [87.9, 4569.0], [88.0, 4569.0], [88.1, 4592.0], [88.2, 4592.0], [88.3, 4617.0], [88.4, 4617.0], [88.5, 4636.0], [88.6, 4636.0], [88.7, 4637.0], [88.8, 4637.0], [88.9, 4650.0], [89.0, 4650.0], [89.1, 4652.0], [89.2, 4652.0], [89.3, 4666.0], [89.4, 4666.0], [89.5, 4694.0], [89.6, 4694.0], [89.7, 4725.0], [89.8, 4725.0], [89.9, 4729.0], [90.0, 4729.0], [90.1, 4740.0], [90.2, 4740.0], [90.3, 4745.0], [90.4, 4745.0], [90.5, 4745.0], [90.6, 4745.0], [90.7, 4753.0], [90.8, 4753.0], [90.9, 4755.0], [91.0, 4755.0], [91.1, 4758.0], [91.2, 4758.0], [91.3, 4763.0], [91.4, 4763.0], [91.5, 4765.0], [91.6, 4765.0], [91.7, 4770.0], [91.8, 4770.0], [91.9, 4771.0], [92.0, 4771.0], [92.1, 4772.0], [92.2, 4772.0], [92.3, 4776.0], [92.4, 4776.0], [92.5, 4781.0], [92.6, 4781.0], [92.7, 4791.0], [92.8, 4791.0], [92.9, 4793.0], [93.0, 4793.0], [93.1, 4798.0], [93.2, 4798.0], [93.3, 4798.0], [93.4, 4798.0], [93.5, 4799.0], [93.6, 4799.0], [93.7, 4815.0], [93.8, 4815.0], [93.9, 4816.0], [94.0, 4816.0], [94.1, 4833.0], [94.2, 4833.0], [94.3, 4845.0], [94.4, 4845.0], [94.5, 4859.0], [94.6, 4859.0], [94.7, 4869.0], [94.8, 4869.0], [94.9, 4869.0], [95.0, 4869.0], [95.1, 4871.0], [95.2, 4871.0], [95.3, 4884.0], [95.4, 4884.0], [95.5, 4884.0], [95.6, 4884.0], [95.7, 4895.0], [95.8, 4895.0], [95.9, 4908.0], [96.0, 4908.0], [96.1, 4920.0], [96.2, 4920.0], [96.3, 4932.0], [96.4, 4932.0], [96.5, 4932.0], [96.6, 4932.0], [96.7, 4933.0], [96.8, 4933.0], [96.9, 4936.0], [97.0, 4936.0], [97.1, 4942.0], [97.2, 4942.0], [97.3, 4946.0], [97.4, 4946.0], [97.5, 4946.0], [97.6, 4946.0], [97.7, 4957.0], [97.8, 4957.0], [97.9, 4957.0], [98.0, 4957.0], [98.1, 4958.0], [98.2, 4958.0], [98.3, 4959.0], [98.4, 4959.0], [98.5, 4974.0], [98.6, 4974.0], [98.7, 4978.0], [98.8, 4978.0], [98.9, 4989.0], [99.0, 4989.0], [99.1, 5002.0], [99.2, 5002.0], [99.3, 5049.0], [99.4, 5049.0], [99.5, 5069.0], [99.6, 5069.0], [99.7, 5247.0], [99.8, 5247.0], [99.9, 5277.0], [100.0, 5277.0]], "isOverall": false, "label": "Get Users", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 51.0, "series": [{"data": [[600.0, 1.0], [700.0, 4.0], [800.0, 6.0], [900.0, 17.0], [1000.0, 13.0], [1100.0, 3.0], [1200.0, 7.0], [1300.0, 9.0], [1400.0, 5.0], [1500.0, 15.0], [1600.0, 17.0], [1700.0, 26.0], [1800.0, 19.0], [1900.0, 21.0], [2000.0, 19.0], [2100.0, 7.0], [2300.0, 31.0], [2200.0, 14.0], [2400.0, 11.0], [2500.0, 6.0], [2600.0, 7.0], [2800.0, 9.0], [2700.0, 11.0], [2900.0, 13.0], [3000.0, 16.0], [3100.0, 13.0], [3200.0, 24.0], [3300.0, 4.0], [3400.0, 15.0], [3500.0, 8.0], [3700.0, 9.0], [3600.0, 10.0], [3800.0, 6.0], [3900.0, 5.0], [4000.0, 6.0], [4300.0, 6.0], [4100.0, 3.0], [4200.0, 7.0], [4400.0, 9.0], [4600.0, 2.0], [4500.0, 6.0], [4700.0, 7.0], [4800.0, 3.0], [5000.0, 6.0], [5100.0, 5.0], [4900.0, 5.0], [5300.0, 2.0], [5200.0, 3.0], [5400.0, 4.0], [5600.0, 2.0], [5500.0, 3.0], [5700.0, 3.0], [5800.0, 4.0], [6100.0, 2.0], [6000.0, 2.0], [5900.0, 4.0], [400.0, 2.0], [500.0, 3.0]], "isOverall": false, "label": "Post User", "isController": false}, {"data": [[0.0, 2.0], [600.0, 5.0], [700.0, 1.0], [800.0, 8.0], [900.0, 8.0], [1000.0, 39.0], [1100.0, 13.0], [1200.0, 16.0], [1300.0, 24.0], [1400.0, 27.0], [1500.0, 51.0], [1600.0, 39.0], [1700.0, 10.0], [1800.0, 5.0], [1900.0, 5.0], [2000.0, 15.0], [2100.0, 3.0], [2300.0, 6.0], [2400.0, 18.0], [2500.0, 8.0], [2600.0, 8.0], [2700.0, 7.0], [2800.0, 10.0], [2900.0, 6.0], [3100.0, 4.0], [3200.0, 6.0], [3300.0, 5.0], [3400.0, 6.0], [3500.0, 4.0], [3600.0, 6.0], [3700.0, 3.0], [3800.0, 2.0], [3900.0, 9.0], [4000.0, 2.0], [4200.0, 11.0], [4300.0, 3.0], [4100.0, 8.0], [4600.0, 2.0], [4400.0, 2.0], [4500.0, 3.0], [4700.0, 3.0], [4800.0, 1.0], [5100.0, 5.0], [5000.0, 6.0], [4900.0, 5.0], [5200.0, 7.0], [5300.0, 3.0], [5400.0, 2.0], [5600.0, 2.0], [5500.0, 2.0], [5700.0, 3.0], [5800.0, 4.0], [5900.0, 4.0], [6000.0, 3.0], [6100.0, 1.0], [6200.0, 1.0], [200.0, 9.0], [300.0, 5.0], [400.0, 11.0], [500.0, 13.0]], "isOverall": false, "label": "Delete User", "isController": false}, {"data": [[0.0, 7.0], [600.0, 17.0], [700.0, 28.0], [800.0, 32.0], [900.0, 15.0], [1000.0, 13.0], [1100.0, 28.0], [1200.0, 30.0], [1300.0, 34.0], [1400.0, 22.0], [1500.0, 30.0], [1600.0, 44.0], [100.0, 1.0], [1700.0, 15.0], [1800.0, 8.0], [1900.0, 3.0], [2000.0, 13.0], [2100.0, 8.0], [2200.0, 1.0], [2400.0, 2.0], [2500.0, 1.0], [2700.0, 1.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [3200.0, 1.0], [3300.0, 2.0], [3400.0, 3.0], [3500.0, 3.0], [3600.0, 1.0], [3700.0, 4.0], [3800.0, 1.0], [3900.0, 2.0], [4000.0, 2.0], [4300.0, 1.0], [4100.0, 2.0], [4500.0, 8.0], [4600.0, 6.0], [4800.0, 12.0], [300.0, 1.0], [4900.0, 11.0], [5100.0, 8.0], [5200.0, 9.0], [5300.0, 2.0], [400.0, 29.0], [500.0, 34.0]], "isOverall": false, "label": "Put User", "isController": false}, {"data": [[0.0, 4.0], [600.0, 6.0], [700.0, 14.0], [800.0, 26.0], [900.0, 7.0], [1000.0, 10.0], [1100.0, 10.0], [1200.0, 12.0], [1300.0, 20.0], [1400.0, 17.0], [1500.0, 31.0], [1600.0, 10.0], [1700.0, 7.0], [1800.0, 3.0], [1900.0, 15.0], [2000.0, 16.0], [2100.0, 17.0], [2200.0, 8.0], [2300.0, 20.0], [2400.0, 13.0], [2500.0, 7.0], [2600.0, 16.0], [2700.0, 9.0], [2800.0, 4.0], [2900.0, 11.0], [3000.0, 5.0], [3100.0, 6.0], [3200.0, 6.0], [3300.0, 5.0], [3400.0, 11.0], [3500.0, 6.0], [3600.0, 8.0], [3700.0, 7.0], [3800.0, 2.0], [3900.0, 2.0], [4000.0, 5.0], [4100.0, 6.0], [4200.0, 5.0], [4300.0, 7.0], [4400.0, 7.0], [4500.0, 13.0], [4600.0, 7.0], [4800.0, 11.0], [4700.0, 20.0], [4900.0, 16.0], [5000.0, 3.0], [5200.0, 2.0], [100.0, 1.0], [200.0, 8.0], [300.0, 3.0], [400.0, 11.0], [500.0, 4.0]], "isOverall": false, "label": "Get Users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 6200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 96.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1300.0, "series": [{"data": [[0.0, 96.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 604.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1300.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 94.47400000000003, "minX": 1.6584363E12, "maxY": 94.47400000000003, "series": [{"data": [[1.6584363E12, 94.47400000000003]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6584363E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.0, "maxY": 3980.0, "series": [{"data": [[46.0, 1043.0], [54.0, 1042.0], [61.0, 1031.5], [60.0, 1052.5], [63.0, 1023.0], [70.0, 496.5], [68.0, 949.4545454545454], [74.0, 793.0], [72.0, 734.0], [79.0, 3370.3333333333335], [77.0, 2442.0], [76.0, 956.6666666666666], [82.0, 3423.5], [81.0, 3296.5], [80.0, 3239.0], [87.0, 3403.5], [85.0, 3328.75], [84.0, 2515.0], [89.0, 3159.0], [88.0, 2967.0], [95.0, 3646.0], [94.0, 2807.0], [92.0, 3175.0], [98.0, 1766.0], [97.0, 1603.142857142857], [100.0, 2941.5636792452865]], "isOverall": false, "label": "Post User", "isController": false}, {"data": [[96.652, 2791.656000000003]], "isOverall": false, "label": "Post User-Aggregated", "isController": false}, {"data": [[2.0, 210.0], [3.0, 249.0], [4.0, 228.0], [5.0, 252.0], [6.0, 268.0], [7.0, 278.0], [8.0, 278.0], [9.0, 302.0], [10.0, 303.0], [11.0, 332.0], [12.0, 364.0], [13.0, 364.0], [14.0, 402.0], [15.0, 403.0], [16.0, 432.0], [17.0, 433.0], [18.0, 447.0], [19.0, 479.0], [20.0, 478.0], [21.0, 96.0], [22.0, 485.0], [23.0, 497.0], [24.0, 497.0], [25.0, 523.0], [26.0, 531.0], [27.0, 543.0], [28.0, 543.0], [29.0, 646.0], [30.0, 25.0], [31.0, 634.0], [33.0, 596.0], [32.0, 617.0], [35.0, 575.0], [34.0, 581.0], [37.0, 577.0], [36.0, 559.0], [39.0, 536.0], [38.0, 568.0], [41.0, 1039.0], [40.0, 657.0], [43.0, 1038.0], [42.0, 1037.0], [45.0, 1035.0], [44.0, 1037.0], [47.0, 1023.0], [46.0, 1031.0], [49.0, 1042.0], [48.0, 1039.0], [51.0, 1034.0], [50.0, 1038.0], [53.0, 1050.0], [52.0, 1041.0], [55.0, 1064.0], [54.0, 1058.0], [57.0, 1071.0], [56.0, 1063.0], [59.0, 1064.0], [58.0, 1072.0], [61.0, 1034.0], [60.0, 1058.0], [63.0, 1031.0], [62.0, 1032.0], [67.0, 1032.0], [66.0, 1012.0], [65.0, 1017.0], [64.0, 1017.0], [71.0, 459.0], [70.0, 881.0], [69.0, 882.0], [68.0, 1022.0], [75.0, 825.0], [74.0, 802.0], [73.0, 799.0], [72.0, 500.0], [79.0, 3734.0], [78.0, 3799.0], [77.0, 1247.0], [76.0, 803.0], [83.0, 3393.0], [82.0, 3663.0], [81.0, 3665.0], [80.0, 3690.0], [87.0, 3391.0], [86.0, 3569.0], [85.0, 3869.0], [84.0, 3608.0], [91.0, 3475.0], [90.0, 3594.5], [89.0, 3626.0], [88.0, 3523.0], [95.0, 3705.4], [94.0, 3969.0], [93.0, 3947.0], [92.0, 3980.0], [99.0, 1774.0], [98.0, 2134.0], [97.0, 1503.6129032258066], [96.0, 1657.0], [100.0, 2584.905817174514], [1.0, 200.0]], "isOverall": false, "label": "Delete User", "isController": false}, {"data": [[89.772, 2275.6319999999973]], "isOverall": false, "label": "Delete User-Aggregated", "isController": false}, {"data": [[33.0, 571.0], [32.0, 596.0], [35.0, 554.0], [34.0, 552.0], [37.0, 552.0], [39.0, 507.75], [38.0, 536.3333333333334], [71.0, 437.8333333333333], [70.0, 481.0], [68.0, 816.6999999999999], [75.0, 799.3333333333334], [74.0, 689.1666666666666], [72.0, 444.6666666666667], [79.0, 3729.0], [76.0, 806.6666666666666], [86.0, 3032.0], [85.0, 3133.0], [88.0, 3005.5], [95.0, 3401.0], [98.0, 1694.5], [97.0, 1756.2307692307693], [100.0, 1874.720297029701], [28.0, 621.2222222222222], [29.0, 624.5], [31.0, 614.0]], "isOverall": false, "label": "Put User", "isController": false}, {"data": [[93.53399999999999, 1723.909999999999]], "isOverall": false, "label": "Put User-Aggregated", "isController": false}, {"data": [[35.0, 197.0], [62.0, 459.0], [71.0, 739.0], [70.0, 463.0], [75.0, 709.5], [74.0, 817.5], [78.0, 3283.0000000000005], [77.0, 3285.8666666666663], [80.0, 3558.0], [86.0, 707.0], [85.0, 3169.0], [88.0, 2160.3333333333335], [94.0, 783.0], [95.0, 1865.625], [96.0, 1170.5], [98.0, 1373.0], [97.0, 1647.76], [100.0, 2514.668235294115]], "isOverall": false, "label": "Get Users", "isController": false}, {"data": [[97.93800000000002, 2444.1620000000007]], "isOverall": false, "label": "Get Users-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 14305.3, "minX": 1.6584363E12, "maxY": 1194406.0333333334, "series": [{"data": [[1.6584363E12, 1194406.0333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6584363E12, 14305.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6584363E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1723.909999999999, "minX": 1.6584363E12, "maxY": 2791.656000000003, "series": [{"data": [[1.6584363E12, 2791.656000000003]], "isOverall": false, "label": "Post User", "isController": false}, {"data": [[1.6584363E12, 2275.6319999999973]], "isOverall": false, "label": "Delete User", "isController": false}, {"data": [[1.6584363E12, 1723.909999999999]], "isOverall": false, "label": "Put User", "isController": false}, {"data": [[1.6584363E12, 2444.1620000000007]], "isOverall": false, "label": "Get Users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6584363E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1723.8179999999982, "minX": 1.6584363E12, "maxY": 2791.556, "series": [{"data": [[1.6584363E12, 2791.556]], "isOverall": false, "label": "Post User", "isController": false}, {"data": [[1.6584363E12, 2275.5479999999984]], "isOverall": false, "label": "Delete User", "isController": false}, {"data": [[1.6584363E12, 1723.8179999999982]], "isOverall": false, "label": "Put User", "isController": false}, {"data": [[1.6584363E12, 2443.7920000000045]], "isOverall": false, "label": "Get Users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6584363E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.8320000000000002, "minX": 1.6584363E12, "maxY": 2.742000000000002, "series": [{"data": [[1.6584363E12, 0.8839999999999997]], "isOverall": false, "label": "Post User", "isController": false}, {"data": [[1.6584363E12, 0.8320000000000004]], "isOverall": false, "label": "Delete User", "isController": false}, {"data": [[1.6584363E12, 0.8320000000000002]], "isOverall": false, "label": "Put User", "isController": false}, {"data": [[1.6584363E12, 2.742000000000002]], "isOverall": false, "label": "Get Users", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6584363E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.6584363E12, "maxY": 6225.0, "series": [{"data": [[1.6584363E12, 6225.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6584363E12, 4706.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6584363E12, 5875.490000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6584363E12, 5028.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6584363E12, 12.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6584363E12, 1822.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6584363E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 602.5, "minX": 1.0, "maxY": 5221.0, "series": [{"data": [[2.0, 2096.0], [37.0, 5221.0], [43.0, 2293.0], [42.0, 4025.0], [45.0, 4807.0], [48.0, 1156.5], [50.0, 1686.5], [58.0, 1915.0], [60.0, 1761.5], [63.0, 3065.0], [4.0, 3296.0], [66.0, 2631.0], [65.0, 4786.0], [70.0, 1587.0], [77.0, 1665.0], [80.0, 804.5], [92.0, 1498.5], [6.0, 1214.5], [96.0, 3394.5], [101.0, 3941.0], [100.0, 1950.5], [106.0, 602.5], [7.0, 707.0], [113.0, 3412.0], [132.0, 813.5], [10.0, 4031.5], [14.0, 880.0], [1.0, 2798.5], [17.0, 3766.0], [18.0, 2023.5], [19.0, 3608.0], [20.0, 2090.5], [22.0, 2413.0], [23.0, 4617.0], [26.0, 2087.0], [30.0, 2934.0], [31.0, 2079.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 132.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 602.5, "minX": 1.0, "maxY": 5221.0, "series": [{"data": [[2.0, 2095.5], [37.0, 5221.0], [43.0, 2293.0], [42.0, 4025.0], [45.0, 4806.0], [48.0, 1156.5], [50.0, 1686.5], [58.0, 1914.5], [60.0, 1761.5], [63.0, 3065.0], [4.0, 3296.0], [66.0, 2630.5], [65.0, 4786.0], [70.0, 1587.0], [77.0, 1665.0], [80.0, 804.5], [92.0, 1498.5], [6.0, 1213.5], [96.0, 3394.0], [101.0, 3941.0], [100.0, 1950.0], [106.0, 602.5], [7.0, 701.0], [113.0, 3412.0], [132.0, 813.5], [10.0, 4031.5], [14.0, 880.0], [1.0, 2798.5], [17.0, 3766.0], [18.0, 2023.0], [19.0, 3608.0], [20.0, 2090.0], [22.0, 2413.0], [23.0, 4616.0], [26.0, 2087.0], [30.0, 2934.0], [31.0, 2079.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 132.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.6584363E12, "maxY": 33.333333333333336, "series": [{"data": [[1.6584363E12, 33.333333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6584363E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.6584363E12, "maxY": 33.333333333333336, "series": [{"data": [[1.6584363E12, 33.333333333333336]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6584363E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8.333333333333334, "minX": 1.6584363E12, "maxY": 8.333333333333334, "series": [{"data": [[1.6584363E12, 8.333333333333334]], "isOverall": false, "label": "Put User-success", "isController": false}, {"data": [[1.6584363E12, 8.333333333333334]], "isOverall": false, "label": "Get Users-success", "isController": false}, {"data": [[1.6584363E12, 8.333333333333334]], "isOverall": false, "label": "Post User-success", "isController": false}, {"data": [[1.6584363E12, 8.333333333333334]], "isOverall": false, "label": "Delete User-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6584363E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.6584363E12, "maxY": 33.333333333333336, "series": [{"data": [[1.6584363E12, 33.333333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6584363E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

