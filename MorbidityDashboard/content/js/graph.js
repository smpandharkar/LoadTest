/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 16.0, "minX": 0.0, "maxY": 4941.0, "series": [{"data": [[0.0, 16.0], [0.1, 16.0], [0.2, 17.0], [0.3, 17.0], [0.4, 20.0], [0.5, 20.0], [0.6, 20.0], [0.7, 21.0], [0.8, 22.0], [0.9, 22.0], [1.0, 23.0], [1.1, 23.0], [1.2, 23.0], [1.3, 23.0], [1.4, 24.0], [1.5, 24.0], [1.6, 25.0], [1.7, 25.0], [1.8, 26.0], [1.9, 26.0], [2.0, 26.0], [2.1, 26.0], [2.2, 26.0], [2.3, 26.0], [2.4, 27.0], [2.5, 27.0], [2.6, 27.0], [2.7, 27.0], [2.8, 28.0], [2.9, 28.0], [3.0, 28.0], [3.1, 28.0], [3.2, 28.0], [3.3, 28.0], [3.4, 28.0], [3.5, 28.0], [3.6, 29.0], [3.7, 29.0], [3.8, 29.0], [3.9, 29.0], [4.0, 30.0], [4.1, 30.0], [4.2, 31.0], [4.3, 31.0], [4.4, 31.0], [4.5, 31.0], [4.6, 31.0], [4.7, 31.0], [4.8, 32.0], [4.9, 32.0], [5.0, 32.0], [5.1, 32.0], [5.2, 32.0], [5.3, 32.0], [5.4, 33.0], [5.5, 33.0], [5.6, 34.0], [5.7, 34.0], [5.8, 35.0], [5.9, 35.0], [6.0, 36.0], [6.1, 36.0], [6.2, 39.0], [6.3, 39.0], [6.4, 40.0], [6.5, 40.0], [6.6, 41.0], [6.7, 41.0], [6.8, 45.0], [6.9, 45.0], [7.0, 64.0], [7.1, 64.0], [7.2, 65.0], [7.3, 65.0], [7.4, 1447.0], [7.5, 1447.0], [7.6, 1447.0], [7.7, 1509.0], [7.8, 1509.0], [7.9, 1510.0], [8.0, 1512.0], [8.1, 1512.0], [8.2, 1514.0], [8.3, 1514.0], [8.4, 1531.0], [8.5, 1531.0], [8.6, 1543.0], [8.7, 1543.0], [8.8, 1551.0], [8.9, 1551.0], [9.0, 1557.0], [9.1, 1557.0], [9.2, 1560.0], [9.3, 1560.0], [9.4, 1562.0], [9.5, 1562.0], [9.6, 1563.0], [9.7, 1563.0], [9.8, 1564.0], [9.9, 1564.0], [10.0, 1565.0], [10.1, 1565.0], [10.2, 1570.0], [10.3, 1570.0], [10.4, 1573.0], [10.5, 1573.0], [10.6, 1575.0], [10.7, 1575.0], [10.8, 1580.0], [10.9, 1580.0], [11.0, 1582.0], [11.1, 1582.0], [11.2, 1582.0], [11.3, 1582.0], [11.4, 1586.0], [11.5, 1586.0], [11.6, 1592.0], [11.7, 1592.0], [11.8, 1593.0], [11.9, 1593.0], [12.0, 1594.0], [12.1, 1594.0], [12.2, 1595.0], [12.3, 1595.0], [12.4, 1598.0], [12.5, 1598.0], [12.6, 1600.0], [12.7, 1600.0], [12.8, 1603.0], [12.9, 1603.0], [13.0, 1608.0], [13.1, 1608.0], [13.2, 1608.0], [13.3, 1608.0], [13.4, 1611.0], [13.5, 1611.0], [13.6, 1612.0], [13.7, 1612.0], [13.8, 1613.0], [13.9, 1613.0], [14.0, 1616.0], [14.1, 1616.0], [14.2, 1617.0], [14.3, 1617.0], [14.4, 1618.0], [14.5, 1618.0], [14.6, 1618.0], [14.7, 1618.0], [14.8, 1619.0], [14.9, 1619.0], [15.0, 1619.0], [15.1, 1619.0], [15.2, 1620.0], [15.3, 1620.0], [15.4, 1622.0], [15.5, 1622.0], [15.6, 1624.0], [15.7, 1624.0], [15.8, 1632.0], [15.9, 1632.0], [16.0, 1635.0], [16.1, 1635.0], [16.2, 1638.0], [16.3, 1638.0], [16.4, 1644.0], [16.5, 1644.0], [16.6, 1645.0], [16.7, 1645.0], [16.8, 1647.0], [16.9, 1647.0], [17.0, 1649.0], [17.1, 1649.0], [17.2, 1651.0], [17.3, 1651.0], [17.4, 1652.0], [17.5, 1652.0], [17.6, 1652.0], [17.7, 1652.0], [17.8, 1656.0], [17.9, 1656.0], [18.0, 1662.0], [18.1, 1662.0], [18.2, 1669.0], [18.3, 1669.0], [18.4, 1670.0], [18.5, 1670.0], [18.6, 1670.0], [18.7, 1670.0], [18.8, 1672.0], [18.9, 1672.0], [19.0, 1675.0], [19.1, 1675.0], [19.2, 1675.0], [19.3, 1675.0], [19.4, 1683.0], [19.5, 1683.0], [19.6, 1685.0], [19.7, 1685.0], [19.8, 1686.0], [19.9, 1686.0], [20.0, 1694.0], [20.1, 1694.0], [20.2, 1696.0], [20.3, 1696.0], [20.4, 1697.0], [20.5, 1697.0], [20.6, 1698.0], [20.7, 1698.0], [20.8, 1702.0], [20.9, 1702.0], [21.0, 1704.0], [21.1, 1704.0], [21.2, 1709.0], [21.3, 1709.0], [21.4, 1713.0], [21.5, 1713.0], [21.6, 1720.0], [21.7, 1720.0], [21.8, 1721.0], [21.9, 1721.0], [22.0, 1728.0], [22.1, 1728.0], [22.2, 1731.0], [22.3, 1731.0], [22.4, 1732.0], [22.5, 1732.0], [22.6, 1732.0], [22.7, 1732.0], [22.8, 1732.0], [22.9, 1732.0], [23.0, 1751.0], [23.1, 1751.0], [23.2, 1753.0], [23.3, 1753.0], [23.4, 1760.0], [23.5, 1760.0], [23.6, 1765.0], [23.7, 1765.0], [23.8, 1767.0], [23.9, 1767.0], [24.0, 1770.0], [24.1, 1770.0], [24.2, 1770.0], [24.3, 1770.0], [24.4, 1771.0], [24.5, 1771.0], [24.6, 1771.0], [24.7, 1771.0], [24.8, 1772.0], [24.9, 1772.0], [25.0, 1773.0], [25.1, 1773.0], [25.2, 1773.0], [25.3, 1773.0], [25.4, 1774.0], [25.5, 1774.0], [25.6, 1775.0], [25.7, 1775.0], [25.8, 1778.0], [25.9, 1778.0], [26.0, 1782.0], [26.1, 1782.0], [26.2, 1783.0], [26.3, 1783.0], [26.4, 1783.0], [26.5, 1783.0], [26.6, 1787.0], [26.7, 1787.0], [26.8, 1792.0], [26.9, 1792.0], [27.0, 1798.0], [27.1, 1798.0], [27.2, 1801.0], [27.3, 1801.0], [27.4, 1806.0], [27.5, 1806.0], [27.6, 1807.0], [27.7, 1807.0], [27.8, 1808.0], [27.9, 1808.0], [28.0, 1810.0], [28.1, 1810.0], [28.2, 1812.0], [28.3, 1812.0], [28.4, 1812.0], [28.5, 1812.0], [28.6, 1818.0], [28.7, 1818.0], [28.8, 1818.0], [28.9, 1818.0], [29.0, 1821.0], [29.1, 1821.0], [29.2, 1822.0], [29.3, 1822.0], [29.4, 1824.0], [29.5, 1824.0], [29.6, 1831.0], [29.7, 1831.0], [29.8, 1833.0], [29.9, 1833.0], [30.0, 1834.0], [30.1, 1834.0], [30.2, 1836.0], [30.3, 1836.0], [30.4, 1839.0], [30.5, 1839.0], [30.6, 1840.0], [30.7, 1840.0], [30.8, 1842.0], [30.9, 1842.0], [31.0, 1842.0], [31.1, 1842.0], [31.2, 1847.0], [31.3, 1847.0], [31.4, 1849.0], [31.5, 1849.0], [31.6, 1854.0], [31.7, 1854.0], [31.8, 1856.0], [31.9, 1856.0], [32.0, 1856.0], [32.1, 1856.0], [32.2, 1857.0], [32.3, 1857.0], [32.4, 1858.0], [32.5, 1858.0], [32.6, 1859.0], [32.7, 1859.0], [32.8, 1863.0], [32.9, 1863.0], [33.0, 1863.0], [33.1, 1863.0], [33.2, 1867.0], [33.3, 1867.0], [33.4, 1868.0], [33.5, 1868.0], [33.6, 1872.0], [33.7, 1872.0], [33.8, 1875.0], [33.9, 1875.0], [34.0, 1876.0], [34.1, 1876.0], [34.2, 1882.0], [34.3, 1882.0], [34.4, 1882.0], [34.5, 1882.0], [34.6, 1884.0], [34.7, 1884.0], [34.8, 1885.0], [34.9, 1885.0], [35.0, 1888.0], [35.1, 1888.0], [35.2, 1888.0], [35.3, 1888.0], [35.4, 1892.0], [35.5, 1892.0], [35.6, 1893.0], [35.7, 1893.0], [35.8, 1901.0], [35.9, 1901.0], [36.0, 1904.0], [36.1, 1904.0], [36.2, 1907.0], [36.3, 1907.0], [36.4, 1907.0], [36.5, 1907.0], [36.6, 1908.0], [36.7, 1908.0], [36.8, 1911.0], [36.9, 1911.0], [37.0, 1919.0], [37.1, 1919.0], [37.2, 1920.0], [37.3, 1920.0], [37.4, 1920.0], [37.5, 1920.0], [37.6, 1923.0], [37.7, 1923.0], [37.8, 1926.0], [37.9, 1926.0], [38.0, 1930.0], [38.1, 1930.0], [38.2, 1934.0], [38.3, 1934.0], [38.4, 1937.0], [38.5, 1937.0], [38.6, 1938.0], [38.7, 1938.0], [38.8, 1939.0], [38.9, 1939.0], [39.0, 1940.0], [39.1, 1940.0], [39.2, 1942.0], [39.3, 1942.0], [39.4, 1943.0], [39.5, 1943.0], [39.6, 1946.0], [39.7, 1946.0], [39.8, 1947.0], [39.9, 1947.0], [40.0, 1948.0], [40.1, 1948.0], [40.2, 1952.0], [40.3, 1952.0], [40.4, 1952.0], [40.5, 1958.0], [40.6, 1958.0], [40.7, 1962.0], [40.8, 1962.0], [40.9, 1965.0], [41.0, 1965.0], [41.1, 1969.0], [41.2, 1969.0], [41.3, 1970.0], [41.4, 1970.0], [41.5, 1972.0], [41.6, 1972.0], [41.7, 1972.0], [41.8, 1972.0], [41.9, 1979.0], [42.0, 1979.0], [42.1, 1982.0], [42.2, 1982.0], [42.3, 1987.0], [42.4, 1987.0], [42.5, 1987.0], [42.6, 1987.0], [42.7, 1988.0], [42.8, 1988.0], [42.9, 1988.0], [43.0, 1988.0], [43.1, 1989.0], [43.2, 1989.0], [43.3, 1989.0], [43.4, 1989.0], [43.5, 1990.0], [43.6, 1990.0], [43.7, 1995.0], [43.8, 1995.0], [43.9, 1996.0], [44.0, 1996.0], [44.1, 1996.0], [44.2, 1996.0], [44.3, 2000.0], [44.4, 2000.0], [44.5, 2001.0], [44.6, 2001.0], [44.7, 2002.0], [44.8, 2002.0], [44.9, 2005.0], [45.0, 2005.0], [45.1, 2006.0], [45.2, 2006.0], [45.3, 2008.0], [45.4, 2008.0], [45.5, 2012.0], [45.6, 2012.0], [45.7, 2013.0], [45.8, 2013.0], [45.9, 2013.0], [46.0, 2013.0], [46.1, 2013.0], [46.2, 2013.0], [46.3, 2015.0], [46.4, 2015.0], [46.5, 2015.0], [46.6, 2015.0], [46.7, 2017.0], [46.8, 2017.0], [46.9, 2022.0], [47.0, 2022.0], [47.1, 2023.0], [47.2, 2023.0], [47.3, 2028.0], [47.4, 2028.0], [47.5, 2037.0], [47.6, 2037.0], [47.7, 2040.0], [47.8, 2040.0], [47.9, 2043.0], [48.0, 2043.0], [48.1, 2044.0], [48.2, 2044.0], [48.3, 2049.0], [48.4, 2049.0], [48.5, 2049.0], [48.6, 2049.0], [48.7, 2051.0], [48.8, 2051.0], [48.9, 2051.0], [49.0, 2051.0], [49.1, 2054.0], [49.2, 2054.0], [49.3, 2055.0], [49.4, 2055.0], [49.5, 2062.0], [49.6, 2062.0], [49.7, 2065.0], [49.8, 2065.0], [49.9, 2069.0], [50.0, 2069.0], [50.1, 2070.0], [50.2, 2070.0], [50.3, 2072.0], [50.4, 2072.0], [50.5, 2072.0], [50.6, 2072.0], [50.7, 2073.0], [50.8, 2073.0], [50.9, 2073.0], [51.0, 2073.0], [51.1, 2074.0], [51.2, 2074.0], [51.3, 2075.0], [51.4, 2075.0], [51.5, 2076.0], [51.6, 2076.0], [51.7, 2083.0], [51.8, 2083.0], [51.9, 2083.0], [52.0, 2083.0], [52.1, 2084.0], [52.2, 2084.0], [52.3, 2088.0], [52.4, 2088.0], [52.5, 2091.0], [52.6, 2091.0], [52.7, 2093.0], [52.8, 2093.0], [52.9, 2095.0], [53.0, 2095.0], [53.1, 2095.0], [53.2, 2095.0], [53.3, 2095.0], [53.4, 2095.0], [53.5, 2098.0], [53.6, 2098.0], [53.7, 2100.0], [53.8, 2100.0], [53.9, 2104.0], [54.0, 2104.0], [54.1, 2105.0], [54.2, 2105.0], [54.3, 2118.0], [54.4, 2118.0], [54.5, 2129.0], [54.6, 2129.0], [54.7, 2132.0], [54.8, 2132.0], [54.9, 2135.0], [55.0, 2135.0], [55.1, 2137.0], [55.2, 2137.0], [55.3, 2150.0], [55.4, 2150.0], [55.5, 2156.0], [55.6, 2156.0], [55.7, 2158.0], [55.8, 2158.0], [55.9, 2169.0], [56.0, 2169.0], [56.1, 2174.0], [56.2, 2174.0], [56.3, 2180.0], [56.4, 2180.0], [56.5, 2181.0], [56.6, 2181.0], [56.7, 2186.0], [56.8, 2186.0], [56.9, 2191.0], [57.0, 2191.0], [57.1, 2196.0], [57.2, 2196.0], [57.3, 2209.0], [57.4, 2209.0], [57.5, 2210.0], [57.6, 2210.0], [57.7, 2211.0], [57.8, 2211.0], [57.9, 2215.0], [58.0, 2215.0], [58.1, 2221.0], [58.2, 2221.0], [58.3, 2230.0], [58.4, 2230.0], [58.5, 2233.0], [58.6, 2233.0], [58.7, 2234.0], [58.8, 2234.0], [58.9, 2243.0], [59.0, 2243.0], [59.1, 2244.0], [59.2, 2244.0], [59.3, 2250.0], [59.4, 2250.0], [59.5, 2252.0], [59.6, 2252.0], [59.7, 2255.0], [59.8, 2255.0], [59.9, 2256.0], [60.0, 2256.0], [60.1, 2258.0], [60.2, 2258.0], [60.3, 2262.0], [60.4, 2262.0], [60.5, 2269.0], [60.6, 2269.0], [60.7, 2279.0], [60.8, 2279.0], [60.9, 2281.0], [61.0, 2281.0], [61.1, 2293.0], [61.2, 2293.0], [61.3, 2294.0], [61.4, 2294.0], [61.5, 2297.0], [61.6, 2297.0], [61.7, 2305.0], [61.8, 2305.0], [61.9, 2307.0], [62.0, 2307.0], [62.1, 2312.0], [62.2, 2312.0], [62.3, 2313.0], [62.4, 2313.0], [62.5, 2317.0], [62.6, 2317.0], [62.7, 2317.0], [62.8, 2317.0], [62.9, 2329.0], [63.0, 2329.0], [63.1, 2330.0], [63.2, 2330.0], [63.3, 2335.0], [63.4, 2335.0], [63.5, 2336.0], [63.6, 2336.0], [63.7, 2343.0], [63.8, 2343.0], [63.9, 2352.0], [64.0, 2352.0], [64.1, 2365.0], [64.2, 2365.0], [64.3, 2365.0], [64.4, 2365.0], [64.5, 2369.0], [64.6, 2369.0], [64.7, 2375.0], [64.8, 2375.0], [64.9, 2379.0], [65.0, 2379.0], [65.1, 2381.0], [65.2, 2381.0], [65.3, 2382.0], [65.4, 2382.0], [65.5, 2386.0], [65.6, 2386.0], [65.7, 2396.0], [65.8, 2396.0], [65.9, 2401.0], [66.0, 2401.0], [66.1, 2403.0], [66.2, 2403.0], [66.3, 2407.0], [66.4, 2407.0], [66.5, 2409.0], [66.6, 2409.0], [66.7, 2410.0], [66.8, 2410.0], [66.9, 2419.0], [67.0, 2419.0], [67.1, 2419.0], [67.2, 2419.0], [67.3, 2427.0], [67.4, 2427.0], [67.5, 2430.0], [67.6, 2430.0], [67.7, 2441.0], [67.8, 2441.0], [67.9, 2445.0], [68.0, 2445.0], [68.1, 2449.0], [68.2, 2449.0], [68.3, 2450.0], [68.4, 2450.0], [68.5, 2458.0], [68.6, 2458.0], [68.7, 2459.0], [68.8, 2459.0], [68.9, 2460.0], [69.0, 2460.0], [69.1, 2472.0], [69.2, 2472.0], [69.3, 2477.0], [69.4, 2477.0], [69.5, 2483.0], [69.6, 2483.0], [69.7, 2486.0], [69.8, 2486.0], [69.9, 2491.0], [70.0, 2491.0], [70.1, 2492.0], [70.2, 2492.0], [70.3, 2498.0], [70.4, 2498.0], [70.5, 2501.0], [70.6, 2501.0], [70.7, 2513.0], [70.8, 2513.0], [70.9, 2514.0], [71.0, 2514.0], [71.1, 2515.0], [71.2, 2515.0], [71.3, 2515.0], [71.4, 2515.0], [71.5, 2521.0], [71.6, 2521.0], [71.7, 2530.0], [71.8, 2530.0], [71.9, 2538.0], [72.0, 2538.0], [72.1, 2549.0], [72.2, 2549.0], [72.3, 2563.0], [72.4, 2563.0], [72.5, 2574.0], [72.6, 2574.0], [72.7, 2578.0], [72.8, 2578.0], [72.9, 2583.0], [73.0, 2583.0], [73.1, 2585.0], [73.2, 2585.0], [73.3, 2587.0], [73.4, 2587.0], [73.5, 2592.0], [73.6, 2592.0], [73.7, 2595.0], [73.8, 2595.0], [73.9, 2598.0], [74.0, 2598.0], [74.1, 2610.0], [74.2, 2610.0], [74.3, 2621.0], [74.4, 2621.0], [74.5, 2632.0], [74.6, 2632.0], [74.7, 2638.0], [74.8, 2638.0], [74.9, 2648.0], [75.0, 2648.0], [75.1, 2656.0], [75.2, 2656.0], [75.3, 2659.0], [75.4, 2659.0], [75.5, 2660.0], [75.6, 2660.0], [75.7, 2667.0], [75.8, 2667.0], [75.9, 2671.0], [76.0, 2671.0], [76.1, 2673.0], [76.2, 2673.0], [76.3, 2683.0], [76.4, 2683.0], [76.5, 2684.0], [76.6, 2684.0], [76.7, 2690.0], [76.8, 2690.0], [76.9, 2693.0], [77.0, 2693.0], [77.1, 2702.0], [77.2, 2702.0], [77.3, 2704.0], [77.4, 2704.0], [77.5, 2710.0], [77.6, 2710.0], [77.7, 2711.0], [77.8, 2711.0], [77.9, 2729.0], [78.0, 2729.0], [78.1, 2738.0], [78.2, 2738.0], [78.3, 2738.0], [78.4, 2738.0], [78.5, 2758.0], [78.6, 2758.0], [78.7, 2770.0], [78.8, 2770.0], [78.9, 2773.0], [79.0, 2773.0], [79.1, 2776.0], [79.2, 2776.0], [79.3, 2783.0], [79.4, 2783.0], [79.5, 2783.0], [79.6, 2783.0], [79.7, 2784.0], [79.8, 2784.0], [79.9, 2791.0], [80.0, 2791.0], [80.1, 2795.0], [80.2, 2795.0], [80.3, 2798.0], [80.4, 2798.0], [80.5, 2799.0], [80.6, 2799.0], [80.7, 2807.0], [80.8, 2807.0], [80.9, 2807.0], [81.0, 2807.0], [81.1, 2812.0], [81.2, 2812.0], [81.3, 2827.0], [81.4, 2827.0], [81.5, 2829.0], [81.6, 2829.0], [81.7, 2830.0], [81.8, 2830.0], [81.9, 2833.0], [82.0, 2833.0], [82.1, 2835.0], [82.2, 2835.0], [82.3, 2841.0], [82.4, 2841.0], [82.5, 2845.0], [82.6, 2845.0], [82.7, 2845.0], [82.8, 2845.0], [82.9, 2848.0], [83.0, 2848.0], [83.1, 2851.0], [83.2, 2851.0], [83.3, 2865.0], [83.4, 2865.0], [83.5, 2868.0], [83.6, 2868.0], [83.7, 2876.0], [83.8, 2876.0], [83.9, 2881.0], [84.0, 2881.0], [84.1, 2893.0], [84.2, 2893.0], [84.3, 2895.0], [84.4, 2895.0], [84.5, 2898.0], [84.6, 2898.0], [84.7, 2899.0], [84.8, 2899.0], [84.9, 2900.0], [85.0, 2900.0], [85.1, 2938.0], [85.2, 2938.0], [85.3, 2938.0], [85.4, 2938.0], [85.5, 2945.0], [85.6, 2945.0], [85.7, 2948.0], [85.8, 2948.0], [85.9, 2961.0], [86.0, 2961.0], [86.1, 2963.0], [86.2, 2963.0], [86.3, 2964.0], [86.4, 2964.0], [86.5, 2965.0], [86.6, 2965.0], [86.7, 2967.0], [86.8, 2967.0], [86.9, 2972.0], [87.0, 2972.0], [87.1, 2975.0], [87.2, 2975.0], [87.3, 2982.0], [87.4, 2982.0], [87.5, 2984.0], [87.6, 2984.0], [87.7, 2987.0], [87.8, 2987.0], [87.9, 2988.0], [88.0, 2988.0], [88.1, 2997.0], [88.2, 2997.0], [88.3, 3002.0], [88.4, 3002.0], [88.5, 3011.0], [88.6, 3011.0], [88.7, 3011.0], [88.8, 3011.0], [88.9, 3014.0], [89.0, 3014.0], [89.1, 3018.0], [89.2, 3018.0], [89.3, 3018.0], [89.4, 3018.0], [89.5, 3035.0], [89.6, 3035.0], [89.7, 3035.0], [89.8, 3035.0], [89.9, 3036.0], [90.0, 3036.0], [90.1, 3038.0], [90.2, 3038.0], [90.3, 3039.0], [90.4, 3039.0], [90.5, 3042.0], [90.6, 3042.0], [90.7, 3051.0], [90.8, 3051.0], [90.9, 3055.0], [91.0, 3055.0], [91.1, 3075.0], [91.2, 3075.0], [91.3, 3092.0], [91.4, 3092.0], [91.5, 3097.0], [91.6, 3097.0], [91.7, 3109.0], [91.8, 3109.0], [91.9, 3118.0], [92.0, 3118.0], [92.1, 3123.0], [92.2, 3123.0], [92.3, 3130.0], [92.4, 3130.0], [92.5, 3130.0], [92.6, 3130.0], [92.7, 3134.0], [92.8, 3134.0], [92.9, 3135.0], [93.0, 3135.0], [93.1, 3136.0], [93.2, 3136.0], [93.3, 3139.0], [93.4, 3139.0], [93.5, 3166.0], [93.6, 3166.0], [93.7, 3167.0], [93.8, 3167.0], [93.9, 3168.0], [94.0, 3168.0], [94.1, 3180.0], [94.2, 3180.0], [94.3, 3181.0], [94.4, 3181.0], [94.5, 3187.0], [94.6, 3187.0], [94.7, 3189.0], [94.8, 3189.0], [94.9, 3198.0], [95.0, 3198.0], [95.1, 3201.0], [95.2, 3201.0], [95.3, 3203.0], [95.4, 3203.0], [95.5, 3208.0], [95.6, 3208.0], [95.7, 3210.0], [95.8, 3210.0], [95.9, 3211.0], [96.0, 3211.0], [96.1, 3229.0], [96.2, 3229.0], [96.3, 3256.0], [96.4, 3256.0], [96.5, 3263.0], [96.6, 3263.0], [96.7, 3268.0], [96.8, 3268.0], [96.9, 3275.0], [97.0, 3275.0], [97.1, 3311.0], [97.2, 3311.0], [97.3, 3314.0], [97.4, 3314.0], [97.5, 3333.0], [97.6, 3333.0], [97.7, 3338.0], [97.8, 3338.0], [97.9, 3378.0], [98.0, 3378.0], [98.1, 3378.0], [98.2, 3378.0], [98.3, 3397.0], [98.4, 3397.0], [98.5, 3400.0], [98.6, 3400.0], [98.7, 3416.0], [98.8, 3416.0], [98.9, 3421.0], [99.0, 3421.0], [99.1, 3432.0], [99.2, 3432.0], [99.3, 3434.0], [99.4, 3434.0], [99.5, 3501.0], [99.6, 3501.0], [99.7, 3718.0], [99.8, 3718.0], [99.9, 4037.0], [100.0, 4037.0]], "isOverall": false, "label": "Put Morbidity", "isController": false}, {"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 34.0], [0.3, 34.0], [0.4, 38.0], [0.5, 38.0], [0.6, 38.0], [0.7, 42.0], [0.8, 43.0], [0.9, 43.0], [1.0, 45.0], [1.1, 45.0], [1.2, 45.0], [1.3, 45.0], [1.4, 46.0], [1.5, 46.0], [1.6, 63.0], [1.7, 63.0], [1.8, 68.0], [1.9, 68.0], [2.0, 72.0], [2.1, 72.0], [2.2, 91.0], [2.3, 91.0], [2.4, 101.0], [2.5, 101.0], [2.6, 112.0], [2.7, 112.0], [2.8, 112.0], [2.9, 296.0], [3.0, 296.0], [3.1, 374.0], [3.2, 374.0], [3.3, 397.0], [3.4, 397.0], [3.5, 429.0], [3.6, 429.0], [3.7, 457.0], [3.8, 457.0], [3.9, 510.0], [4.0, 510.0], [4.1, 521.0], [4.2, 521.0], [4.3, 563.0], [4.4, 563.0], [4.5, 601.0], [4.6, 601.0], [4.7, 607.0], [4.8, 607.0], [4.9, 609.0], [5.0, 609.0], [5.1, 646.0], [5.2, 646.0], [5.3, 703.0], [5.4, 703.0], [5.5, 733.0], [5.6, 733.0], [5.7, 779.0], [5.8, 779.0], [5.9, 780.0], [6.0, 780.0], [6.1, 859.0], [6.2, 859.0], [6.3, 861.0], [6.4, 861.0], [6.5, 905.0], [6.6, 905.0], [6.7, 907.0], [6.8, 907.0], [6.9, 944.0], [7.0, 944.0], [7.1, 964.0], [7.2, 964.0], [7.3, 967.0], [7.4, 967.0], [7.5, 991.0], [7.6, 991.0], [7.7, 1038.0], [7.8, 1038.0], [7.9, 1054.0], [8.0, 1054.0], [8.1, 1057.0], [8.2, 1057.0], [8.3, 1104.0], [8.4, 1104.0], [8.5, 1106.0], [8.6, 1106.0], [8.7, 1141.0], [8.8, 1171.0], [8.9, 1171.0], [9.0, 1174.0], [9.1, 1174.0], [9.2, 1227.0], [9.3, 1227.0], [9.4, 1241.0], [9.5, 1241.0], [9.6, 1375.0], [9.7, 1375.0], [9.8, 1413.0], [9.9, 1413.0], [10.0, 1451.0], [10.1, 1451.0], [10.2, 1512.0], [10.3, 1512.0], [10.4, 1587.0], [10.5, 1587.0], [10.6, 1590.0], [10.7, 1590.0], [10.8, 1608.0], [10.9, 1608.0], [11.0, 1628.0], [11.1, 1628.0], [11.2, 1629.0], [11.3, 1629.0], [11.4, 1633.0], [11.5, 1633.0], [11.6, 1640.0], [11.7, 1640.0], [11.8, 1643.0], [11.9, 1643.0], [12.0, 1645.0], [12.1, 1645.0], [12.2, 1647.0], [12.3, 1647.0], [12.4, 1647.0], [12.5, 1647.0], [12.6, 1648.0], [12.7, 1648.0], [12.8, 1651.0], [12.9, 1651.0], [13.0, 1653.0], [13.1, 1653.0], [13.2, 1655.0], [13.3, 1655.0], [13.4, 1662.0], [13.5, 1662.0], [13.6, 1675.0], [13.7, 1675.0], [13.8, 1680.0], [13.9, 1680.0], [14.0, 1694.0], [14.1, 1694.0], [14.2, 1697.0], [14.3, 1697.0], [14.4, 1701.0], [14.5, 1701.0], [14.6, 1701.0], [14.7, 1701.0], [14.8, 1716.0], [14.9, 1716.0], [15.0, 1725.0], [15.1, 1725.0], [15.2, 1751.0], [15.3, 1751.0], [15.4, 1784.0], [15.5, 1784.0], [15.6, 1793.0], [15.7, 1793.0], [15.8, 1794.0], [15.9, 1794.0], [16.0, 1824.0], [16.1, 1824.0], [16.2, 1831.0], [16.3, 1831.0], [16.4, 1836.0], [16.5, 1836.0], [16.6, 1839.0], [16.7, 1839.0], [16.8, 1843.0], [16.9, 1843.0], [17.0, 1858.0], [17.1, 1858.0], [17.2, 1869.0], [17.3, 1869.0], [17.4, 1871.0], [17.5, 1871.0], [17.6, 1881.0], [17.7, 1881.0], [17.8, 1886.0], [17.9, 1886.0], [18.0, 1903.0], [18.1, 1903.0], [18.2, 1914.0], [18.3, 1914.0], [18.4, 1916.0], [18.5, 1916.0], [18.6, 1923.0], [18.7, 1923.0], [18.8, 1923.0], [18.9, 1923.0], [19.0, 1924.0], [19.1, 1924.0], [19.2, 1924.0], [19.3, 1924.0], [19.4, 1933.0], [19.5, 1933.0], [19.6, 1948.0], [19.7, 1948.0], [19.8, 1953.0], [19.9, 1953.0], [20.0, 1959.0], [20.1, 1959.0], [20.2, 1970.0], [20.3, 1970.0], [20.4, 1972.0], [20.5, 1972.0], [20.6, 1996.0], [20.7, 1996.0], [20.8, 2003.0], [20.9, 2003.0], [21.0, 2007.0], [21.1, 2007.0], [21.2, 2009.0], [21.3, 2009.0], [21.4, 2010.0], [21.5, 2010.0], [21.6, 2021.0], [21.7, 2021.0], [21.8, 2027.0], [21.9, 2027.0], [22.0, 2031.0], [22.1, 2031.0], [22.2, 2031.0], [22.3, 2031.0], [22.4, 2035.0], [22.5, 2035.0], [22.6, 2047.0], [22.7, 2047.0], [22.8, 2048.0], [22.9, 2048.0], [23.0, 2052.0], [23.1, 2052.0], [23.2, 2057.0], [23.3, 2057.0], [23.4, 2064.0], [23.5, 2064.0], [23.6, 2072.0], [23.7, 2072.0], [23.8, 2073.0], [23.9, 2073.0], [24.0, 2078.0], [24.1, 2078.0], [24.2, 2084.0], [24.3, 2084.0], [24.4, 2090.0], [24.5, 2090.0], [24.6, 2090.0], [24.7, 2090.0], [24.8, 2095.0], [24.9, 2095.0], [25.0, 2098.0], [25.1, 2098.0], [25.2, 2098.0], [25.3, 2098.0], [25.4, 2101.0], [25.5, 2101.0], [25.6, 2111.0], [25.7, 2111.0], [25.8, 2116.0], [25.9, 2116.0], [26.0, 2118.0], [26.1, 2118.0], [26.2, 2123.0], [26.3, 2123.0], [26.4, 2124.0], [26.5, 2124.0], [26.6, 2125.0], [26.7, 2125.0], [26.8, 2126.0], [26.9, 2126.0], [27.0, 2132.0], [27.1, 2132.0], [27.2, 2137.0], [27.3, 2137.0], [27.4, 2155.0], [27.5, 2155.0], [27.6, 2174.0], [27.7, 2174.0], [27.8, 2194.0], [27.9, 2194.0], [28.0, 2227.0], [28.1, 2227.0], [28.2, 2246.0], [28.3, 2246.0], [28.4, 2263.0], [28.5, 2263.0], [28.6, 2278.0], [28.7, 2278.0], [28.8, 2287.0], [28.9, 2287.0], [29.0, 2320.0], [29.1, 2320.0], [29.2, 2381.0], [29.3, 2381.0], [29.4, 2413.0], [29.5, 2413.0], [29.6, 2428.0], [29.7, 2428.0], [29.8, 2428.0], [29.9, 2428.0], [30.0, 2478.0], [30.1, 2478.0], [30.2, 2481.0], [30.3, 2481.0], [30.4, 2494.0], [30.5, 2494.0], [30.6, 2535.0], [30.7, 2535.0], [30.8, 2559.0], [30.9, 2559.0], [31.0, 2578.0], [31.1, 2578.0], [31.2, 2588.0], [31.3, 2588.0], [31.4, 2601.0], [31.5, 2601.0], [31.6, 2606.0], [31.7, 2606.0], [31.8, 2617.0], [31.9, 2617.0], [32.0, 2625.0], [32.1, 2625.0], [32.2, 2661.0], [32.3, 2661.0], [32.4, 2693.0], [32.5, 2693.0], [32.6, 2711.0], [32.7, 2711.0], [32.8, 2713.0], [32.9, 2713.0], [33.0, 2715.0], [33.1, 2715.0], [33.2, 2716.0], [33.3, 2716.0], [33.4, 2721.0], [33.5, 2721.0], [33.6, 2755.0], [33.7, 2755.0], [33.8, 2756.0], [33.9, 2756.0], [34.0, 2767.0], [34.1, 2767.0], [34.2, 2772.0], [34.3, 2772.0], [34.4, 2775.0], [34.5, 2775.0], [34.6, 2776.0], [34.7, 2776.0], [34.8, 2777.0], [34.9, 2777.0], [35.0, 2785.0], [35.1, 2785.0], [35.2, 2823.0], [35.3, 2823.0], [35.4, 2823.0], [35.5, 2823.0], [35.6, 2833.0], [35.7, 2833.0], [35.8, 2835.0], [35.9, 2835.0], [36.0, 2841.0], [36.1, 2841.0], [36.2, 2856.0], [36.3, 2856.0], [36.4, 2858.0], [36.5, 2858.0], [36.6, 2861.0], [36.7, 2861.0], [36.8, 2869.0], [36.9, 2869.0], [37.0, 2871.0], [37.1, 2871.0], [37.2, 2873.0], [37.3, 2873.0], [37.4, 2876.0], [37.5, 2876.0], [37.6, 2876.0], [37.7, 2876.0], [37.8, 2881.0], [37.9, 2881.0], [38.0, 2885.0], [38.1, 2885.0], [38.2, 2888.0], [38.3, 2888.0], [38.4, 2888.0], [38.5, 2888.0], [38.6, 2890.0], [38.7, 2890.0], [38.8, 2900.0], [38.9, 2900.0], [39.0, 2916.0], [39.1, 2916.0], [39.2, 2916.0], [39.3, 2916.0], [39.4, 2931.0], [39.5, 2931.0], [39.6, 2937.0], [39.7, 2937.0], [39.8, 2937.0], [39.9, 2941.0], [40.0, 2941.0], [40.1, 2942.0], [40.2, 2942.0], [40.3, 2947.0], [40.4, 2947.0], [40.5, 2947.0], [40.6, 2947.0], [40.7, 2949.0], [40.8, 2949.0], [40.9, 2952.0], [41.0, 2952.0], [41.1, 2974.0], [41.2, 2974.0], [41.3, 2976.0], [41.4, 2976.0], [41.5, 2980.0], [41.6, 2980.0], [41.7, 2980.0], [41.8, 2980.0], [41.9, 2987.0], [42.0, 2987.0], [42.1, 2988.0], [42.2, 2988.0], [42.3, 2990.0], [42.4, 2990.0], [42.5, 2993.0], [42.6, 2993.0], [42.7, 2994.0], [42.8, 2994.0], [42.9, 2994.0], [43.0, 2994.0], [43.1, 2995.0], [43.2, 2995.0], [43.3, 2996.0], [43.4, 2996.0], [43.5, 2998.0], [43.6, 2998.0], [43.7, 3000.0], [43.8, 3000.0], [43.9, 3008.0], [44.0, 3008.0], [44.1, 3011.0], [44.2, 3011.0], [44.3, 3018.0], [44.4, 3018.0], [44.5, 3019.0], [44.6, 3019.0], [44.7, 3029.0], [44.8, 3029.0], [44.9, 3031.0], [45.0, 3031.0], [45.1, 3036.0], [45.2, 3036.0], [45.3, 3036.0], [45.4, 3036.0], [45.5, 3037.0], [45.6, 3037.0], [45.7, 3040.0], [45.8, 3040.0], [45.9, 3055.0], [46.0, 3055.0], [46.1, 3060.0], [46.2, 3060.0], [46.3, 3067.0], [46.4, 3067.0], [46.5, 3073.0], [46.6, 3073.0], [46.7, 3076.0], [46.8, 3076.0], [46.9, 3077.0], [47.0, 3077.0], [47.1, 3081.0], [47.2, 3081.0], [47.3, 3084.0], [47.4, 3084.0], [47.5, 3092.0], [47.6, 3092.0], [47.7, 3101.0], [47.8, 3101.0], [47.9, 3102.0], [48.0, 3102.0], [48.1, 3106.0], [48.2, 3106.0], [48.3, 3108.0], [48.4, 3108.0], [48.5, 3111.0], [48.6, 3111.0], [48.7, 3116.0], [48.8, 3116.0], [48.9, 3121.0], [49.0, 3121.0], [49.1, 3121.0], [49.2, 3121.0], [49.3, 3122.0], [49.4, 3122.0], [49.5, 3124.0], [49.6, 3124.0], [49.7, 3126.0], [49.8, 3126.0], [49.9, 3126.0], [50.0, 3126.0], [50.1, 3127.0], [50.2, 3127.0], [50.3, 3129.0], [50.4, 3129.0], [50.5, 3131.0], [50.6, 3131.0], [50.7, 3140.0], [50.8, 3140.0], [50.9, 3142.0], [51.0, 3142.0], [51.1, 3143.0], [51.2, 3143.0], [51.3, 3147.0], [51.4, 3147.0], [51.5, 3148.0], [51.6, 3148.0], [51.7, 3163.0], [51.8, 3163.0], [51.9, 3164.0], [52.0, 3164.0], [52.1, 3165.0], [52.2, 3165.0], [52.3, 3168.0], [52.4, 3168.0], [52.5, 3168.0], [52.6, 3168.0], [52.7, 3181.0], [52.8, 3181.0], [52.9, 3182.0], [53.0, 3182.0], [53.1, 3189.0], [53.2, 3189.0], [53.3, 3191.0], [53.4, 3191.0], [53.5, 3191.0], [53.6, 3191.0], [53.7, 3194.0], [53.8, 3194.0], [53.9, 3195.0], [54.0, 3195.0], [54.1, 3207.0], [54.2, 3207.0], [54.3, 3210.0], [54.4, 3210.0], [54.5, 3212.0], [54.6, 3212.0], [54.7, 3214.0], [54.8, 3214.0], [54.9, 3214.0], [55.0, 3214.0], [55.1, 3217.0], [55.2, 3217.0], [55.3, 3217.0], [55.4, 3217.0], [55.5, 3217.0], [55.6, 3217.0], [55.7, 3220.0], [55.8, 3220.0], [55.9, 3220.0], [56.0, 3220.0], [56.1, 3228.0], [56.2, 3228.0], [56.3, 3229.0], [56.4, 3229.0], [56.5, 3229.0], [56.6, 3229.0], [56.7, 3236.0], [56.8, 3236.0], [56.9, 3240.0], [57.0, 3240.0], [57.1, 3246.0], [57.2, 3246.0], [57.3, 3249.0], [57.4, 3249.0], [57.5, 3251.0], [57.6, 3251.0], [57.7, 3252.0], [57.8, 3252.0], [57.9, 3252.0], [58.0, 3252.0], [58.1, 3253.0], [58.2, 3253.0], [58.3, 3257.0], [58.4, 3257.0], [58.5, 3259.0], [58.6, 3259.0], [58.7, 3261.0], [58.8, 3261.0], [58.9, 3261.0], [59.0, 3261.0], [59.1, 3262.0], [59.2, 3262.0], [59.3, 3262.0], [59.4, 3262.0], [59.5, 3262.0], [59.6, 3262.0], [59.7, 3264.0], [59.8, 3264.0], [59.9, 3268.0], [60.0, 3268.0], [60.1, 3268.0], [60.2, 3268.0], [60.3, 3269.0], [60.4, 3269.0], [60.5, 3276.0], [60.6, 3276.0], [60.7, 3278.0], [60.8, 3278.0], [60.9, 3280.0], [61.0, 3280.0], [61.1, 3280.0], [61.2, 3280.0], [61.3, 3281.0], [61.4, 3281.0], [61.5, 3284.0], [61.6, 3284.0], [61.7, 3285.0], [61.8, 3285.0], [61.9, 3288.0], [62.0, 3288.0], [62.1, 3288.0], [62.2, 3288.0], [62.3, 3288.0], [62.4, 3288.0], [62.5, 3289.0], [62.6, 3289.0], [62.7, 3290.0], [62.8, 3290.0], [62.9, 3291.0], [63.0, 3291.0], [63.1, 3295.0], [63.2, 3295.0], [63.3, 3295.0], [63.4, 3295.0], [63.5, 3296.0], [63.6, 3296.0], [63.7, 3299.0], [63.8, 3299.0], [63.9, 3301.0], [64.0, 3301.0], [64.1, 3301.0], [64.2, 3301.0], [64.3, 3302.0], [64.4, 3302.0], [64.5, 3303.0], [64.6, 3303.0], [64.7, 3305.0], [64.8, 3305.0], [64.9, 3309.0], [65.0, 3309.0], [65.1, 3311.0], [65.2, 3311.0], [65.3, 3311.0], [65.4, 3311.0], [65.5, 3312.0], [65.6, 3312.0], [65.7, 3314.0], [65.8, 3314.0], [65.9, 3317.0], [66.0, 3317.0], [66.1, 3319.0], [66.2, 3319.0], [66.3, 3321.0], [66.4, 3321.0], [66.5, 3327.0], [66.6, 3327.0], [66.7, 3331.0], [66.8, 3331.0], [66.9, 3333.0], [67.0, 3333.0], [67.1, 3335.0], [67.2, 3335.0], [67.3, 3340.0], [67.4, 3340.0], [67.5, 3343.0], [67.6, 3343.0], [67.7, 3345.0], [67.8, 3345.0], [67.9, 3345.0], [68.0, 3345.0], [68.1, 3346.0], [68.2, 3346.0], [68.3, 3347.0], [68.4, 3347.0], [68.5, 3347.0], [68.6, 3347.0], [68.7, 3353.0], [68.8, 3353.0], [68.9, 3353.0], [69.0, 3353.0], [69.1, 3353.0], [69.2, 3353.0], [69.3, 3354.0], [69.4, 3354.0], [69.5, 3354.0], [69.6, 3354.0], [69.7, 3355.0], [69.8, 3355.0], [69.9, 3355.0], [70.0, 3355.0], [70.1, 3357.0], [70.2, 3357.0], [70.3, 3362.0], [70.4, 3362.0], [70.5, 3369.0], [70.6, 3369.0], [70.7, 3369.0], [70.8, 3369.0], [70.9, 3369.0], [71.0, 3369.0], [71.1, 3371.0], [71.2, 3371.0], [71.3, 3378.0], [71.4, 3378.0], [71.5, 3378.0], [71.6, 3378.0], [71.7, 3381.0], [71.8, 3381.0], [71.9, 3381.0], [72.0, 3381.0], [72.1, 3383.0], [72.2, 3383.0], [72.3, 3383.0], [72.4, 3383.0], [72.5, 3383.0], [72.6, 3383.0], [72.7, 3386.0], [72.8, 3386.0], [72.9, 3388.0], [73.0, 3388.0], [73.1, 3388.0], [73.2, 3388.0], [73.3, 3388.0], [73.4, 3388.0], [73.5, 3392.0], [73.6, 3392.0], [73.7, 3395.0], [73.8, 3395.0], [73.9, 3397.0], [74.0, 3397.0], [74.1, 3401.0], [74.2, 3401.0], [74.3, 3403.0], [74.4, 3403.0], [74.5, 3405.0], [74.6, 3405.0], [74.7, 3406.0], [74.8, 3406.0], [74.9, 3406.0], [75.0, 3406.0], [75.1, 3409.0], [75.2, 3409.0], [75.3, 3410.0], [75.4, 3410.0], [75.5, 3412.0], [75.6, 3412.0], [75.7, 3412.0], [75.8, 3412.0], [75.9, 3413.0], [76.0, 3413.0], [76.1, 3415.0], [76.2, 3415.0], [76.3, 3416.0], [76.4, 3416.0], [76.5, 3417.0], [76.6, 3417.0], [76.7, 3417.0], [76.8, 3417.0], [76.9, 3418.0], [77.0, 3418.0], [77.1, 3419.0], [77.2, 3419.0], [77.3, 3422.0], [77.4, 3422.0], [77.5, 3424.0], [77.6, 3424.0], [77.7, 3424.0], [77.8, 3424.0], [77.9, 3425.0], [78.0, 3425.0], [78.1, 3429.0], [78.2, 3429.0], [78.3, 3432.0], [78.4, 3432.0], [78.5, 3433.0], [78.6, 3433.0], [78.7, 3442.0], [78.8, 3442.0], [78.9, 3444.0], [79.0, 3444.0], [79.1, 3444.0], [79.2, 3444.0], [79.3, 3444.0], [79.4, 3444.0], [79.5, 3445.0], [79.6, 3445.0], [79.7, 3446.0], [79.8, 3446.0], [79.9, 3449.0], [80.0, 3449.0], [80.1, 3454.0], [80.2, 3454.0], [80.3, 3457.0], [80.4, 3457.0], [80.5, 3457.0], [80.6, 3457.0], [80.7, 3461.0], [80.8, 3461.0], [80.9, 3462.0], [81.0, 3462.0], [81.1, 3462.0], [81.2, 3462.0], [81.3, 3463.0], [81.4, 3463.0], [81.5, 3463.0], [81.6, 3463.0], [81.7, 3465.0], [81.8, 3465.0], [81.9, 3468.0], [82.0, 3468.0], [82.1, 3470.0], [82.2, 3470.0], [82.3, 3476.0], [82.4, 3476.0], [82.5, 3476.0], [82.6, 3476.0], [82.7, 3477.0], [82.8, 3477.0], [82.9, 3478.0], [83.0, 3478.0], [83.1, 3488.0], [83.2, 3488.0], [83.3, 3489.0], [83.4, 3489.0], [83.5, 3491.0], [83.6, 3491.0], [83.7, 3492.0], [83.8, 3492.0], [83.9, 3494.0], [84.0, 3494.0], [84.1, 3494.0], [84.2, 3494.0], [84.3, 3494.0], [84.4, 3494.0], [84.5, 3498.0], [84.6, 3498.0], [84.7, 3498.0], [84.8, 3498.0], [84.9, 3500.0], [85.0, 3500.0], [85.1, 3501.0], [85.2, 3501.0], [85.3, 3508.0], [85.4, 3508.0], [85.5, 3509.0], [85.6, 3509.0], [85.7, 3509.0], [85.8, 3509.0], [85.9, 3509.0], [86.0, 3509.0], [86.1, 3518.0], [86.2, 3518.0], [86.3, 3523.0], [86.4, 3523.0], [86.5, 3523.0], [86.6, 3523.0], [86.7, 3527.0], [86.8, 3527.0], [86.9, 3529.0], [87.0, 3529.0], [87.1, 3536.0], [87.2, 3536.0], [87.3, 3545.0], [87.4, 3545.0], [87.5, 3546.0], [87.6, 3546.0], [87.7, 3549.0], [87.8, 3549.0], [87.9, 3556.0], [88.0, 3556.0], [88.1, 3563.0], [88.2, 3563.0], [88.3, 3567.0], [88.4, 3567.0], [88.5, 3568.0], [88.6, 3568.0], [88.7, 3568.0], [88.8, 3568.0], [88.9, 3572.0], [89.0, 3572.0], [89.1, 3576.0], [89.2, 3576.0], [89.3, 3583.0], [89.4, 3583.0], [89.5, 3587.0], [89.6, 3587.0], [89.7, 3605.0], [89.8, 3605.0], [89.9, 3612.0], [90.0, 3612.0], [90.1, 3613.0], [90.2, 3613.0], [90.3, 3629.0], [90.4, 3629.0], [90.5, 3629.0], [90.6, 3629.0], [90.7, 3631.0], [90.8, 3631.0], [90.9, 3632.0], [91.0, 3632.0], [91.1, 3633.0], [91.2, 3633.0], [91.3, 3635.0], [91.4, 3635.0], [91.5, 3636.0], [91.6, 3636.0], [91.7, 3640.0], [91.8, 3640.0], [91.9, 3640.0], [92.0, 3640.0], [92.1, 3653.0], [92.2, 3653.0], [92.3, 3653.0], [92.4, 3653.0], [92.5, 3668.0], [92.6, 3668.0], [92.7, 3670.0], [92.8, 3670.0], [92.9, 3680.0], [93.0, 3680.0], [93.1, 3687.0], [93.2, 3687.0], [93.3, 3689.0], [93.4, 3689.0], [93.5, 3697.0], [93.6, 3697.0], [93.7, 3702.0], [93.8, 3702.0], [93.9, 3704.0], [94.0, 3704.0], [94.1, 3706.0], [94.2, 3706.0], [94.3, 3714.0], [94.4, 3714.0], [94.5, 3719.0], [94.6, 3719.0], [94.7, 3720.0], [94.8, 3720.0], [94.9, 3727.0], [95.0, 3727.0], [95.1, 3733.0], [95.2, 3733.0], [95.3, 3753.0], [95.4, 3753.0], [95.5, 3753.0], [95.6, 3753.0], [95.7, 3754.0], [95.8, 3754.0], [95.9, 3761.0], [96.0, 3761.0], [96.1, 3771.0], [96.2, 3771.0], [96.3, 3772.0], [96.4, 3772.0], [96.5, 3778.0], [96.6, 3778.0], [96.7, 3786.0], [96.8, 3786.0], [96.9, 3787.0], [97.0, 3787.0], [97.1, 3796.0], [97.2, 3796.0], [97.3, 3803.0], [97.4, 3803.0], [97.5, 3814.0], [97.6, 3814.0], [97.7, 3816.0], [97.8, 3816.0], [97.9, 3821.0], [98.0, 3821.0], [98.1, 3842.0], [98.2, 3842.0], [98.3, 3851.0], [98.4, 3851.0], [98.5, 3867.0], [98.6, 3867.0], [98.7, 3868.0], [98.8, 3868.0], [98.9, 3904.0], [99.0, 3904.0], [99.1, 3905.0], [99.2, 3905.0], [99.3, 3905.0], [99.4, 3905.0], [99.5, 3917.0], [99.6, 3917.0], [99.7, 3921.0], [99.8, 3921.0], [99.9, 3930.0], [100.0, 3930.0]], "isOverall": false, "label": "Delete Morbidity", "isController": false}, {"data": [[0.0, 73.0], [0.1, 73.0], [0.2, 86.0], [0.3, 86.0], [0.4, 112.0], [0.5, 112.0], [0.6, 112.0], [0.7, 148.0], [0.8, 154.0], [0.9, 154.0], [1.0, 1074.0], [1.1, 1074.0], [1.2, 1568.0], [1.3, 1568.0], [1.4, 1598.0], [1.5, 1598.0], [1.6, 1611.0], [1.7, 1611.0], [1.8, 1613.0], [1.9, 1613.0], [2.0, 1619.0], [2.1, 1619.0], [2.2, 1624.0], [2.3, 1624.0], [2.4, 1630.0], [2.5, 1630.0], [2.6, 1631.0], [2.7, 1631.0], [2.8, 1631.0], [2.9, 1633.0], [3.0, 1633.0], [3.1, 1641.0], [3.2, 1641.0], [3.3, 1643.0], [3.4, 1643.0], [3.5, 1645.0], [3.6, 1645.0], [3.7, 1646.0], [3.8, 1646.0], [3.9, 1648.0], [4.0, 1648.0], [4.1, 1650.0], [4.2, 1650.0], [4.3, 1653.0], [4.4, 1653.0], [4.5, 1659.0], [4.6, 1659.0], [4.7, 1664.0], [4.8, 1664.0], [4.9, 1664.0], [5.0, 1664.0], [5.1, 1669.0], [5.2, 1669.0], [5.3, 1669.0], [5.4, 1669.0], [5.5, 1675.0], [5.6, 1675.0], [5.7, 1681.0], [5.8, 1681.0], [5.9, 1682.0], [6.0, 1682.0], [6.1, 1684.0], [6.2, 1684.0], [6.3, 1687.0], [6.4, 1687.0], [6.5, 1691.0], [6.6, 1691.0], [6.7, 1694.0], [6.8, 1694.0], [6.9, 1705.0], [7.0, 1705.0], [7.1, 1705.0], [7.2, 1705.0], [7.3, 1708.0], [7.4, 1708.0], [7.5, 1711.0], [7.6, 1711.0], [7.7, 1716.0], [7.8, 1716.0], [7.9, 1719.0], [8.0, 1719.0], [8.1, 1733.0], [8.2, 1733.0], [8.3, 1736.0], [8.4, 1736.0], [8.5, 1760.0], [8.6, 1760.0], [8.7, 1768.0], [8.8, 1799.0], [8.9, 1799.0], [9.0, 1810.0], [9.1, 1810.0], [9.2, 1815.0], [9.3, 1815.0], [9.4, 1821.0], [9.5, 1821.0], [9.6, 1823.0], [9.7, 1823.0], [9.8, 1829.0], [9.9, 1829.0], [10.0, 1830.0], [10.1, 1830.0], [10.2, 1834.0], [10.3, 1834.0], [10.4, 1835.0], [10.5, 1835.0], [10.6, 1836.0], [10.7, 1836.0], [10.8, 1853.0], [10.9, 1853.0], [11.0, 1862.0], [11.1, 1862.0], [11.2, 1864.0], [11.3, 1864.0], [11.4, 1869.0], [11.5, 1869.0], [11.6, 1873.0], [11.7, 1873.0], [11.8, 1877.0], [11.9, 1877.0], [12.0, 1878.0], [12.1, 1878.0], [12.2, 1885.0], [12.3, 1885.0], [12.4, 1886.0], [12.5, 1886.0], [12.6, 1887.0], [12.7, 1887.0], [12.8, 1889.0], [12.9, 1889.0], [13.0, 1892.0], [13.1, 1892.0], [13.2, 1895.0], [13.3, 1895.0], [13.4, 1897.0], [13.5, 1897.0], [13.6, 1908.0], [13.7, 1908.0], [13.8, 1908.0], [13.9, 1908.0], [14.0, 1909.0], [14.1, 1909.0], [14.2, 1909.0], [14.3, 1909.0], [14.4, 1911.0], [14.5, 1911.0], [14.6, 1927.0], [14.7, 1927.0], [14.8, 1928.0], [14.9, 1928.0], [15.0, 1929.0], [15.1, 1929.0], [15.2, 1931.0], [15.3, 1931.0], [15.4, 1936.0], [15.5, 1936.0], [15.6, 1937.0], [15.7, 1937.0], [15.8, 1938.0], [15.9, 1938.0], [16.0, 1938.0], [16.1, 1938.0], [16.2, 1939.0], [16.3, 1939.0], [16.4, 1940.0], [16.5, 1940.0], [16.6, 1946.0], [16.7, 1946.0], [16.8, 1948.0], [16.9, 1948.0], [17.0, 1950.0], [17.1, 1950.0], [17.2, 1966.0], [17.3, 1966.0], [17.4, 1968.0], [17.5, 1968.0], [17.6, 1978.0], [17.7, 1978.0], [17.8, 1985.0], [17.9, 1985.0], [18.0, 1996.0], [18.1, 1996.0], [18.2, 1999.0], [18.3, 1999.0], [18.4, 1999.0], [18.5, 1999.0], [18.6, 2006.0], [18.7, 2006.0], [18.8, 2010.0], [18.9, 2010.0], [19.0, 2011.0], [19.1, 2011.0], [19.2, 2012.0], [19.3, 2012.0], [19.4, 2015.0], [19.5, 2015.0], [19.6, 2023.0], [19.7, 2023.0], [19.8, 2023.0], [19.9, 2023.0], [20.0, 2029.0], [20.1, 2029.0], [20.2, 2032.0], [20.3, 2032.0], [20.4, 2032.0], [20.5, 2032.0], [20.6, 2037.0], [20.7, 2037.0], [20.8, 2042.0], [20.9, 2042.0], [21.0, 2042.0], [21.1, 2042.0], [21.2, 2048.0], [21.3, 2048.0], [21.4, 2050.0], [21.5, 2050.0], [21.6, 2050.0], [21.7, 2050.0], [21.8, 2056.0], [21.9, 2056.0], [22.0, 2094.0], [22.1, 2094.0], [22.2, 2100.0], [22.3, 2100.0], [22.4, 2102.0], [22.5, 2102.0], [22.6, 2105.0], [22.7, 2105.0], [22.8, 2112.0], [22.9, 2112.0], [23.0, 2124.0], [23.1, 2124.0], [23.2, 2134.0], [23.3, 2134.0], [23.4, 2140.0], [23.5, 2140.0], [23.6, 2151.0], [23.7, 2151.0], [23.8, 2153.0], [23.9, 2153.0], [24.0, 2160.0], [24.1, 2160.0], [24.2, 2161.0], [24.3, 2161.0], [24.4, 2167.0], [24.5, 2167.0], [24.6, 2168.0], [24.7, 2168.0], [24.8, 2169.0], [24.9, 2169.0], [25.0, 2171.0], [25.1, 2171.0], [25.2, 2172.0], [25.3, 2172.0], [25.4, 2174.0], [25.5, 2174.0], [25.6, 2175.0], [25.7, 2175.0], [25.8, 2180.0], [25.9, 2180.0], [26.0, 2205.0], [26.1, 2205.0], [26.2, 2212.0], [26.3, 2212.0], [26.4, 2227.0], [26.5, 2227.0], [26.6, 2238.0], [26.7, 2238.0], [26.8, 2248.0], [26.9, 2248.0], [27.0, 2252.0], [27.1, 2252.0], [27.2, 2260.0], [27.3, 2260.0], [27.4, 2270.0], [27.5, 2270.0], [27.6, 2270.0], [27.7, 2270.0], [27.8, 2270.0], [27.9, 2270.0], [28.0, 2273.0], [28.1, 2273.0], [28.2, 2273.0], [28.3, 2273.0], [28.4, 2273.0], [28.5, 2273.0], [28.6, 2274.0], [28.7, 2274.0], [28.8, 2278.0], [28.9, 2278.0], [29.0, 2279.0], [29.1, 2279.0], [29.2, 2280.0], [29.3, 2280.0], [29.4, 2282.0], [29.5, 2282.0], [29.6, 2283.0], [29.7, 2283.0], [29.8, 2302.0], [29.9, 2302.0], [30.0, 2323.0], [30.1, 2323.0], [30.2, 2330.0], [30.3, 2330.0], [30.4, 2333.0], [30.5, 2333.0], [30.6, 2372.0], [30.7, 2372.0], [30.8, 2379.0], [30.9, 2379.0], [31.0, 2379.0], [31.1, 2379.0], [31.2, 2405.0], [31.3, 2405.0], [31.4, 2418.0], [31.5, 2418.0], [31.6, 2421.0], [31.7, 2421.0], [31.8, 2433.0], [31.9, 2433.0], [32.0, 2438.0], [32.1, 2438.0], [32.2, 2442.0], [32.3, 2442.0], [32.4, 2454.0], [32.5, 2454.0], [32.6, 2455.0], [32.7, 2455.0], [32.8, 2468.0], [32.9, 2468.0], [33.0, 2481.0], [33.1, 2481.0], [33.2, 2493.0], [33.3, 2493.0], [33.4, 2497.0], [33.5, 2497.0], [33.6, 2501.0], [33.7, 2501.0], [33.8, 2508.0], [33.9, 2508.0], [34.0, 2522.0], [34.1, 2522.0], [34.2, 2531.0], [34.3, 2531.0], [34.4, 2536.0], [34.5, 2536.0], [34.6, 2546.0], [34.7, 2546.0], [34.8, 2630.0], [34.9, 2630.0], [35.0, 2640.0], [35.1, 2640.0], [35.2, 2655.0], [35.3, 2655.0], [35.4, 2670.0], [35.5, 2670.0], [35.6, 2675.0], [35.7, 2675.0], [35.8, 2678.0], [35.9, 2678.0], [36.0, 2680.0], [36.1, 2680.0], [36.2, 2686.0], [36.3, 2686.0], [36.4, 2686.0], [36.5, 2686.0], [36.6, 2688.0], [36.7, 2688.0], [36.8, 2697.0], [36.9, 2697.0], [37.0, 2699.0], [37.1, 2699.0], [37.2, 2704.0], [37.3, 2704.0], [37.4, 2708.0], [37.5, 2708.0], [37.6, 2713.0], [37.7, 2713.0], [37.8, 2713.0], [37.9, 2720.0], [38.0, 2720.0], [38.1, 2725.0], [38.2, 2725.0], [38.3, 2726.0], [38.4, 2726.0], [38.5, 2735.0], [38.6, 2735.0], [38.7, 2735.0], [38.8, 2735.0], [38.9, 2737.0], [39.0, 2737.0], [39.1, 2738.0], [39.2, 2738.0], [39.3, 2739.0], [39.4, 2739.0], [39.5, 2739.0], [39.6, 2739.0], [39.7, 2740.0], [39.8, 2740.0], [39.9, 2740.0], [40.0, 2740.0], [40.1, 2746.0], [40.2, 2746.0], [40.3, 2750.0], [40.4, 2750.0], [40.5, 2750.0], [40.6, 2750.0], [40.7, 2750.0], [40.8, 2750.0], [40.9, 2755.0], [41.0, 2755.0], [41.1, 2755.0], [41.2, 2755.0], [41.3, 2756.0], [41.4, 2756.0], [41.5, 2763.0], [41.6, 2763.0], [41.7, 2766.0], [41.8, 2766.0], [41.9, 2767.0], [42.0, 2767.0], [42.1, 2767.0], [42.2, 2767.0], [42.3, 2773.0], [42.4, 2773.0], [42.5, 2773.0], [42.6, 2773.0], [42.7, 2776.0], [42.8, 2776.0], [42.9, 2783.0], [43.0, 2783.0], [43.1, 2787.0], [43.2, 2787.0], [43.3, 2801.0], [43.4, 2801.0], [43.5, 2815.0], [43.6, 2815.0], [43.7, 2842.0], [43.8, 2842.0], [43.9, 2844.0], [44.0, 2844.0], [44.1, 2849.0], [44.2, 2849.0], [44.3, 2852.0], [44.4, 2852.0], [44.5, 2856.0], [44.6, 2856.0], [44.7, 2856.0], [44.8, 2856.0], [44.9, 2856.0], [45.0, 2856.0], [45.1, 2869.0], [45.2, 2869.0], [45.3, 2871.0], [45.4, 2871.0], [45.5, 2874.0], [45.6, 2874.0], [45.7, 2889.0], [45.8, 2889.0], [45.9, 2890.0], [46.0, 2890.0], [46.1, 2934.0], [46.2, 2934.0], [46.3, 2941.0], [46.4, 2941.0], [46.5, 2949.0], [46.6, 2949.0], [46.7, 2967.0], [46.8, 2967.0], [46.9, 2987.0], [47.0, 2987.0], [47.1, 2988.0], [47.2, 2988.0], [47.3, 2990.0], [47.4, 2990.0], [47.5, 2994.0], [47.6, 2994.0], [47.7, 2994.0], [47.8, 2994.0], [47.9, 2998.0], [48.0, 2998.0], [48.1, 3000.0], [48.2, 3000.0], [48.3, 3007.0], [48.4, 3007.0], [48.5, 3014.0], [48.6, 3014.0], [48.7, 3015.0], [48.8, 3015.0], [48.9, 3030.0], [49.0, 3030.0], [49.1, 3036.0], [49.2, 3036.0], [49.3, 3048.0], [49.4, 3048.0], [49.5, 3050.0], [49.6, 3050.0], [49.7, 3050.0], [49.8, 3050.0], [49.9, 3056.0], [50.0, 3056.0], [50.1, 3061.0], [50.2, 3061.0], [50.3, 3064.0], [50.4, 3064.0], [50.5, 3077.0], [50.6, 3077.0], [50.7, 3082.0], [50.8, 3082.0], [50.9, 3083.0], [51.0, 3083.0], [51.1, 3094.0], [51.2, 3094.0], [51.3, 3096.0], [51.4, 3096.0], [51.5, 3100.0], [51.6, 3100.0], [51.7, 3103.0], [51.8, 3103.0], [51.9, 3103.0], [52.0, 3103.0], [52.1, 3106.0], [52.2, 3106.0], [52.3, 3106.0], [52.4, 3106.0], [52.5, 3109.0], [52.6, 3109.0], [52.7, 3114.0], [52.8, 3114.0], [52.9, 3118.0], [53.0, 3118.0], [53.1, 3124.0], [53.2, 3124.0], [53.3, 3128.0], [53.4, 3128.0], [53.5, 3132.0], [53.6, 3132.0], [53.7, 3139.0], [53.8, 3139.0], [53.9, 3150.0], [54.0, 3150.0], [54.1, 3155.0], [54.2, 3155.0], [54.3, 3170.0], [54.4, 3170.0], [54.5, 3174.0], [54.6, 3174.0], [54.7, 3175.0], [54.8, 3175.0], [54.9, 3175.0], [55.0, 3175.0], [55.1, 3180.0], [55.2, 3180.0], [55.3, 3194.0], [55.4, 3194.0], [55.5, 3199.0], [55.6, 3199.0], [55.7, 3203.0], [55.8, 3203.0], [55.9, 3211.0], [56.0, 3211.0], [56.1, 3223.0], [56.2, 3223.0], [56.3, 3225.0], [56.4, 3225.0], [56.5, 3233.0], [56.6, 3233.0], [56.7, 3236.0], [56.8, 3236.0], [56.9, 3237.0], [57.0, 3237.0], [57.1, 3243.0], [57.2, 3243.0], [57.3, 3257.0], [57.4, 3257.0], [57.5, 3260.0], [57.6, 3260.0], [57.7, 3260.0], [57.8, 3260.0], [57.9, 3261.0], [58.0, 3261.0], [58.1, 3261.0], [58.2, 3261.0], [58.3, 3262.0], [58.4, 3262.0], [58.5, 3268.0], [58.6, 3268.0], [58.7, 3269.0], [58.8, 3269.0], [58.9, 3270.0], [59.0, 3270.0], [59.1, 3274.0], [59.2, 3274.0], [59.3, 3274.0], [59.4, 3274.0], [59.5, 3278.0], [59.6, 3278.0], [59.7, 3280.0], [59.8, 3280.0], [59.9, 3281.0], [60.0, 3281.0], [60.1, 3288.0], [60.2, 3288.0], [60.3, 3288.0], [60.4, 3288.0], [60.5, 3289.0], [60.6, 3289.0], [60.7, 3294.0], [60.8, 3294.0], [60.9, 3296.0], [61.0, 3296.0], [61.1, 3297.0], [61.2, 3297.0], [61.3, 3298.0], [61.4, 3298.0], [61.5, 3299.0], [61.6, 3299.0], [61.7, 3299.0], [61.8, 3299.0], [61.9, 3300.0], [62.0, 3300.0], [62.1, 3301.0], [62.2, 3301.0], [62.3, 3304.0], [62.4, 3304.0], [62.5, 3304.0], [62.6, 3304.0], [62.7, 3307.0], [62.8, 3307.0], [62.9, 3307.0], [63.0, 3307.0], [63.1, 3310.0], [63.2, 3310.0], [63.3, 3311.0], [63.4, 3311.0], [63.5, 3312.0], [63.6, 3312.0], [63.7, 3315.0], [63.8, 3315.0], [63.9, 3316.0], [64.0, 3316.0], [64.1, 3319.0], [64.2, 3319.0], [64.3, 3321.0], [64.4, 3321.0], [64.5, 3326.0], [64.6, 3326.0], [64.7, 3327.0], [64.8, 3327.0], [64.9, 3328.0], [65.0, 3328.0], [65.1, 3328.0], [65.2, 3328.0], [65.3, 3328.0], [65.4, 3328.0], [65.5, 3334.0], [65.6, 3334.0], [65.7, 3337.0], [65.8, 3337.0], [65.9, 3338.0], [66.0, 3338.0], [66.1, 3339.0], [66.2, 3339.0], [66.3, 3340.0], [66.4, 3340.0], [66.5, 3341.0], [66.6, 3341.0], [66.7, 3343.0], [66.8, 3343.0], [66.9, 3350.0], [67.0, 3350.0], [67.1, 3354.0], [67.2, 3354.0], [67.3, 3355.0], [67.4, 3355.0], [67.5, 3357.0], [67.6, 3357.0], [67.7, 3358.0], [67.8, 3358.0], [67.9, 3362.0], [68.0, 3362.0], [68.1, 3364.0], [68.2, 3364.0], [68.3, 3365.0], [68.4, 3365.0], [68.5, 3365.0], [68.6, 3365.0], [68.7, 3371.0], [68.8, 3371.0], [68.9, 3374.0], [69.0, 3374.0], [69.1, 3375.0], [69.2, 3375.0], [69.3, 3375.0], [69.4, 3375.0], [69.5, 3378.0], [69.6, 3378.0], [69.7, 3378.0], [69.8, 3378.0], [69.9, 3383.0], [70.0, 3383.0], [70.1, 3384.0], [70.2, 3384.0], [70.3, 3386.0], [70.4, 3386.0], [70.5, 3387.0], [70.6, 3387.0], [70.7, 3388.0], [70.8, 3388.0], [70.9, 3390.0], [71.0, 3390.0], [71.1, 3395.0], [71.2, 3395.0], [71.3, 3395.0], [71.4, 3395.0], [71.5, 3400.0], [71.6, 3400.0], [71.7, 3403.0], [71.8, 3403.0], [71.9, 3407.0], [72.0, 3407.0], [72.1, 3408.0], [72.2, 3408.0], [72.3, 3411.0], [72.4, 3411.0], [72.5, 3411.0], [72.6, 3411.0], [72.7, 3413.0], [72.8, 3413.0], [72.9, 3414.0], [73.0, 3414.0], [73.1, 3417.0], [73.2, 3417.0], [73.3, 3418.0], [73.4, 3418.0], [73.5, 3422.0], [73.6, 3422.0], [73.7, 3424.0], [73.8, 3424.0], [73.9, 3428.0], [74.0, 3428.0], [74.1, 3429.0], [74.2, 3429.0], [74.3, 3431.0], [74.4, 3431.0], [74.5, 3437.0], [74.6, 3437.0], [74.7, 3437.0], [74.8, 3437.0], [74.9, 3440.0], [75.0, 3440.0], [75.1, 3445.0], [75.2, 3445.0], [75.3, 3447.0], [75.4, 3447.0], [75.5, 3447.0], [75.6, 3447.0], [75.7, 3450.0], [75.8, 3450.0], [75.9, 3453.0], [76.0, 3453.0], [76.1, 3455.0], [76.2, 3455.0], [76.3, 3457.0], [76.4, 3457.0], [76.5, 3457.0], [76.6, 3457.0], [76.7, 3460.0], [76.8, 3460.0], [76.9, 3464.0], [77.0, 3464.0], [77.1, 3468.0], [77.2, 3468.0], [77.3, 3471.0], [77.4, 3471.0], [77.5, 3472.0], [77.6, 3472.0], [77.7, 3473.0], [77.8, 3473.0], [77.9, 3474.0], [78.0, 3474.0], [78.1, 3475.0], [78.2, 3475.0], [78.3, 3477.0], [78.4, 3477.0], [78.5, 3477.0], [78.6, 3477.0], [78.7, 3480.0], [78.8, 3480.0], [78.9, 3483.0], [79.0, 3483.0], [79.1, 3485.0], [79.2, 3485.0], [79.3, 3489.0], [79.4, 3489.0], [79.5, 3492.0], [79.6, 3492.0], [79.7, 3493.0], [79.8, 3493.0], [79.9, 3495.0], [80.0, 3495.0], [80.1, 3500.0], [80.2, 3500.0], [80.3, 3514.0], [80.4, 3514.0], [80.5, 3515.0], [80.6, 3515.0], [80.7, 3519.0], [80.8, 3519.0], [80.9, 3536.0], [81.0, 3536.0], [81.1, 3536.0], [81.2, 3536.0], [81.3, 3542.0], [81.4, 3542.0], [81.5, 3543.0], [81.6, 3543.0], [81.7, 3544.0], [81.8, 3544.0], [81.9, 3545.0], [82.0, 3545.0], [82.1, 3554.0], [82.2, 3554.0], [82.3, 3554.0], [82.4, 3554.0], [82.5, 3567.0], [82.6, 3567.0], [82.7, 3574.0], [82.8, 3574.0], [82.9, 3577.0], [83.0, 3577.0], [83.1, 3589.0], [83.2, 3589.0], [83.3, 3590.0], [83.4, 3590.0], [83.5, 3605.0], [83.6, 3605.0], [83.7, 3609.0], [83.8, 3609.0], [83.9, 3618.0], [84.0, 3618.0], [84.1, 3623.0], [84.2, 3623.0], [84.3, 3625.0], [84.4, 3625.0], [84.5, 3641.0], [84.6, 3641.0], [84.7, 3643.0], [84.8, 3643.0], [84.9, 3647.0], [85.0, 3647.0], [85.1, 3666.0], [85.2, 3666.0], [85.3, 3673.0], [85.4, 3673.0], [85.5, 3683.0], [85.6, 3683.0], [85.7, 3690.0], [85.8, 3690.0], [85.9, 3708.0], [86.0, 3708.0], [86.1, 3715.0], [86.2, 3715.0], [86.3, 3724.0], [86.4, 3724.0], [86.5, 3731.0], [86.6, 3731.0], [86.7, 3732.0], [86.8, 3732.0], [86.9, 3733.0], [87.0, 3733.0], [87.1, 3741.0], [87.2, 3741.0], [87.3, 3746.0], [87.4, 3746.0], [87.5, 3781.0], [87.6, 3781.0], [87.7, 3803.0], [87.8, 3803.0], [87.9, 3804.0], [88.0, 3804.0], [88.1, 3811.0], [88.2, 3811.0], [88.3, 3839.0], [88.4, 3839.0], [88.5, 3844.0], [88.6, 3844.0], [88.7, 3852.0], [88.8, 3852.0], [88.9, 3861.0], [89.0, 3861.0], [89.1, 3890.0], [89.2, 3890.0], [89.3, 3958.0], [89.4, 3958.0], [89.5, 3996.0], [89.6, 3996.0], [89.7, 4018.0], [89.8, 4018.0], [89.9, 4047.0], [90.0, 4047.0], [90.1, 4067.0], [90.2, 4067.0], [90.3, 4078.0], [90.4, 4078.0], [90.5, 4163.0], [90.6, 4163.0], [90.7, 4195.0], [90.8, 4195.0], [90.9, 4241.0], [91.0, 4241.0], [91.1, 4249.0], [91.2, 4249.0], [91.3, 4260.0], [91.4, 4260.0], [91.5, 4312.0], [91.6, 4312.0], [91.7, 4343.0], [91.8, 4343.0], [91.9, 4354.0], [92.0, 4354.0], [92.1, 4361.0], [92.2, 4361.0], [92.3, 4425.0], [92.4, 4425.0], [92.5, 4440.0], [92.6, 4440.0], [92.7, 4477.0], [92.8, 4477.0], [92.9, 4480.0], [93.0, 4480.0], [93.1, 4520.0], [93.2, 4520.0], [93.3, 4537.0], [93.4, 4537.0], [93.5, 4578.0], [93.6, 4578.0], [93.7, 4584.0], [93.8, 4584.0], [93.9, 4595.0], [94.0, 4595.0], [94.1, 4647.0], [94.2, 4647.0], [94.3, 4660.0], [94.4, 4660.0], [94.5, 4673.0], [94.6, 4673.0], [94.7, 4699.0], [94.8, 4699.0], [94.9, 4730.0], [95.0, 4730.0], [95.1, 4746.0], [95.2, 4746.0], [95.3, 4747.0], [95.4, 4747.0], [95.5, 4751.0], [95.6, 4751.0], [95.7, 4782.0], [95.8, 4782.0], [95.9, 4791.0], [96.0, 4791.0], [96.1, 4793.0], [96.2, 4793.0], [96.3, 4805.0], [96.4, 4805.0], [96.5, 4806.0], [96.6, 4806.0], [96.7, 4808.0], [96.8, 4808.0], [96.9, 4814.0], [97.0, 4814.0], [97.1, 4824.0], [97.2, 4824.0], [97.3, 4828.0], [97.4, 4828.0], [97.5, 4828.0], [97.6, 4828.0], [97.7, 4831.0], [97.8, 4831.0], [97.9, 4839.0], [98.0, 4839.0], [98.1, 4856.0], [98.2, 4856.0], [98.3, 4858.0], [98.4, 4858.0], [98.5, 4861.0], [98.6, 4861.0], [98.7, 4866.0], [98.8, 4866.0], [98.9, 4873.0], [99.0, 4873.0], [99.1, 4875.0], [99.2, 4875.0], [99.3, 4911.0], [99.4, 4911.0], [99.5, 4918.0], [99.6, 4918.0], [99.7, 4940.0], [99.8, 4940.0], [99.9, 4941.0], [100.0, 4941.0]], "isOverall": false, "label": "Post Morbidity", "isController": false}, {"data": [[0.0, 33.0], [0.1, 33.0], [0.2, 33.0], [0.3, 33.0], [0.4, 33.0], [0.5, 33.0], [0.6, 34.0], [0.7, 34.0], [0.8, 36.0], [0.9, 36.0], [1.0, 36.0], [1.1, 36.0], [1.2, 36.0], [1.3, 37.0], [1.4, 37.0], [1.5, 37.0], [1.6, 37.0], [1.7, 37.0], [1.8, 37.0], [1.9, 37.0], [2.0, 38.0], [2.1, 38.0], [2.2, 38.0], [2.3, 38.0], [2.4, 40.0], [2.5, 40.0], [2.6, 40.0], [2.7, 40.0], [2.8, 40.0], [2.9, 40.0], [3.0, 41.0], [3.1, 41.0], [3.2, 41.0], [3.3, 41.0], [3.4, 41.0], [3.5, 41.0], [3.6, 41.0], [3.7, 41.0], [3.8, 41.0], [3.9, 41.0], [4.0, 42.0], [4.1, 42.0], [4.2, 42.0], [4.3, 42.0], [4.4, 42.0], [4.5, 42.0], [4.6, 42.0], [4.7, 42.0], [4.8, 42.0], [4.9, 42.0], [5.0, 42.0], [5.1, 42.0], [5.2, 42.0], [5.3, 42.0], [5.4, 42.0], [5.5, 42.0], [5.6, 42.0], [5.7, 42.0], [5.8, 43.0], [5.9, 43.0], [6.0, 43.0], [6.1, 43.0], [6.2, 43.0], [6.3, 43.0], [6.4, 43.0], [6.5, 43.0], [6.6, 44.0], [6.7, 44.0], [6.8, 44.0], [6.9, 44.0], [7.0, 44.0], [7.1, 44.0], [7.2, 45.0], [7.3, 45.0], [7.4, 45.0], [7.5, 45.0], [7.6, 46.0], [7.7, 46.0], [7.8, 46.0], [7.9, 46.0], [8.0, 46.0], [8.1, 46.0], [8.2, 47.0], [8.3, 47.0], [8.4, 47.0], [8.5, 47.0], [8.6, 47.0], [8.7, 47.0], [8.8, 47.0], [8.9, 47.0], [9.0, 47.0], [9.1, 47.0], [9.2, 48.0], [9.3, 48.0], [9.4, 48.0], [9.5, 48.0], [9.6, 48.0], [9.7, 48.0], [9.8, 49.0], [9.9, 49.0], [10.0, 49.0], [10.1, 49.0], [10.2, 50.0], [10.3, 50.0], [10.4, 50.0], [10.5, 50.0], [10.6, 51.0], [10.7, 51.0], [10.8, 51.0], [10.9, 51.0], [11.0, 51.0], [11.1, 51.0], [11.2, 52.0], [11.3, 52.0], [11.4, 52.0], [11.5, 52.0], [11.6, 52.0], [11.7, 52.0], [11.8, 53.0], [11.9, 53.0], [12.0, 53.0], [12.1, 53.0], [12.2, 53.0], [12.3, 53.0], [12.4, 53.0], [12.5, 53.0], [12.6, 54.0], [12.7, 54.0], [12.8, 54.0], [12.9, 54.0], [13.0, 56.0], [13.1, 56.0], [13.2, 56.0], [13.3, 56.0], [13.4, 56.0], [13.5, 56.0], [13.6, 56.0], [13.7, 56.0], [13.8, 56.0], [13.9, 56.0], [14.0, 56.0], [14.1, 56.0], [14.2, 56.0], [14.3, 56.0], [14.4, 57.0], [14.5, 57.0], [14.6, 58.0], [14.7, 58.0], [14.8, 58.0], [14.9, 58.0], [15.0, 58.0], [15.1, 58.0], [15.2, 58.0], [15.3, 58.0], [15.4, 58.0], [15.5, 58.0], [15.6, 58.0], [15.7, 58.0], [15.8, 58.0], [15.9, 58.0], [16.0, 58.0], [16.1, 58.0], [16.2, 59.0], [16.3, 59.0], [16.4, 59.0], [16.5, 59.0], [16.6, 59.0], [16.7, 59.0], [16.8, 59.0], [16.9, 59.0], [17.0, 59.0], [17.1, 59.0], [17.2, 59.0], [17.3, 59.0], [17.4, 59.0], [17.5, 59.0], [17.6, 60.0], [17.7, 60.0], [17.8, 60.0], [17.9, 60.0], [18.0, 60.0], [18.1, 60.0], [18.2, 60.0], [18.3, 60.0], [18.4, 60.0], [18.5, 60.0], [18.6, 61.0], [18.7, 61.0], [18.8, 61.0], [18.9, 61.0], [19.0, 61.0], [19.1, 61.0], [19.2, 61.0], [19.3, 61.0], [19.4, 63.0], [19.5, 63.0], [19.6, 63.0], [19.7, 63.0], [19.8, 63.0], [19.9, 63.0], [20.0, 63.0], [20.1, 63.0], [20.2, 63.0], [20.3, 63.0], [20.4, 64.0], [20.5, 64.0], [20.6, 64.0], [20.7, 64.0], [20.8, 64.0], [20.9, 64.0], [21.0, 65.0], [21.1, 65.0], [21.2, 65.0], [21.3, 65.0], [21.4, 65.0], [21.5, 65.0], [21.6, 65.0], [21.7, 65.0], [21.8, 66.0], [21.9, 66.0], [22.0, 66.0], [22.1, 66.0], [22.2, 66.0], [22.3, 66.0], [22.4, 66.0], [22.5, 66.0], [22.6, 66.0], [22.7, 66.0], [22.8, 66.0], [22.9, 66.0], [23.0, 66.0], [23.1, 66.0], [23.2, 66.0], [23.3, 66.0], [23.4, 66.0], [23.5, 67.0], [23.6, 67.0], [23.7, 67.0], [23.8, 67.0], [23.9, 67.0], [24.0, 67.0], [24.1, 67.0], [24.2, 67.0], [24.3, 67.0], [24.4, 67.0], [24.5, 68.0], [24.6, 68.0], [24.7, 68.0], [24.8, 68.0], [24.9, 68.0], [25.0, 68.0], [25.1, 68.0], [25.2, 68.0], [25.3, 68.0], [25.4, 68.0], [25.5, 68.0], [25.6, 69.0], [25.7, 69.0], [25.8, 69.0], [25.9, 69.0], [26.0, 69.0], [26.1, 69.0], [26.2, 69.0], [26.3, 69.0], [26.4, 69.0], [26.5, 70.0], [26.6, 70.0], [26.7, 70.0], [26.8, 70.0], [26.9, 70.0], [27.0, 70.0], [27.1, 70.0], [27.2, 70.0], [27.3, 71.0], [27.4, 71.0], [27.5, 71.0], [27.6, 71.0], [27.7, 71.0], [27.8, 71.0], [27.9, 71.0], [28.0, 71.0], [28.1, 72.0], [28.2, 72.0], [28.3, 72.0], [28.4, 72.0], [28.5, 72.0], [28.6, 72.0], [28.7, 73.0], [28.8, 73.0], [28.9, 74.0], [29.0, 74.0], [29.1, 74.0], [29.2, 74.0], [29.3, 75.0], [29.4, 75.0], [29.5, 76.0], [29.6, 76.0], [29.7, 76.0], [29.8, 76.0], [29.9, 76.0], [30.0, 76.0], [30.1, 76.0], [30.2, 76.0], [30.3, 77.0], [30.4, 77.0], [30.5, 77.0], [30.6, 77.0], [30.7, 77.0], [30.8, 77.0], [30.9, 77.0], [31.0, 77.0], [31.1, 77.0], [31.2, 77.0], [31.3, 77.0], [31.4, 77.0], [31.5, 77.0], [31.6, 77.0], [31.7, 77.0], [31.8, 77.0], [31.9, 77.0], [32.0, 78.0], [32.1, 78.0], [32.2, 78.0], [32.3, 78.0], [32.4, 78.0], [32.5, 78.0], [32.6, 78.0], [32.7, 78.0], [32.8, 78.0], [32.9, 78.0], [33.0, 79.0], [33.1, 79.0], [33.2, 79.0], [33.3, 79.0], [33.4, 79.0], [33.5, 79.0], [33.6, 79.0], [33.7, 79.0], [33.8, 80.0], [33.9, 80.0], [34.0, 80.0], [34.1, 80.0], [34.2, 80.0], [34.3, 80.0], [34.4, 81.0], [34.5, 81.0], [34.6, 81.0], [34.7, 81.0], [34.8, 81.0], [34.9, 81.0], [35.0, 82.0], [35.1, 82.0], [35.2, 82.0], [35.3, 82.0], [35.4, 83.0], [35.5, 83.0], [35.6, 84.0], [35.7, 84.0], [35.8, 84.0], [35.9, 84.0], [36.0, 84.0], [36.1, 84.0], [36.2, 85.0], [36.3, 85.0], [36.4, 85.0], [36.5, 85.0], [36.6, 85.0], [36.7, 85.0], [36.8, 85.0], [36.9, 86.0], [37.0, 86.0], [37.1, 86.0], [37.2, 86.0], [37.3, 86.0], [37.4, 86.0], [37.5, 86.0], [37.6, 87.0], [37.7, 87.0], [37.8, 87.0], [37.9, 87.0], [38.0, 88.0], [38.1, 88.0], [38.2, 88.0], [38.3, 88.0], [38.4, 88.0], [38.5, 88.0], [38.6, 89.0], [38.7, 89.0], [38.8, 89.0], [38.9, 89.0], [39.0, 89.0], [39.1, 89.0], [39.2, 89.0], [39.3, 89.0], [39.4, 89.0], [39.5, 89.0], [39.6, 89.0], [39.7, 89.0], [39.8, 89.0], [39.9, 90.0], [40.0, 90.0], [40.1, 90.0], [40.2, 90.0], [40.3, 90.0], [40.4, 90.0], [40.5, 91.0], [40.6, 91.0], [40.7, 91.0], [40.8, 91.0], [40.9, 91.0], [41.0, 91.0], [41.1, 91.0], [41.2, 91.0], [41.3, 91.0], [41.4, 91.0], [41.5, 92.0], [41.6, 92.0], [41.7, 92.0], [41.8, 92.0], [41.9, 92.0], [42.0, 92.0], [42.1, 92.0], [42.2, 92.0], [42.3, 92.0], [42.4, 92.0], [42.5, 92.0], [42.6, 92.0], [42.7, 93.0], [42.8, 93.0], [42.9, 93.0], [43.0, 93.0], [43.1, 93.0], [43.2, 93.0], [43.3, 94.0], [43.4, 94.0], [43.5, 94.0], [43.6, 94.0], [43.7, 94.0], [43.8, 94.0], [43.9, 94.0], [44.0, 94.0], [44.1, 94.0], [44.2, 94.0], [44.3, 94.0], [44.4, 94.0], [44.5, 95.0], [44.6, 95.0], [44.7, 95.0], [44.8, 95.0], [44.9, 95.0], [45.0, 95.0], [45.1, 95.0], [45.2, 95.0], [45.3, 95.0], [45.4, 95.0], [45.5, 96.0], [45.6, 96.0], [45.7, 96.0], [45.8, 96.0], [45.9, 97.0], [46.0, 97.0], [46.1, 99.0], [46.2, 99.0], [46.3, 99.0], [46.4, 99.0], [46.5, 99.0], [46.6, 99.0], [46.7, 100.0], [46.8, 100.0], [46.9, 100.0], [47.0, 100.0], [47.1, 100.0], [47.2, 100.0], [47.3, 100.0], [47.4, 100.0], [47.5, 100.0], [47.6, 100.0], [47.7, 100.0], [47.8, 100.0], [47.9, 101.0], [48.0, 101.0], [48.1, 101.0], [48.2, 101.0], [48.3, 101.0], [48.4, 101.0], [48.5, 101.0], [48.6, 101.0], [48.7, 102.0], [48.8, 102.0], [48.9, 103.0], [49.0, 103.0], [49.1, 103.0], [49.2, 103.0], [49.3, 103.0], [49.4, 103.0], [49.5, 103.0], [49.6, 103.0], [49.7, 103.0], [49.8, 103.0], [49.9, 103.0], [50.0, 103.0], [50.1, 103.0], [50.2, 103.0], [50.3, 103.0], [50.4, 103.0], [50.5, 104.0], [50.6, 104.0], [50.7, 104.0], [50.8, 104.0], [50.9, 104.0], [51.0, 104.0], [51.1, 104.0], [51.2, 104.0], [51.3, 105.0], [51.4, 105.0], [51.5, 105.0], [51.6, 105.0], [51.7, 105.0], [51.8, 105.0], [51.9, 105.0], [52.0, 105.0], [52.1, 105.0], [52.2, 105.0], [52.3, 106.0], [52.4, 106.0], [52.5, 106.0], [52.6, 106.0], [52.7, 107.0], [52.8, 107.0], [52.9, 107.0], [53.0, 107.0], [53.1, 109.0], [53.2, 109.0], [53.3, 109.0], [53.4, 109.0], [53.5, 110.0], [53.6, 110.0], [53.7, 110.0], [53.8, 110.0], [53.9, 110.0], [54.0, 110.0], [54.1, 111.0], [54.2, 111.0], [54.3, 111.0], [54.4, 111.0], [54.5, 111.0], [54.6, 111.0], [54.7, 112.0], [54.8, 112.0], [54.9, 112.0], [55.0, 112.0], [55.1, 113.0], [55.2, 113.0], [55.3, 113.0], [55.4, 113.0], [55.5, 113.0], [55.6, 113.0], [55.7, 114.0], [55.8, 114.0], [55.9, 115.0], [56.0, 115.0], [56.1, 115.0], [56.2, 115.0], [56.3, 115.0], [56.4, 115.0], [56.5, 115.0], [56.6, 115.0], [56.7, 116.0], [56.8, 116.0], [56.9, 116.0], [57.0, 116.0], [57.1, 116.0], [57.2, 116.0], [57.3, 117.0], [57.4, 117.0], [57.5, 117.0], [57.6, 117.0], [57.7, 118.0], [57.8, 118.0], [57.9, 118.0], [58.0, 118.0], [58.1, 118.0], [58.2, 118.0], [58.3, 119.0], [58.4, 119.0], [58.5, 119.0], [58.6, 119.0], [58.7, 119.0], [58.8, 119.0], [58.9, 120.0], [59.0, 120.0], [59.1, 120.0], [59.2, 120.0], [59.3, 121.0], [59.4, 121.0], [59.5, 121.0], [59.6, 121.0], [59.7, 121.0], [59.8, 121.0], [59.9, 122.0], [60.0, 122.0], [60.1, 123.0], [60.2, 123.0], [60.3, 123.0], [60.4, 123.0], [60.5, 123.0], [60.6, 123.0], [60.7, 123.0], [60.8, 123.0], [60.9, 126.0], [61.0, 126.0], [61.1, 127.0], [61.2, 127.0], [61.3, 128.0], [61.4, 128.0], [61.5, 129.0], [61.6, 129.0], [61.7, 130.0], [61.8, 130.0], [61.9, 130.0], [62.0, 130.0], [62.1, 130.0], [62.2, 130.0], [62.3, 131.0], [62.4, 131.0], [62.5, 132.0], [62.6, 132.0], [62.7, 132.0], [62.8, 132.0], [62.9, 134.0], [63.0, 134.0], [63.1, 134.0], [63.2, 134.0], [63.3, 136.0], [63.4, 136.0], [63.5, 137.0], [63.6, 137.0], [63.7, 138.0], [63.8, 138.0], [63.9, 138.0], [64.0, 138.0], [64.1, 138.0], [64.2, 138.0], [64.3, 139.0], [64.4, 139.0], [64.5, 139.0], [64.6, 139.0], [64.7, 139.0], [64.8, 139.0], [64.9, 141.0], [65.0, 141.0], [65.1, 141.0], [65.2, 141.0], [65.3, 142.0], [65.4, 142.0], [65.5, 142.0], [65.6, 142.0], [65.7, 143.0], [65.8, 143.0], [65.9, 143.0], [66.0, 143.0], [66.1, 143.0], [66.2, 143.0], [66.3, 144.0], [66.4, 144.0], [66.5, 144.0], [66.6, 144.0], [66.7, 144.0], [66.8, 144.0], [66.9, 145.0], [67.0, 145.0], [67.1, 145.0], [67.2, 145.0], [67.3, 146.0], [67.4, 146.0], [67.5, 147.0], [67.6, 147.0], [67.7, 147.0], [67.8, 147.0], [67.9, 148.0], [68.0, 148.0], [68.1, 148.0], [68.2, 148.0], [68.3, 149.0], [68.4, 149.0], [68.5, 149.0], [68.6, 149.0], [68.7, 149.0], [68.8, 149.0], [68.9, 150.0], [69.0, 150.0], [69.1, 153.0], [69.2, 153.0], [69.3, 153.0], [69.4, 153.0], [69.5, 153.0], [69.6, 153.0], [69.7, 153.0], [69.8, 153.0], [69.9, 155.0], [70.0, 155.0], [70.1, 155.0], [70.2, 155.0], [70.3, 156.0], [70.4, 156.0], [70.5, 156.0], [70.6, 156.0], [70.7, 158.0], [70.8, 158.0], [70.9, 160.0], [71.0, 160.0], [71.1, 160.0], [71.2, 160.0], [71.3, 160.0], [71.4, 160.0], [71.5, 160.0], [71.6, 160.0], [71.7, 162.0], [71.8, 162.0], [71.9, 162.0], [72.0, 162.0], [72.1, 164.0], [72.2, 164.0], [72.3, 165.0], [72.4, 165.0], [72.5, 167.0], [72.6, 167.0], [72.7, 168.0], [72.8, 168.0], [72.9, 170.0], [73.0, 170.0], [73.1, 174.0], [73.2, 174.0], [73.3, 178.0], [73.4, 178.0], [73.5, 179.0], [73.6, 179.0], [73.7, 179.0], [73.8, 179.0], [73.9, 181.0], [74.0, 181.0], [74.1, 181.0], [74.2, 181.0], [74.3, 185.0], [74.4, 185.0], [74.5, 185.0], [74.6, 185.0], [74.7, 188.0], [74.8, 188.0], [74.9, 188.0], [75.0, 188.0], [75.1, 194.0], [75.2, 194.0], [75.3, 198.0], [75.4, 198.0], [75.5, 199.0], [75.6, 199.0], [75.7, 200.0], [75.8, 200.0], [75.9, 202.0], [76.0, 202.0], [76.1, 208.0], [76.2, 208.0], [76.3, 214.0], [76.4, 214.0], [76.5, 215.0], [76.6, 215.0], [76.7, 217.0], [76.8, 217.0], [76.9, 222.0], [77.0, 222.0], [77.1, 226.0], [77.2, 226.0], [77.3, 251.0], [77.4, 251.0], [77.5, 252.0], [77.6, 252.0], [77.7, 257.0], [77.8, 257.0], [77.9, 268.0], [78.0, 268.0], [78.1, 273.0], [78.2, 273.0], [78.3, 283.0], [78.4, 283.0], [78.5, 285.0], [78.6, 285.0], [78.7, 292.0], [78.8, 292.0], [78.9, 300.0], [79.0, 300.0], [79.1, 301.0], [79.2, 301.0], [79.3, 307.0], [79.4, 307.0], [79.5, 315.0], [79.6, 315.0], [79.7, 316.0], [79.8, 316.0], [79.9, 324.0], [80.0, 324.0], [80.1, 325.0], [80.2, 325.0], [80.3, 338.0], [80.4, 338.0], [80.5, 344.0], [80.6, 344.0], [80.7, 359.0], [80.8, 359.0], [80.9, 365.0], [81.0, 365.0], [81.1, 371.0], [81.2, 371.0], [81.3, 378.0], [81.4, 378.0], [81.5, 384.0], [81.6, 384.0], [81.7, 395.0], [81.8, 395.0], [81.9, 397.0], [82.0, 397.0], [82.1, 403.0], [82.2, 403.0], [82.3, 412.0], [82.4, 412.0], [82.5, 414.0], [82.6, 414.0], [82.7, 439.0], [82.8, 439.0], [82.9, 445.0], [83.0, 445.0], [83.1, 448.0], [83.2, 448.0], [83.3, 456.0], [83.4, 456.0], [83.5, 477.0], [83.6, 477.0], [83.7, 486.0], [83.8, 486.0], [83.9, 487.0], [84.0, 487.0], [84.1, 488.0], [84.2, 488.0], [84.3, 502.0], [84.4, 502.0], [84.5, 522.0], [84.6, 522.0], [84.7, 522.0], [84.8, 522.0], [84.9, 547.0], [85.0, 547.0], [85.1, 574.0], [85.2, 574.0], [85.3, 580.0], [85.4, 580.0], [85.5, 592.0], [85.6, 592.0], [85.7, 596.0], [85.8, 596.0], [85.9, 641.0], [86.0, 641.0], [86.1, 674.0], [86.2, 674.0], [86.3, 679.0], [86.4, 679.0], [86.5, 698.0], [86.6, 698.0], [86.7, 743.0], [86.8, 743.0], [86.9, 761.0], [87.0, 761.0], [87.1, 766.0], [87.2, 766.0], [87.3, 798.0], [87.4, 798.0], [87.5, 827.0], [87.6, 827.0], [87.7, 854.0], [87.8, 854.0], [87.9, 861.0], [88.0, 861.0], [88.1, 864.0], [88.2, 864.0], [88.3, 873.0], [88.4, 873.0], [88.5, 902.0], [88.6, 902.0], [88.7, 959.0], [88.8, 959.0], [88.9, 972.0], [89.0, 972.0], [89.1, 1006.0], [89.2, 1006.0], [89.3, 1088.0], [89.4, 1088.0], [89.5, 1099.0], [89.6, 1099.0], [89.7, 1167.0], [89.8, 1167.0], [89.9, 1212.0], [90.0, 1212.0], [90.1, 1328.0], [90.2, 1328.0], [90.3, 1333.0], [90.4, 1333.0], [90.5, 1384.0], [90.6, 1384.0], [90.7, 1387.0], [90.8, 1387.0], [90.9, 1424.0], [91.0, 1424.0], [91.1, 1430.0], [91.2, 1430.0], [91.3, 1492.0], [91.4, 1492.0], [91.5, 1538.0], [91.6, 1538.0], [91.7, 1648.0], [91.8, 1648.0], [91.9, 1690.0], [92.0, 1690.0], [92.1, 1787.0], [92.2, 1787.0], [92.3, 1840.0], [92.4, 1840.0], [92.5, 1880.0], [92.6, 1880.0], [92.7, 1892.0], [92.8, 1892.0], [92.9, 1910.0], [93.0, 1910.0], [93.1, 1925.0], [93.2, 1925.0], [93.3, 1967.0], [93.4, 1967.0], [93.5, 1996.0], [93.6, 1996.0], [93.7, 2012.0], [93.8, 2012.0], [93.9, 2022.0], [94.0, 2022.0], [94.1, 2105.0], [94.2, 2105.0], [94.3, 2122.0], [94.4, 2122.0], [94.5, 2163.0], [94.6, 2163.0], [94.7, 2225.0], [94.8, 2225.0], [94.9, 2236.0], [95.0, 2236.0], [95.1, 2255.0], [95.2, 2255.0], [95.3, 2303.0], [95.4, 2303.0], [95.5, 2340.0], [95.6, 2340.0], [95.7, 2371.0], [95.8, 2371.0], [95.9, 2412.0], [96.0, 2412.0], [96.1, 2485.0], [96.2, 2485.0], [96.3, 2499.0], [96.4, 2499.0], [96.5, 2513.0], [96.6, 2513.0], [96.7, 2526.0], [96.8, 2526.0], [96.9, 2557.0], [97.0, 2557.0], [97.1, 2576.0], [97.2, 2576.0], [97.3, 2589.0], [97.4, 2589.0], [97.5, 2614.0], [97.6, 2614.0], [97.7, 2681.0], [97.8, 2681.0], [97.9, 2690.0], [98.0, 2690.0], [98.1, 2725.0], [98.2, 2725.0], [98.3, 2727.0], [98.4, 2727.0], [98.5, 2737.0], [98.6, 2737.0], [98.7, 2743.0], [98.8, 2743.0], [98.9, 2761.0], [99.0, 2761.0], [99.1, 2796.0], [99.2, 2796.0], [99.3, 2812.0], [99.4, 2812.0], [99.5, 2828.0], [99.6, 2828.0], [99.7, 2842.0], [99.8, 2842.0], [99.9, 2898.0], [100.0, 2898.0]], "isOverall": false, "label": "Get Morbidity", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 233.0, "series": [{"data": [[0.0, 37.0], [1400.0, 1.0], [1500.0, 25.0], [1600.0, 41.0], [1700.0, 32.0], [1800.0, 43.0], [1900.0, 42.0], [2000.0, 47.0], [2100.0, 18.0], [2200.0, 22.0], [2300.0, 21.0], [2400.0, 23.0], [2500.0, 18.0], [2600.0, 15.0], [2700.0, 18.0], [2800.0, 21.0], [2900.0, 17.0], [3000.0, 17.0], [3100.0, 17.0], [3200.0, 10.0], [3300.0, 7.0], [3400.0, 5.0], [3500.0, 1.0], [3700.0, 1.0], [4000.0, 1.0]], "isOverall": false, "label": "Put Morbidity", "isController": false}, {"data": [[0.0, 12.0], [600.0, 4.0], [700.0, 4.0], [800.0, 2.0], [900.0, 6.0], [1000.0, 3.0], [1100.0, 5.0], [1200.0, 2.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 3.0], [100.0, 2.0], [1600.0, 18.0], [1700.0, 8.0], [1800.0, 10.0], [1900.0, 14.0], [2000.0, 23.0], [2100.0, 13.0], [2200.0, 5.0], [2300.0, 2.0], [2400.0, 6.0], [2500.0, 4.0], [2600.0, 6.0], [2700.0, 13.0], [2800.0, 18.0], [2900.0, 24.0], [3000.0, 20.0], [3100.0, 32.0], [3200.0, 49.0], [3300.0, 51.0], [200.0, 1.0], [3400.0, 54.0], [3500.0, 24.0], [3700.0, 18.0], [3600.0, 20.0], [3800.0, 8.0], [3900.0, 6.0], [300.0, 2.0], [400.0, 2.0], [500.0, 3.0]], "isOverall": false, "label": "Delete Morbidity", "isController": false}, {"data": [[0.0, 2.0], [1000.0, 1.0], [1500.0, 2.0], [100.0, 3.0], [1600.0, 26.0], [1700.0, 11.0], [1800.0, 23.0], [1900.0, 25.0], [2000.0, 18.0], [2100.0, 19.0], [2200.0, 19.0], [2300.0, 7.0], [2400.0, 12.0], [2500.0, 6.0], [2600.0, 12.0], [2800.0, 14.0], [2700.0, 30.0], [2900.0, 10.0], [3000.0, 17.0], [3100.0, 21.0], [3300.0, 48.0], [3200.0, 31.0], [3400.0, 43.0], [3500.0, 17.0], [3700.0, 9.0], [3600.0, 12.0], [3800.0, 8.0], [3900.0, 2.0], [4000.0, 4.0], [4300.0, 4.0], [4200.0, 3.0], [4100.0, 2.0], [4400.0, 4.0], [4600.0, 4.0], [4500.0, 5.0], [4800.0, 15.0], [4700.0, 7.0], [4900.0, 4.0]], "isOverall": false, "label": "Post Morbidity", "isController": false}, {"data": [[0.0, 233.0], [600.0, 4.0], [700.0, 4.0], [800.0, 5.0], [900.0, 3.0], [1000.0, 3.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 4.0], [1400.0, 3.0], [1500.0, 1.0], [100.0, 145.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 3.0], [1900.0, 4.0], [2000.0, 2.0], [2100.0, 3.0], [2200.0, 3.0], [2300.0, 3.0], [2400.0, 3.0], [2500.0, 5.0], [2600.0, 3.0], [2700.0, 6.0], [2800.0, 4.0], [200.0, 16.0], [300.0, 16.0], [400.0, 11.0], [500.0, 8.0]], "isOverall": false, "label": "Get Morbidity", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 70.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1448.0, "series": [{"data": [[0.0, 482.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 70.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1448.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 95.50185873605952, "minX": 1.6589403E12, "maxY": 96.24090121317163, "series": [{"data": [[1.65894036E12, 96.24090121317163], [1.6589403E12, 95.50185873605952]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65894036E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 26.0, "minX": 1.0, "maxY": 3076.5717884130995, "series": [{"data": [[49.0, 1867.0], [51.0, 1869.5], [52.0, 1884.0], [54.0, 1920.0], [59.0, 1962.0], [58.0, 1969.0], [63.0, 2002.0], [62.0, 2013.0], [67.0, 2044.0], [66.0, 2008.0], [64.0, 2012.0], [70.0, 2083.0], [75.0, 2093.0], [74.0, 2097.5], [72.0, 2095.0], [79.0, 2073.6666666666665], [77.0, 2068.5], [76.0, 2087.5], [83.0, 1963.3333333333333], [82.0, 1988.0], [81.0, 1988.5], [80.0, 2031.25], [87.0, 1569.6666666666667], [86.0, 1663.1666666666667], [85.0, 1812.3333333333333], [91.0, 1551.0], [90.0, 1575.0], [89.0, 1582.5], [94.0, 1603.0], [93.0, 1579.7272727272727], [92.0, 1598.0], [99.0, 2365.375], [98.0, 2219.0], [97.0, 1825.0], [96.0, 1692.5], [100.0, 2155.6024691358016]], "isOverall": false, "label": "Put Morbidity", "isController": false}, {"data": [[97.23599999999999, 2103.9759999999987]], "isOverall": false, "label": "Put Morbidity-Aggregated", "isController": false}, {"data": [[2.0, 429.0], [3.0, 374.0], [4.0, 457.0], [5.0, 510.0], [6.0, 296.0], [7.0, 521.0], [8.0, 563.0], [9.0, 601.0], [10.0, 609.0], [11.0, 646.0], [12.0, 703.0], [13.0, 733.0], [14.0, 779.0], [15.0, 780.0], [16.0, 859.0], [17.0, 861.0], [18.0, 905.0], [19.0, 907.0], [20.0, 944.0], [21.0, 964.0], [22.0, 967.0], [23.0, 991.0], [24.0, 1038.0], [25.0, 1054.0], [26.0, 1057.0], [27.0, 1106.0], [28.0, 1104.0], [29.0, 1171.0], [30.0, 1141.0], [31.0, 1174.0], [33.0, 1241.0], [32.0, 1227.0], [35.0, 1413.0], [34.0, 1375.0], [37.0, 1590.0], [36.0, 1512.0], [39.0, 1645.0], [38.0, 1643.0], [41.0, 1701.0], [40.0, 1647.0], [43.0, 1836.0], [42.0, 1725.0], [45.0, 1843.0], [44.0, 1794.0], [47.0, 1903.0], [46.0, 607.0], [49.0, 1694.0], [48.0, 1451.0], [51.0, 1923.0], [50.0, 1924.0], [53.0, 1916.0], [52.0, 1923.0], [55.0, 1924.0], [54.0, 1953.0], [57.0, 1970.0], [56.0, 1959.0], [59.0, 1996.0], [58.0, 1972.0], [61.0, 2009.0], [60.0, 2007.0], [63.0, 2057.0], [62.0, 2010.0], [67.0, 2095.0], [66.0, 34.0], [65.0, 2052.0], [64.0, 2035.0], [71.0, 2090.0], [70.0, 2111.0], [69.0, 2073.0], [68.0, 2072.0], [75.0, 2132.0], [74.0, 2123.0], [73.0, 2118.0], [72.0, 2124.0], [79.0, 2098.0], [78.0, 2116.0], [77.0, 2078.0], [76.0, 2098.0], [83.0, 2021.0], [82.0, 2048.0], [81.0, 2031.0], [80.0, 2084.0], [87.0, 1647.0], [86.0, 1784.0], [85.0, 68.0], [84.0, 1914.0], [91.0, 1587.0], [90.0, 1608.0], [89.0, 1655.0], [88.0, 1628.0], [95.0, 1662.0], [94.0, 1640.0], [93.0, 43.0], [92.0, 1633.0], [99.0, 2986.8], [98.0, 45.0], [97.0, 26.0], [96.0, 1675.0], [100.0, 3076.5717884130995], [1.0, 397.0]], "isOverall": false, "label": "Delete Morbidity", "isController": false}, {"data": [[90.09199999999993, 2749.224000000002]], "isOverall": false, "label": "Delete Morbidity-Aggregated", "isController": false}, {"data": [[90.0, 1568.0], [94.0, 1646.0], [93.0, 1618.0], [92.0, 1623.3333333333333], [99.0, 2870.9642857142862], [98.0, 2261.75], [97.0, 1978.5789473684213], [96.0, 1687.6666666666667], [100.0, 3019.6917808219187]], "isOverall": false, "label": "Post Morbidity", "isController": false}, {"data": [[99.668, 2935.3060000000014]], "isOverall": false, "label": "Post Morbidity-Aggregated", "isController": false}, {"data": [[32.0, 164.0], [34.0, 181.0], [37.0, 200.0], [41.0, 262.0], [44.0, 285.0], [45.0, 300.0], [48.0, 315.0], [50.0, 324.0], [51.0, 365.0], [54.0, 378.0], [55.0, 395.0], [57.0, 412.0], [61.0, 448.0], [64.0, 486.0], [65.0, 488.0], [67.0, 456.0], [69.0, 477.0], [70.0, 487.0], [72.0, 502.0], [75.0, 522.0], [77.0, 522.0], [80.0, 547.0], [84.0, 574.0], [87.0, 580.0], [90.0, 594.0], [95.0, 641.0], [99.0, 159.66666666666666], [100.0, 364.15517241379274], [26.0, 112.0], [30.0, 143.0]], "isOverall": false, "label": "Get Morbidity", "isController": false}, {"data": [[97.57000000000006, 363.8840000000003]], "isOverall": false, "label": "Get Morbidity-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1384.7, "minX": 1.6589403E12, "maxY": 94262.83333333333, "series": [{"data": [[1.65894036E12, 94262.83333333333], [1.6589403E12, 12656.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.65894036E12, 8956.966666666667], [1.6589403E12, 1384.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65894036E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 105.85316455696197, "minX": 1.6589403E12, "maxY": 4005.1399999999985, "series": [{"data": [[1.65894036E12, 2175.011337868482], [1.6589403E12, 1573.0169491525423]], "isOverall": false, "label": "Put Morbidity", "isController": false}, {"data": [[1.65894036E12, 2756.593939393942], [1.6589403E12, 2019.6]], "isOverall": false, "label": "Delete Morbidity", "isController": false}, {"data": [[1.65894036E12, 2667.8474999999985], [1.6589403E12, 4005.1399999999985]], "isOverall": false, "label": "Post Morbidity", "isController": false}, {"data": [[1.65894036E12, 105.85316455696197], [1.6589403E12, 1334.5714285714291]], "isOverall": false, "label": "Get Morbidity", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65894036E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 105.69367088607594, "minX": 1.6589403E12, "maxY": 4004.97, "series": [{"data": [[1.65894036E12, 2174.927437641722], [1.6589403E12, 1572.8135593220336]], "isOverall": false, "label": "Put Morbidity", "isController": false}, {"data": [[1.65894036E12, 2756.4767676767697], [1.6589403E12, 2019.4]], "isOverall": false, "label": "Delete Morbidity", "isController": false}, {"data": [[1.65894036E12, 2667.6850000000004], [1.6589403E12, 4004.97]], "isOverall": false, "label": "Post Morbidity", "isController": false}, {"data": [[1.65894036E12, 105.69367088607594], [1.6589403E12, 1334.361904761905]], "isOverall": false, "label": "Get Morbidity", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65894036E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.8253164556962029, "minX": 1.6589403E12, "maxY": 9.638095238095241, "series": [{"data": [[1.65894036E12, 0.8911564625850343], [1.6589403E12, 0.9322033898305082]], "isOverall": false, "label": "Put Morbidity", "isController": false}, {"data": [[1.65894036E12, 0.8909090909090909], [1.6589403E12, 1.4]], "isOverall": false, "label": "Delete Morbidity", "isController": false}, {"data": [[1.65894036E12, 0.9350000000000004], [1.6589403E12, 1.35]], "isOverall": false, "label": "Post Morbidity", "isController": false}, {"data": [[1.65894036E12, 0.8253164556962029], [1.6589403E12, 9.638095238095241]], "isOverall": false, "label": "Get Morbidity", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65894036E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 16.0, "minX": 1.6589403E12, "maxY": 4941.0, "series": [{"data": [[1.65894036E12, 3930.0], [1.6589403E12, 4941.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.65894036E12, 3432.0], [1.6589403E12, 4699.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.65894036E12, 3808.76], [1.6589403E12, 4924.6]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.65894036E12, 3568.0], [1.6589403E12, 4828.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.65894036E12, 16.0], [1.6589403E12, 23.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.65894036E12, 2105.0], [1.6589403E12, 2365.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65894036E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 127.5, "minX": 2.0, "maxY": 4870.5, "series": [{"data": [[2.0, 127.5], [33.0, 2772.0], [39.0, 2000.0], [40.0, 2125.5], [41.0, 2174.0], [42.0, 2720.0], [43.0, 2632.0], [44.0, 2770.0], [45.0, 1680.0], [46.0, 1860.5], [47.0, 3270.5], [49.0, 1633.0], [48.0, 2084.0], [51.0, 3290.0], [54.0, 3630.5], [55.0, 3116.0], [56.0, 3230.5], [62.0, 3302.5], [66.0, 2916.0], [69.0, 2048.0], [71.0, 1862.0], [68.0, 2092.5], [73.0, 2481.0], [76.0, 1999.0], [6.0, 4870.5], [19.0, 2725.0], [20.0, 1270.0], [22.0, 2113.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 76.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 125.0, "minX": 2.0, "maxY": 4870.5, "series": [{"data": [[2.0, 125.0], [33.0, 2771.0], [39.0, 2000.0], [40.0, 2125.5], [41.0, 2173.0], [42.0, 2720.0], [43.0, 2632.0], [44.0, 2770.0], [45.0, 1680.0], [46.0, 1860.5], [47.0, 3270.5], [49.0, 1633.0], [48.0, 2084.0], [51.0, 3290.0], [54.0, 3630.5], [55.0, 3116.0], [56.0, 3230.0], [62.0, 3302.0], [66.0, 2916.0], [69.0, 2048.0], [71.0, 1862.0], [68.0, 2092.5], [73.0, 2480.0], [76.0, 1999.0], [6.0, 4870.5], [19.0, 2725.0], [20.0, 1270.0], [22.0, 2113.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 76.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.15, "minX": 1.6589403E12, "maxY": 27.183333333333334, "series": [{"data": [[1.65894036E12, 27.183333333333334], [1.6589403E12, 6.15]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65894036E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 4.483333333333333, "minX": 1.6589403E12, "maxY": 28.85, "series": [{"data": [[1.65894036E12, 28.85], [1.6589403E12, 4.483333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65894036E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.6589403E12, "maxY": 8.25, "series": [{"data": [[1.65894036E12, 7.35], [1.6589403E12, 0.9833333333333333]], "isOverall": false, "label": "Put Morbidity-success", "isController": false}, {"data": [[1.65894036E12, 8.25], [1.6589403E12, 0.08333333333333333]], "isOverall": false, "label": "Delete Morbidity-success", "isController": false}, {"data": [[1.65894036E12, 6.666666666666667], [1.6589403E12, 1.6666666666666667]], "isOverall": false, "label": "Post Morbidity-success", "isController": false}, {"data": [[1.65894036E12, 6.583333333333333], [1.6589403E12, 1.75]], "isOverall": false, "label": "Get Morbidity-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65894036E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 4.483333333333333, "minX": 1.6589403E12, "maxY": 28.85, "series": [{"data": [[1.65894036E12, 28.85], [1.6589403E12, 4.483333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65894036E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -14400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

